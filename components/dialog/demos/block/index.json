{
    "setting": {
        "title": "自定义头部和底部",
        "order": 1
    },
    "catalogs": [],
    "contents": "<p>组件提供了<code>header</code>和<code>footer</code>扩展点（block），通过它们可以自定义头部和底部。有时候我们可能想完整去掉整个底部<code>footer</code>，这可以通过置空<code>footer-wrapper</code>这个扩展点做到。</p>\n<blockquote>\n<p>可以通过<code>parent()</code>引用到组件定义的默认内容</p>\n</blockquote>\n<blockquote>\n<p>vue会忽略所有空<code>slot</code>，所以如果要重置<code>footer-wrapper</code>可以传一个空<code>div</code>代替</p>\n</blockquote>\n",
    "index": 65,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n<span class=\"hljs-keyword\">import</span> Dialog <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dialog'</span>;\n\n&lt;div&gt;\n    &lt;Button ev-click={{ self.set.bind(self, 'show', true) }}\n        type=\"primary\"\n    &gt;Show Dialog&lt;/Button&gt;\n    &lt;Button ev-click={{ self.set.bind(self, 'show1', true) }}\n        type=\"primary\"\n    &gt;Show No Footer Dialog&lt;/Button&gt;\n    &lt;Dialog v-model=\"show\"&gt;\n        &lt;b:header&gt;\n            &lt;div class=\"k-title\"&gt;\n                &lt;i class=\"ion-person\"&gt;&lt;/i&gt;\n                Custom Header\n            &lt;/div&gt;\n        &lt;/b:header&gt;\n\n        Dialog Body \n\n        &lt;b:footer&gt;\n            Custom Footer\n            {{ parent() }}\n        &lt;/b:footer&gt;\n    &lt;/Dialog&gt;\n    &lt;Dialog v-model=\"show1\" title=\"No Footer\"&gt;\n        &lt;b:body&gt;body&lt;/b:body&gt;\n        &lt;b:footer-wrapper /&gt;\n    &lt;/Dialog&gt;\n&lt;/div&gt;</code></pre>"
        },
        {
            "language": "styl",
            "content": "<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-btn</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">16px</span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">\"show = true\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>Show Dialog<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">\"show1 = true\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>Show No Footer Dialog<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dialog</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"show\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-title\"</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\">\"header\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"ion-person\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n                Custom Header\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    \n            Dialog Body \n    \n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\">\"footer\"</span>&gt;</span>\n                Custom Footer\n                <span class=\"hljs-comment\">&lt;!-- vue不支持parent()引用，我们需要重新定义按钮 --&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">\"show = false\"</span>&gt;</span>取消<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">\"show = false\"</span>&gt;</span>确认<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dialog</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dialog</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"show1\"</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"No Footer\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\">\"body\"</span>&gt;</span>body<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\">\"footer-wrapper\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dialog</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n<span class=\"hljs-keyword\">import</span> Dialog <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dialog'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Button, Dialog\n    },\n    data() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">show</span>: <span class=\"hljs-literal\">false</span>,\n            <span class=\"hljs-attr\">show1</span>: <span class=\"hljs-literal\">false</span>,\n        }\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"stylus\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"./index.styl\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n<span class=\"hljs-keyword\">import</span> Dialog <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dialog'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    state = {}\n\n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> this.setState({show: true})}\n                    type=\"primary\"\n                &gt;Show Dialog<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> this.setState({show1: true})}\n                    type=\"primary\"\n                &gt;Show No Footer Dialog<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dialog</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{this.state.show}</span>\n                    <span class=\"hljs-attr\">ev</span>$<span class=\"hljs-attr\">change-value</span>=<span class=\"hljs-string\">{(c,</span> <span class=\"hljs-attr\">show</span>) =&gt;</span> this.setState({show})}\n                    b-header={\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"k-title\"</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"ion-person\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n                            Custom Header\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                    }\n                    b-footer={\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">React.Fragment</span>&gt;</span>\n                            Custom Footer\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> this.setState({show: false})}&gt;取消<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> this.setState({show: false})}&gt;确认<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">React.Fragment</span>&gt;</span>\n                    }\n                &gt;\n                    Dialog Body \n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dialog</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dialog</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{this.state.show1}</span>\n                    <span class=\"hljs-attr\">on</span>$<span class=\"hljs-attr\">change-value</span>=<span class=\"hljs-string\">{(c,</span> <span class=\"hljs-attr\">show1</span>) =&gt;</span> this.setState({show1})}\n                    title=\"No Footer\"\n                    b-body=\"body\"\n                    b-footer-wrapper=\"\"\n                &gt;\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dialog</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        )\n    }\n}</span></code></pre>"
        }
    ]
}