{
    "setting": {
        "title": "表单",
        "category": "组件",
        "order": 9,
        "sidebar": "doc"
    },
    "catalogs": [],
    "contents": "<h1 id='header-%E5%B1%9E%E6%80%A7'>属性</h1><h2 id='header-Form'>Form</h2><div class=\"k-table k-border\">\n                    <div class=\"k-table-wrapper\">\n                        <div class=\"k-thead\">\n                            <table>\n                                <thead><tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n                            </table>\n                        </div>\n                        <div class=\"k-tbody\">\n                            <table>\n                                <tbody><tr>\n<td>labelWidth</td>\n<td>定义所有子孙<code>FormItem</code>组件的<code>label</code>宽度</td>\n<td><code>String</code> &#124; <code>Number</code></td>\n<td><code>undefined</code></td>\n</tr>\n<tr>\n<td>layout</td>\n<td>指定表单布局方式</td>\n<td><code>&quot;horizontal&quot;</code> &#124; <code>&quot;vertical&quot;</code> &#124; <code>&quot;inline&quot;</code></td>\n<td><code>&quot;horizontal&quot;</code></td>\n</tr>\n<tr>\n<td>starOnRequired</td>\n<td>当<code>FormItem</code>必填时，是否在<code>label</code>前面展示<code>*</code></td>\n<td><code>Boolean</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div><h2 id='header-FormItem'>FormItem</h2><div class=\"k-table k-border\">\n                    <div class=\"k-table-wrapper\">\n                        <div class=\"k-thead\">\n                            <table>\n                                <thead><tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n                            </table>\n                        </div>\n                        <div class=\"k-tbody\">\n                            <table>\n                                <tbody><tr>\n<td>model</td>\n<td>指定需要验证的属性名称</td>\n<td><code>String</code></td>\n<td><code>undefined</code></td>\n</tr>\n<tr>\n<td>rules</td>\n<td>指定验证规则</td>\n<td><code>Object</code></td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td>messages</td>\n<td>指定验证失败时错误提示文案</td>\n<td><code>Object</code></td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td>classNames</td>\n<td>指定验证失败时添加的className</td>\n<td><code>Object</code></td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td>label</td>\n<td>指定表单每一项前面展示的标题</td>\n<td><code>String</code></td>\n<td><code>undefined</code></td>\n</tr>\n<tr>\n<td>htmlFor</td>\n<td>指定<code>label</code>的<code>for</code>属性</td>\n<td><code>String</code></td>\n<td><code>undefined</code></td>\n</tr>\n<tr>\n<td>hideLabel</td>\n<td>是否隐藏<code>label</code>，默认会展示<code>label</code>，即使该属性为空，也会展示占位元素</td>\n<td><code>Boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>isDirty</td>\n<td>组件是否被污染，组件只有被污染后，才会进行表单验证</td>\n<td><code>Boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>force</td>\n<td>如果组件被污染，让<code>FormItem</code>更新时，强制验证。你也可以配合<code>isDirty</code>属性，指定强制验证的时机 <a href=\"https://github.com/ksc-fe/kpc/issues/6\">#6</a></td>\n<td><code>Boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>fluid</td>\n<td><code>FormItem</code>的宽度默认是被子元素撑开的，添加该属性可以渲染<code>100%</code>的宽度</td>\n<td><code>Boolean</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div><h1 id='header-%E6%89%A9%E5%B1%95%E7%82%B9'>扩展点</h1><h2 id='header-FormItem'>FormItem</h2><div class=\"k-table k-border\">\n                    <div class=\"k-table-wrapper\">\n                        <div class=\"k-thead\">\n                            <table>\n                                <thead><tr>\n<th>名称</th>\n<th>说明</th>\n</tr>\n</thead>\n                            </table>\n                        </div>\n                        <div class=\"k-tbody\">\n                            <table>\n                                <tbody><tr>\n<td>label</td>\n<td>扩展前面的标题<code>label</code></td>\n</tr>\n<tr>\n<td>content</td>\n<td>扩展后面的内容，也可以使用<code>children</code>代替</td>\n</tr>\n<tr>\n<td>append</td>\n<td>往后面追加的内容</td>\n</tr>\n</tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div><h1 id='header-%E4%BA%8B%E4%BB%B6'>事件</h1><h2 id='header-Form'>Form</h2><div class=\"k-table k-border\">\n                    <div class=\"k-table-wrapper\">\n                        <div class=\"k-thead\">\n                            <table>\n                                <thead><tr>\n<th>事件名</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n                            </table>\n                        </div>\n                        <div class=\"k-tbody\">\n                            <table>\n                                <tbody><tr>\n<td>submit</td>\n<td>当表单提交并且所有规则都验证通过时触发</td>\n<td>1. <code>Event</code> <br /> 2. <code>Form</code>实例</td>\n</tr>\n</tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div><h1 id='header-%E6%96%B9%E6%B3%95'>方法</h1><h2 id='header-Form'>Form</h2><div class=\"k-table k-border\">\n                    <div class=\"k-table-wrapper\">\n                        <div class=\"k-thead\">\n                            <table>\n                                <thead><tr>\n<th>方法名</th>\n<th>说明</th>\n<th>参数</th>\n<th>返回值</th>\n</tr>\n</thead>\n                            </table>\n                        </div>\n                        <div class=\"k-tbody\">\n                            <table>\n                                <tbody><tr>\n<td>validate</td>\n<td>验证表单所有规则</td>\n<td>-</td>\n<td><code>Promise</code>: <code>.then(valid =&gt; {})</code>，<code>valid</code>为<code>true</code>验证成功，否则失败</td>\n</tr>\n<tr>\n<td>reset</td>\n<td>重置表单</td>\n<td>-</td>\n<td><code>undefined</code></td>\n</tr>\n<tr>\n<td>getFirstInvalidFormItem</td>\n<td>获取第一条出错的<code>FormItem</code></td>\n<td>-</td>\n<td><code>FormItem</code></td>\n</tr>\n</tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div><h1 id='header-%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95'>静态方法</h1><h2 id='header-Form'>Form</h2><p><code>Form</code>还提供了一个静态方法，用于全局添加验证规则，通过<code>Form.addMethod()</code>调用</p>\n<div class=\"k-table k-border\">\n                    <div class=\"k-table-wrapper\">\n                        <div class=\"k-thead\">\n                            <table>\n                                <thead><tr>\n<th>方法名</th>\n<th>说明</th>\n<th>参数</th>\n<th>返回值</th>\n</tr>\n</thead>\n                            </table>\n                        </div>\n                        <div class=\"k-tbody\">\n                            <table>\n                                <tbody><tr>\n<td>addMethod</td>\n<td>添加全局验证规则，这样在所有<code>FormItem</code>中如果需要使用该规则，只需要在<code>rules</code>中写上该规则名即可</td>\n<td>1. <code>name</code> 指定规则名称，不能重复 <br /> 2. <code>method</code> 指定该规则的验证函数，该函数返回<code>true</code>或<code>false</code>来标识验证成功或失败，如果返回字符串，则直接当做错误文案展示，该函数将传入3个参数：1. 当前验证的值，2. 当前验证的<code>FormItem</code>实例，3. 当前规则的参数，即使用该规则时指定的值 <br /> 3. <code>message</code> 验证失败时的错误提示文案，该值可以为字符串或者函数，如果为函数，传入参数同<code>method</code>，用于个性化文案提示 <br /> 4. <code>className</code> 验证失败时添加的类名</td>\n<td><code>undefined</code></td>\n</tr>\n</tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>",
    "index": 282
}