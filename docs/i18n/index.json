{
    "setting": {
        "title": "国际化",
        "order": 2,
        "sidebar": "doc"
    },
    "catalogs": [],
    "contents": "<h1 id='header-%E5%8D%95%E6%96%87%E4%BB%B6%E6%9E%84%E5%BB%BA%E7%89%88'>单文件构建版</h1><p>通过<code>&lt;script&gt;</code>直接引入对应的语言包文件，此时会自动注册相应的语言包。</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"//cdn.jsdelivr.net/npm/intact/dist/intact.min.js\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"//cdn.jsdelivr.net/npm/kpc/dist/kpc.min.js\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"//cdn.jsdelivr.net/npm/kpc/dist/i18n/en-US.min.js\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n<h1 id='header-%E9%80%9A%E8%BF%87webpack%E5%BC%95%E5%85%A5'>通过webpack引入</h1><p>如果你使用多文件构建版本，可以像下面这样，在入口文件中引入相应语言包，然后通过<code>localize</code>函数注册</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> {localize} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc'</span>;\n<span class=\"hljs-keyword\">import</span> i18n <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/i18n/en-US'</span>;\n\nlocalize(i18n);\n</code></pre>\n<h1 id='header-_%24(key%2C%20%5Bdata%5D)%E5%87%BD%E6%95%B0'><code>_$(key, [data])</code>函数</h1><p>kpc提供了一个<code>_$(key, [data])</code>函数，可以用来实现非kpc组件的国际化。首先我们使用上面提到的<code>localize(data)</code>函数来注册所有翻译字典</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> {localize} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc'</span>;\n<span class=\"hljs-keyword\">import</span> i18n <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/i18n/en-US'</span>;\n\n<span class=\"hljs-keyword\">const</span> dict = {\n    <span class=\"hljs-string\">'测试'</span>: <span class=\"hljs-string\">'test'</span>\n};\n\n<span class=\"hljs-comment\">// 将kpc提供的字典和自定义自定合并传给localize</span>\nlocalize({...dict, ...i18n});\n</code></pre>\n<p>然后我们就可以在代码中使用<code>_$</code>来获取翻译结果了</p>\n<pre><code class=\"hljs vdt\"><span class=\"hljs-keyword\">import</span> {<span class=\"hljs-number\">_</span><span class=\"hljs-variable\">$}</span> from <span class=\"hljs-string\">'kpc'</span>;\n\n&lt;Button&gt;{{ <span class=\"hljs-number\">_</span><span class=\"hljs-variable\">$(</span><span class=\"hljs-string\">'测试'</span>) }}&lt;<span class=\"hljs-regexp\">/Button&gt;</span>\n</code></pre>\n<h2 id='header-%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E'>参数说明</h2><ol>\n<li><p><code>key</code> 要获取翻译字典的<code>key</code>，如果在字典中找不到对应的<code>key</code>，则直接返回<code>key</code>。所以当我们使用中文当<code>key</code>时，无需为中文提供字典数据，它会直接返回中文<code>key</code>。支持类似<code>lodash</code>的通过path取值</p>\n</li>\n<li><p><code>data</code> 附加数据。通过它我们可以实现变量替换，以及英语中的单复数变换，例如：</p>\n</li>\n</ol>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> dict = {\n    <span class=\"hljs-string\">'最多选择{n}项'</span>: <span class=\"hljs-string\">'Please select no more than {n} item{s:n}.'</span>\n};\nlocalize(dict);\n\n_$(<span class=\"hljs-string\">'最多选择{n}项'</span>, {<span class=\"hljs-attr\">n</span>: <span class=\"hljs-number\">1</span>}); <span class=\"hljs-comment\">// output: Please select no more than 1 item.</span>\n_$(<span class=\"hljs-string\">'最多选择{n}项'</span>, {<span class=\"hljs-attr\">n</span>: <span class=\"hljs-number\">2</span>}); <span class=\"hljs-comment\">// output: Please select no more than 2 items.</span>\n</code></pre>\n<p>可以看到通过<code>{n}</code>语法，可以实现变量替换，其中<code>{s:n}</code>的含义为：当<code>n</code>大于<code>1</code>时，输出<code>s</code>。对于单复数需要变化后缀的情况可以这样做：例如<code>lea{f|ves:n}</code> <code>wom{an|en:n}</code></p>\n",
    "index": 150
}