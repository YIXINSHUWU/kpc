{
    "setting": {
        "title": "Intact中使用",
        "order": 0,
        "sidebar": "doc"
    },
    "catalogs": [],
    "contents": "<h1 id='header-%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C'>准备工作</h1><p>在学习使用kpc之前，假设你已经掌握了以下知识：</p>\n<ol>\n<li><a href=\"https://webpack.js.org/\">webpack</a> + <a href=\"https://babeljs.io/\">babel</a></li>\n<li><a href=\"http://javey.github.io/intact/\">intact</a></li>\n</ol>\n<h1 id='header-%E6%89%8B%E5%8A%A8%E5%BC%95%E5%85%A5'>手动引入</h1><h2 id='header-%E5%AE%89%E8%A3%85'>安装</h2><pre><code class=\"hljs js\">npm <span class=\"hljs-keyword\">install</span> kpc -S\n</code></pre>\n<h2 id='header-%E5%8D%95%E6%96%87%E4%BB%B6%E5%BC%95%E5%85%A5'>单文件引入</h2><p>如果你的项目没有使用webpack来构建，可以引入单文件构建版。将<code>kpc.css</code>和<code>kpc.js</code>在html文件中引入。此时所有组件都在<code>Kpc</code>命名空间下，例如<code>Kpc.Button</code> <code>Kpc.Table</code>等。</p>\n<p>另外你也可以调用<code>Kpc.install()</code>方法将组件放到全局空间下，此时为了避免命名冲突，所有组件名前加上<code>K</code>作为前缀，例如<code>KButton</code> <code>KTable</code>等</p>\n<h3 id='header-CDN'>CDN</h3><p>通过<a href=\"https://cdn.jsdelivr.net/npm/kpc/dist/\">cdn.jsdelivr.net/npm/kpc/dist/</a>可以直接引入最新版kpc，建议使用锁定版本地址，例如：<a href=\"https://cdn.jsdelivr.net/npm/kpc@0.5.14/dist/\">cdn.jsdelivr.net/npm/kpc@0.5.14/dist/</a></p>\n<pre><code class=\"hljs html\"><span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"utf-8\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>kpc-demo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">http-equiv</span>=<span class=\"hljs-string\">\"X-UA-Compatible\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"IE=edge, chrome=1\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">http-equiv</span>=<span class=\"hljs-string\">\"Cache-Control\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"no-siteapp\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/css\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"//cdn.jsdelivr.net/npm/kpc/dist/kpc.css\"</span> /&gt;</span>\n    <span class=\"hljs-comment\">&lt;!-- 将上述kpc.css替换成ksyun.css，可以使用ksyun主题 --&gt;</span>\n    <span class=\"hljs-comment\">&lt;!-- &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"//cdn.jsdelivr.net/npm/kpc/dist/ksyun.css\" /&gt; --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"app\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"//cdn.jsdelivr.net/npm/intact/dist/intact.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"//cdn.jsdelivr.net/npm/kpc/dist/kpc.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\">\n        Kpc.install();\n        <span class=\"hljs-keyword\">var</span> Page = Intact.extend({\n            <span class=\"hljs-attr\">template</span>: <span class=\"hljs-string\">'&lt;KButton ev-click={self.hello}&gt;Hello World&lt;/KButton&gt;'</span>,\n            <span class=\"hljs-attr\">hello</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n                KMessage.success(<span class=\"hljs-string\">'Welcome to kpc world!'</span>);\n            }\n        });\n        Intact.mount(Page, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">'app'</span>));\n    </span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n<h2 id='header-%E5%A4%9A%E6%96%87%E4%BB%B6css%E6%9E%84%E5%BB%BA%E7%89%88'>多文件css构建版</h2><p>当项目使用webpack构建时，可以使用kpc的多文件css构建版，此时可以做到按需加载，而非单文件全量引入。多文件构建版样式css和字体，需要通过<code>css-loader &amp; style-loader</code>和<code>file-loader</code>来引入</p>\n<blockquote>\n<p>此版本放在<code>@css</code>文件夹下，该文件名的意思是：所有的样式<code>stylus</code>文件都被编译成了<code>css</code>文件，并非只是放置css文件的目录。ES6语法的<code>js</code>和<code>vdt</code>文件也都被编译成了ES5语法的<code>js</code>文件，所以你无需<code>babel-loader</code>和<code>vdt-loader</code>来处理它们，仅仅只需<code>css-loader</code>和<code>style-loader</code>处理<code>css</code>文件即可。另外<code>file-loader</code>处理字体还是需要的。</p>\n</blockquote>\n<ol>\n<li>安装依赖</li>\n</ol>\n<pre><code class=\"hljs shell\">npm <span class=\"hljs-keyword\">install</span> kpc <span class=\"hljs-comment\">--save</span>\n\nnpm <span class=\"hljs-keyword\">install</span> css-loader <span class=\"hljs-keyword\">style</span>-loader <span class=\"hljs-keyword\">file</span>-loader <span class=\"hljs-comment\">--save-dev</span>\n</code></pre>\n<ol start=\"2\">\n<li>配置<code>webpack.config.js</code></li>\n</ol>\n<p>为了统一组件加载路径，我们可以加入<code>alias</code>设置。例如：<code>kpc/components/button</code>会指向<code>kpc/@css/components/button</code></p>\n<pre><code class=\"hljs js\"><span class=\"hljs-string\">module.exports</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">{</span>\n    <span class=\"hljs-string\">...</span>\n<span class=\"hljs-attr\">    resolve:</span> <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">        alias:</span> <span class=\"hljs-string\">{</span>\n            <span class=\"hljs-string\">//</span> <span class=\"hljs-string\">让kpc组件指向多文件构建版本，可以统一组件加载路径</span>\n<span class=\"hljs-attr\">            'kpc':</span> <span class=\"hljs-string\">'kpc/@css'</span>\n        <span class=\"hljs-string\">}</span>\n    <span class=\"hljs-string\">},</span>\n<span class=\"hljs-attr\">    module:</span> <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">        rules:</span> <span class=\"hljs-string\">[</span>\n            <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">                test:</span> <span class=\"hljs-string\">/\\.css$/,</span>\n<span class=\"hljs-attr\">                use:</span> <span class=\"hljs-string\">[</span>\n                    <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">                        loader:</span> <span class=\"hljs-string\">'style-loader'</span><span class=\"hljs-string\">,</span>\n                    <span class=\"hljs-string\">},</span>\n                    <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">                        loader:</span> <span class=\"hljs-string\">'css-loader'</span><span class=\"hljs-string\">,</span>\n<span class=\"hljs-attr\">                        options:</span> <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">                            url:</span> <span class=\"hljs-literal\">true</span>\n                        <span class=\"hljs-string\">}</span>\n                    <span class=\"hljs-string\">}</span>\n                <span class=\"hljs-string\">]</span>\n            <span class=\"hljs-string\">},</span>\n            <span class=\"hljs-string\">//</span> <span class=\"hljs-string\">引入字体文件</span>\n            <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">                test:</span> <span class=\"hljs-string\">/\\.(woff2?|eot|ttf|otf|svg)(\\?.*)?$/,</span>\n<span class=\"hljs-attr\">                use:</span> <span class=\"hljs-string\">[</span>\n                    <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">                        loader:</span> <span class=\"hljs-string\">'file-loader'</span><span class=\"hljs-string\">,</span>\n<span class=\"hljs-attr\">                        options:</span> <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">                            outputPath:</span> <span class=\"hljs-string\">'fonts/'</span><span class=\"hljs-string\">,</span>\n                        <span class=\"hljs-string\">}</span>\n                    <span class=\"hljs-string\">}</span>\n                <span class=\"hljs-string\">]</span>\n            <span class=\"hljs-string\">},</span>\n        <span class=\"hljs-string\">]</span>\n    <span class=\"hljs-string\">}</span>\n<span class=\"hljs-string\">}</span>\n</code></pre>\n<ol start=\"3\">\n<li>按需引入组件</li>\n</ol>\n<p>在需要使用组件的地方，引入组件</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> {Button, ButtonGroup} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>&gt;</span>button1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>&gt;</span>button2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span></span>\n</code></pre>\n<h2 id='header-%E5%A4%9A%E6%96%87%E4%BB%B6stylus%E6%9E%84%E5%BB%BA%E7%89%88'>多文件stylus构建版</h2><p>所谓stylus构建版与css构建版的区别是，样式使用的<code>stylus</code>而非编译后的css。当我们需要修改或者引入新主题时，通过该版本，可以很方便地实现。详见<a href=\"../theme/\">定制主题</a></p>\n<p>由于使用<code>stylus</code>，所以与构建版在使用上唯一的区别是需要引入<code>stylus-loader</code></p>\n<blockquote>\n<p>与多文件css构建版类似，此版本放在<code>@stylus</code>目录下</p>\n</blockquote>\n<ol>\n<li>新增依赖</li>\n</ol>\n<p>为了提供css兼容性，这里加入<code>autoprefixer</code></p>\n<pre><code class=\"hljs shell\">npm install postcss-loader autoprefixer stylus-loader --<span class=\"hljs-built_in\">save</span>-<span class=\"hljs-built_in\">dev</span>\n</code></pre>\n<ol start=\"2\">\n<li>修改<code>webpack.config.js</code></li>\n</ol>\n<p>将css加载配置修改为（通过<code>stylus-loader</code>的<code>import</code>配置，我们可以引入主题文件）：</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-string\">const</span> <span class=\"hljs-string\">autoprefixer</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">require('autoprefixer');</span>\n\n<span class=\"hljs-string\">module.export</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">{</span>\n    <span class=\"hljs-string\">...</span>\n<span class=\"hljs-attr\">    resolve:</span> <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">        alias:</span> <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">            'kpc':</span> <span class=\"hljs-string\">'kpc/@stylus'</span>\n        <span class=\"hljs-string\">}</span>\n    <span class=\"hljs-string\">},</span>\n<span class=\"hljs-attr\">    module:</span> <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">        rules:</span> <span class=\"hljs-string\">[</span>\n            <span class=\"hljs-string\">...</span>\n            <span class=\"hljs-string\">//</span> <span class=\"hljs-string\">编译stylus</span>\n            <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">                test:</span> <span class=\"hljs-string\">/\\.styl$/,</span>\n<span class=\"hljs-attr\">                use:</span> <span class=\"hljs-string\">[</span>\n                    <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">                        loader:</span> <span class=\"hljs-string\">'style-loader'</span>\n                    <span class=\"hljs-string\">},</span>\n                    <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">                        loader:</span> <span class=\"hljs-string\">'css-loader'</span><span class=\"hljs-string\">,</span> \n<span class=\"hljs-attr\">                        options:</span> <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">                            url:</span> <span class=\"hljs-literal\">true</span><span class=\"hljs-string\">,</span>\n                        <span class=\"hljs-string\">}</span>\n                    <span class=\"hljs-string\">},</span>\n                    <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">                        loader:</span> <span class=\"hljs-string\">'postcss-loader'</span><span class=\"hljs-string\">,</span>\n<span class=\"hljs-attr\">                        options:</span> <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">                            plugins:</span> <span class=\"hljs-string\">[</span>\n                                <span class=\"hljs-string\">autoprefixer({</span>\n<span class=\"hljs-attr\">                                    browsers:</span> <span class=\"hljs-string\">[</span>\n                                        <span class=\"hljs-string\">'last 2 versions'</span><span class=\"hljs-string\">,</span>\n                                        <span class=\"hljs-string\">'ie &gt;= 9'</span><span class=\"hljs-string\">,</span>\n                                    <span class=\"hljs-string\">],</span>\n                                <span class=\"hljs-string\">})</span>\n                            <span class=\"hljs-string\">],</span>\n                        <span class=\"hljs-string\">}</span>\n                    <span class=\"hljs-string\">},</span>\n                    <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">                        loader:</span> <span class=\"hljs-string\">'stylus-loader'</span><span class=\"hljs-string\">,</span> \n<span class=\"hljs-attr\">                        options:</span> <span class=\"hljs-string\">{</span>\n                            <span class=\"hljs-string\">'include css'</span><span class=\"hljs-string\">:</span> <span class=\"hljs-literal\">true</span><span class=\"hljs-string\">,</span>\n                            <span class=\"hljs-string\">'resolve url'</span><span class=\"hljs-string\">:</span> <span class=\"hljs-literal\">true</span><span class=\"hljs-string\">,</span> <span class=\"hljs-string\">//</span> <span class=\"hljs-string\">@since</span> <span class=\"hljs-string\">v0.6.0</span>\n<span class=\"hljs-attr\">                            sourceMap:</span> <span class=\"hljs-literal\">false</span><span class=\"hljs-string\">,</span>\n                            <span class=\"hljs-string\">//</span> <span class=\"hljs-string\">使用import引入主题文件，详见定制主题</span>\n                            <span class=\"hljs-string\">//</span> <span class=\"hljs-string\">'import'</span><span class=\"hljs-string\">:</span> <span class=\"hljs-string\">path.resolve(__dirname,</span> <span class=\"hljs-string\">'styles/themes/ksyun/index.styl'</span><span class=\"hljs-string\">),</span>\n                        <span class=\"hljs-string\">}</span>\n                    <span class=\"hljs-string\">}</span>\n                <span class=\"hljs-string\">]</span>\n            <span class=\"hljs-string\">},</span>\n            <span class=\"hljs-string\">//</span> <span class=\"hljs-string\">引入字体文件</span>\n            <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">                test:</span> <span class=\"hljs-string\">/\\.(woff2?|eot|ttf|otf|svg)(\\?.*)?$/,</span>\n<span class=\"hljs-attr\">                use:</span> <span class=\"hljs-string\">[</span>\n                    <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">                        loader:</span> <span class=\"hljs-string\">'file-loader'</span><span class=\"hljs-string\">,</span>\n<span class=\"hljs-attr\">                        options:</span> <span class=\"hljs-string\">{</span>\n<span class=\"hljs-attr\">                            outputPath:</span> <span class=\"hljs-string\">'fonts/'</span><span class=\"hljs-string\">,</span>\n                        <span class=\"hljs-string\">}</span>\n                    <span class=\"hljs-string\">}</span>\n                <span class=\"hljs-string\">]</span>\n            <span class=\"hljs-string\">},</span>\n        <span class=\"hljs-string\">]</span>\n    <span class=\"hljs-string\">}</span>\n<span class=\"hljs-string\">}</span>\n</code></pre>\n",
    "index": 52
}