{
    "setting": {
        "title": "自定义固定规则",
        "order": 1
    },
    "catalogs": [],
    "contents": "<p>通过<code>shouldFix</code>可以自定义元素固定的规则，此时设置的<code>top</code> <code>bottom</code>属性，仅仅用来设置固定的位置，并不用于固定规则的判断，当<code>shouldFix</code>返回<code>true</code>时，元素就会固定，否则不固定。本例中：只要滚动超过<code>100px</code>就会固定</p>\n<p>通过<code>exclude</code>可以在内部判断元素应该固定时，排除某些情况，让它不固定。本例中：当当前示例容器超出视野（viewport）之外时，不启用固定</p>\n",
    "index": 84,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Affix <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/affix'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"node\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Affix</span> <span class=\"hljs-attr\">top</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">150</span> }} <span class=\"hljs-attr\">shouldFix</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self._shouldFix</span> }}&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>fix at 150px from the top while scroll top 100px<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Affix</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Affix</span> <span class=\"hljs-attr\">bottom</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">0</span> }} <span class=\"hljs-attr\">exclude</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self._exclude</span> }} <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"__test\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>fix at the bottom only while this demo is in viewport<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Affix</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"
        },
        {
            "language": "styl",
            "content": "<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-affix</span>\n    <span class=\"hljs-attribute\">margin-bottom</span> <span class=\"hljs-number\">20px</span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    _shouldFix() {\n        <span class=\"hljs-comment\">// when scroll top greater than or equal to 100</span>\n        <span class=\"hljs-comment\">// fix it at 150px from top</span>\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">window</span>.pageYOffset &gt;= <span class=\"hljs-number\">100</span>;\n    }\n\n    _exclude() {\n        <span class=\"hljs-comment\">// when this demo is not in the viewport</span>\n        <span class=\"hljs-comment\">// don't fix it</span>\n        <span class=\"hljs-keyword\">const</span> {top} = <span class=\"hljs-keyword\">this</span>.refs.node.getBoundingClientRect();\n        <span class=\"hljs-keyword\">const</span> viewport = <span class=\"hljs-built_in\">document</span>.documentElement.clientHeight;\n\n        <span class=\"hljs-keyword\">return</span> top &gt; viewport; \n    }\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"node\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Affix</span> <span class=\"hljs-attr\">:top</span>=<span class=\"hljs-string\">\"150\"</span> <span class=\"hljs-attr\">:shouldFix</span>=<span class=\"hljs-string\">\"_shouldFix\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>fix at 150px from the top while scroll top 100px<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Affix</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Affix</span> <span class=\"hljs-attr\">:bottom</span>=<span class=\"hljs-string\">\"0\"</span> <span class=\"hljs-attr\">:exclude</span>=<span class=\"hljs-string\">\"_exclude\"</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"__test\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>fix at the bottom only while this demo is in viewport<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Affix</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> Affix <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/affix'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/button'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Affix, Button\n    },\n    <span class=\"hljs-attr\">methods</span>: {\n        _shouldFix() {\n            <span class=\"hljs-comment\">// when scroll top greater than or equal to 100</span>\n            <span class=\"hljs-comment\">// fix it at 150px from top</span>\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">window</span>.pageYOffset &gt;= <span class=\"hljs-number\">100</span>;\n        },\n        _exclude() {\n            <span class=\"hljs-comment\">// when this demo is not in the viewport</span>\n            <span class=\"hljs-comment\">// don't fix it</span>\n            <span class=\"hljs-keyword\">const</span> {top} = <span class=\"hljs-keyword\">this</span>.$refs.node.getBoundingClientRect();\n            <span class=\"hljs-keyword\">const</span> viewport = <span class=\"hljs-built_in\">document</span>.documentElement.clientHeight;\n        \n            <span class=\"hljs-keyword\">return</span> top &gt; viewport; \n        },\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"stylus\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"./index.styl\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> Affix <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/affix'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/button'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n        <span class=\"hljs-keyword\">this</span>._shouldFix = <span class=\"hljs-keyword\">this</span>._shouldFix.bind(<span class=\"hljs-keyword\">this</span>);\n        <span class=\"hljs-keyword\">this</span>._exclude = <span class=\"hljs-keyword\">this</span>._exclude.bind(<span class=\"hljs-keyword\">this</span>);\n    }\n\n    _shouldFix() {\n        <span class=\"hljs-comment\">// when scroll top greater than or equal to 100</span>\n        <span class=\"hljs-comment\">// fix it at 150px from top</span>\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">window</span>.pageYOffset &gt;= <span class=\"hljs-number\">100</span>;\n    }\n    \n    _exclude() {\n        <span class=\"hljs-comment\">// when this demo is not in the viewport</span>\n        <span class=\"hljs-comment\">// don't fix it</span>\n        <span class=\"hljs-keyword\">const</span> {top} = <span class=\"hljs-keyword\">this</span>.node.getBoundingClientRect();\n        <span class=\"hljs-keyword\">const</span> viewport = <span class=\"hljs-built_in\">document</span>.documentElement.clientHeight;\n    \n        <span class=\"hljs-keyword\">return</span> top &gt; viewport; \n    }\n    \n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">{i</span> =&gt;</span> this.node = i}&gt;\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Affix</span> <span class=\"hljs-attr\">top</span>=<span class=\"hljs-string\">{150}</span> <span class=\"hljs-attr\">shouldFix</span>=<span class=\"hljs-string\">{this._shouldFix}</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>fix at 150px from the top while scroll top 100px<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Affix</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Affix</span> <span class=\"hljs-attr\">bottom</span>=<span class=\"hljs-string\">{0}</span> <span class=\"hljs-attr\">exclude</span>=<span class=\"hljs-string\">{this._exclude}</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">{i</span> =&gt;</span> this.__test = i}&gt;\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>fix at the bottom only while this demo is in viewport<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Affix</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n        )\n    }\n}</code></pre>"
        },
        {
            "language": "ts",
            "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> {Component, ViewChild} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-meta\">@Component</span>({\n    selector: <span class=\"hljs-string\">'app-demo'</span>,\n    template: <span class=\"hljs-string\">`\n        &lt;div #node&gt;\n            &lt;k-affix [top]=\"150\" [shouldFix]=\"_shouldFix\"&gt;\n                &lt;k-button type=\"primary\"&gt;fix at 150px from the top while scroll top 100px&lt;/k-button&gt;\n            &lt;/k-affix&gt;\n            &lt;k-affix [bottom]=\"0\" [exclude]=\"_exclude\" #__test&gt;\n                &lt;k-button type=\"primary\"&gt;fix at the bottom only while this demo is in viewport&lt;/k-button&gt;\n            &lt;/k-affix&gt;\n        &lt;/div&gt;\n    `</span>,\n    styleUrls: [<span class=\"hljs-string\">'./index.styl'</span>],\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> AppDemoComponent {\n    <span class=\"hljs-meta\">@ViewChild</span>(<span class=\"hljs-string\">'node'</span>, {<span class=\"hljs-keyword\">static</span>: <span class=\"hljs-literal\">false</span>}) node;\n    <span class=\"hljs-meta\">@ViewChild</span>(<span class=\"hljs-string\">'__test'</span>, {<span class=\"hljs-keyword\">static</span>: <span class=\"hljs-literal\">false</span>}) __test;\n\n    _shouldFix = <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n        <span class=\"hljs-comment\">// when scroll top greater than or equal to 100</span>\n        <span class=\"hljs-comment\">// fix it at 150px from top</span>\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">window</span>.pageYOffset &gt;= <span class=\"hljs-number\">100</span>;\n    }\n    \n    _exclude = <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n        <span class=\"hljs-comment\">// when this demo is not in the viewport</span>\n        <span class=\"hljs-comment\">// don't fix it</span>\n        <span class=\"hljs-keyword\">const</span> {top} = <span class=\"hljs-keyword\">this</span>.node.nativeElement.getBoundingClientRect();\n        <span class=\"hljs-keyword\">const</span> viewport = <span class=\"hljs-built_in\">document</span>.documentElement.clientHeight;\n    \n        <span class=\"hljs-keyword\">return</span> top &gt; viewport; \n    }\n}</code></pre>"
        }
    ]
}