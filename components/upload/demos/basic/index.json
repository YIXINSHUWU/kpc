{
    "setting": {
        "title": "基本用法",
        "order": 0
    },
    "catalogs": [],
    "contents": "<p>组件默认为点击上传，并且会展示默认上传按钮；通过<code>action</code>指定上传的地址；如果要支持多选可以添加<code>multiple</code>属性；可以通过<code>tip</code>扩展点来添加提示信息；<code>beforeRemove</code>可以在删除文件之前进行确认，如果函数的返回值为<code>true</code>则删除文件，否则不删除，该函数可以是异步函数或者返回<code>Promise</code>对象</p>\n",
    "index": 12,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Upload <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/upload'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Upload</span> <span class=\"hljs-attr\">multiple</span>\n    <span class=\"hljs-attr\">beforeRemove</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self._beforeRemove</span> }}\n    <span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">\"//jsonplaceholder.typicode.com/posts/\"</span>\n    <span class=\"hljs-attr\">accept</span>=<span class=\"hljs-string\">\".jpg, .png\"</span>\n    <span class=\"hljs-attr\">maxSize</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">500</span> }}\n    <span class=\"hljs-attr\">ev-error</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self._showError</span> }}\n&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">b:tip</span>&gt;</span>只能上传JPG/PNG格式文件，且不超过500kb<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">b:tip</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Upload</span>&gt;</span></span></code></pre>"
        },
        {
            "language": "styl",
            "content": "<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-upload</span>\n    <span class=\"hljs-attribute\">width</span> <span class=\"hljs-number\">400px</span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">import</span> Dialog <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dialog'</span>;\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/message'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    _beforeRemove(file) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> {\n            <span class=\"hljs-keyword\">const</span> dialog = <span class=\"hljs-keyword\">new</span> Dialog({\n                <span class=\"hljs-attr\">size</span>: <span class=\"hljs-string\">'mini'</span>,\n                <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'确认删除'</span>,\n                <span class=\"hljs-attr\">children</span>: <span class=\"hljs-string\">`确认删除文件：<span class=\"hljs-subst\">${file.name}</span>`</span>, \n            });\n            dialog.show();\n            dialog.on(<span class=\"hljs-string\">'ok'</span>, resolve);\n            dialog.on(<span class=\"hljs-string\">'cancel'</span>, reject);\n        });\n    }\n\n    _showError(e) {\n        Message.error(e.message);\n    }\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Upload</span> <span class=\"hljs-attr\">multiple</span>\n        <span class=\"hljs-attr\">:beforeRemove</span>=<span class=\"hljs-string\">\"_beforeRemove\"</span>\n        <span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">\"//jsonplaceholder.typicode.com/posts/\"</span>\n        <span class=\"hljs-attr\">accept</span>=<span class=\"hljs-string\">\".jpg, .png\"</span>\n        <span class=\"hljs-attr\">:maxSize</span>=<span class=\"hljs-string\">\"500\"</span>\n        @<span class=\"hljs-attr\">error</span>=<span class=\"hljs-string\">\"_showError\"</span>\n    &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\">\"tip\"</span>&gt;</span>只能上传JPG/PNG格式文件，且不超过500kb<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Upload</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> Upload <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/upload'</span>;\n\n<span class=\"hljs-keyword\">import</span> Dialog <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dialog'</span>;\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/message'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Upload\n    },\n    <span class=\"hljs-attr\">methods</span>: {\n        _beforeRemove(file) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> {\n                <span class=\"hljs-keyword\">const</span> dialog = <span class=\"hljs-keyword\">new</span> Dialog({\n                    <span class=\"hljs-attr\">size</span>: <span class=\"hljs-string\">'mini'</span>,\n                    <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'确认删除'</span>,\n                    <span class=\"hljs-attr\">children</span>: <span class=\"hljs-string\">`确认删除文件：<span class=\"hljs-subst\">${file.name}</span>`</span>, \n                });\n                dialog.show();\n                dialog.on(<span class=\"hljs-string\">'ok'</span>, resolve);\n                dialog.on(<span class=\"hljs-string\">'cancel'</span>, reject);\n            });\n        },\n        _showError(e) {\n            Message.error(e.message);\n        },\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"stylus\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"./index.styl\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> Upload <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/upload'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>;\n<span class=\"hljs-keyword\">import</span> Dialog <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dialog'</span>;\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/message'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n        <span class=\"hljs-keyword\">this</span>._beforeRemove = <span class=\"hljs-keyword\">this</span>._beforeRemove.bind(<span class=\"hljs-keyword\">this</span>);\n        <span class=\"hljs-keyword\">this</span>._showError = <span class=\"hljs-keyword\">this</span>._showError.bind(<span class=\"hljs-keyword\">this</span>);\n    }\n\n    _beforeRemove(file) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> {\n            <span class=\"hljs-keyword\">const</span> dialog = <span class=\"hljs-keyword\">new</span> Dialog({\n                <span class=\"hljs-attr\">size</span>: <span class=\"hljs-string\">'mini'</span>,\n                <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'确认删除'</span>,\n                <span class=\"hljs-attr\">children</span>: <span class=\"hljs-string\">`确认删除文件：<span class=\"hljs-subst\">${file.name}</span>`</span>, \n            });\n            dialog.show();\n            dialog.on(<span class=\"hljs-string\">'ok'</span>, resolve);\n            dialog.on(<span class=\"hljs-string\">'cancel'</span>, reject);\n        });\n    }\n    \n    _showError(e) {\n        Message.error(e.message);\n    }\n    \n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Upload</span> <span class=\"hljs-attr\">multiple</span>\n                <span class=\"hljs-attr\">b-tip</span>=<span class=\"hljs-string\">{</span>&lt;<span class=\"hljs-attr\">React.Fragment</span>&gt;</span>只能上传JPG/PNG格式文件，且不超过500kb<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">React.Fragment</span>&gt;</span>}\n                beforeRemove={this._beforeRemove}\n                action=\"//jsonplaceholder.typicode.com/posts/\"\n                accept=\".jpg, .png\"\n                maxSize={500}\n                onError={this._showError}\n            &gt;\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Upload</span>&gt;</span>\n        )\n    }\n}</span></code></pre>"
        }
    ]
}