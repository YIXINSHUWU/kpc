{
    "setting": {
        "title": "组件尺寸",
        "order": 2
    },
    "catalogs": [],
    "contents": "<p>通过<code>size</code>可以定义尺寸: <code>default</code> <code>large</code> <code>small</code> <code>mini</code></p>\n",
    "index": 144,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Tag <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/tag'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tag</span> <span class=\"hljs-attr\">v-for</span>=<span class=\"hljs-string\">{{</span> ['<span class=\"hljs-attr\">large</span>', '<span class=\"hljs-attr\">default</span>', '<span class=\"hljs-attr\">small</span>', '<span class=\"hljs-attr\">mini</span>'] }}\n        <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">value</span> }}\n    &gt;</span>{{ value }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tag</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tag</span> <span class=\"hljs-attr\">v-for</span>=<span class=\"hljs-string\">{{</span> [['<span class=\"hljs-attr\">large</span>', '<span class=\"hljs-attr\">primary</span>'], ['<span class=\"hljs-attr\">default</span>', '<span class=\"hljs-attr\">warning</span>'], ['<span class=\"hljs-attr\">small</span>', '<span class=\"hljs-attr\">success</span>'], ['<span class=\"hljs-attr\">mini</span>', '<span class=\"hljs-attr\">danger</span>']] }}\n        <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">value</span>[<span class=\"hljs-attr\">0</span>] }}\n        <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">value</span>[<span class=\"hljs-attr\">1</span>] }}\n    &gt;</span>{{ value[0] }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tag</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tag</span> <span class=\"hljs-attr\">v-for</span>=<span class=\"hljs-string\">{{</span> ['<span class=\"hljs-attr\">large</span>', '<span class=\"hljs-attr\">default</span>', '<span class=\"hljs-attr\">small</span>', '<span class=\"hljs-attr\">mini</span>'] }}\n        <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>\n        <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">value</span> }}\n        <span class=\"hljs-attr\">closable</span>\n    &gt;</span>{{ value }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tag</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"
        },
        {
            "language": "styl",
            "content": "<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-tag</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">16px</span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tag</span> <span class=\"hljs-attr\">v-for</span>=<span class=\"hljs-string\">\"(value, key) in ['large', 'default', 'small', 'mini']\"</span>\n            <span class=\"hljs-attr\">:size</span>=<span class=\"hljs-string\">\"value\"</span>\n        &gt;</span>{{ value }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tag</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tag</span> <span class=\"hljs-attr\">v-for</span>=<span class=\"hljs-string\">\"(value, key) in [['large', 'primary'], ['default', 'warning'], ['small', 'success'], ['mini', 'danger']]\"</span>\n            <span class=\"hljs-attr\">:size</span>=<span class=\"hljs-string\">\"value[0]\"</span>\n            <span class=\"hljs-attr\">:type</span>=<span class=\"hljs-string\">\"value[1]\"</span>\n        &gt;</span>{{ value[0] }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tag</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tag</span> <span class=\"hljs-attr\">v-for</span>=<span class=\"hljs-string\">\"(value, key) in ['large', 'default', 'small', 'mini']\"</span>\n            <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>\n            <span class=\"hljs-attr\">:size</span>=<span class=\"hljs-string\">\"value\"</span>\n            <span class=\"hljs-attr\">closable</span>\n        &gt;</span>{{ value }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tag</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> Tag <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/tag'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Tag\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"stylus\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"./index.styl\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> Tag <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/tag'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n                {['large', 'default', 'small', 'mini'].map((value, key) =&gt; {\n                    return (\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tag</span>\n                            <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">{value}</span>\n                        &gt;</span>{value}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tag</span>&gt;</span>\n                    )\n                })}\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n                {[['large', 'primary'], ['default', 'warning'], ['small', 'success'], ['mini', 'danger']].map((value, key) =&gt; {\n                    return (\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tag</span>\n                            <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">{value[0]}</span>\n                            <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">{value[1]}</span>\n                        &gt;</span>{value[0]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tag</span>&gt;</span>\n                    )\n                })}\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n                {['large', 'default', 'small', 'mini'].map((value, key) =&gt; {\n                    return (\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tag</span>\n                            <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>\n                            <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">{value}</span>\n                            <span class=\"hljs-attr\">closable</span>\n                        &gt;</span>{value}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tag</span>&gt;</span>\n                    )\n                })}\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n        )\n    }\n}</code></pre>"
        },
        {
            "language": "ts",
            "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> {Component} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-meta\">@Component</span>({\n    selector: <span class=\"hljs-string\">'app-demo'</span>,\n    template: <span class=\"hljs-string\">`\n        &lt;div&gt;\n            &lt;k-tag *ngFor=\"let value of ['large', 'default', 'small', 'mini']; index as key\"\n                [size]=\"value\"\n            &gt;{{ value }}&lt;/k-tag&gt;\n            &lt;br /&gt;&lt;br /&gt;\n            &lt;k-tag *ngFor=\"let value of [['large', 'primary'], ['default', 'warning'], ['small', 'success'], ['mini', 'danger']]; index as key\"\n                [size]=\"value[0]\"\n                [type]=\"value[1]\"\n            &gt;{{ value[0] }}&lt;/k-tag&gt;\n            &lt;br /&gt;&lt;br /&gt;\n            &lt;k-tag *ngFor=\"let value of ['large', 'default', 'small', 'mini']; index as key\"\n                type=\"primary\"\n                [size]=\"value\"\n                [closable]=\"true\"\n            &gt;{{ value }}&lt;/k-tag&gt;\n        &lt;/div&gt;\n    `</span>,\n    styleUrls: [<span class=\"hljs-string\">'./index.styl'</span>],\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> AppDemoComponent { }</code></pre>"
        }
    ]
}