{
    "setting": {
        "title": "复杂例子",
        "order": 3
    },
    "catalogs": [],
    "contents": "<p>这里是个复杂的与<code>Table</code>联动的例子，这里演示了怎么通过<code>drag</code>扩展点自定义分割线，以及如何动态调整面板的大小，来模拟显示和隐藏面板的效果</p>\n",
    "index": 199,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Split <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/split'</span>;\n<span class=\"hljs-keyword\">import</span> {Table, TableColumn} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/table'</span>;\n<span class=\"hljs-keyword\">import</span> {Pagination} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/pagination'</span>;\n<span class=\"hljs-keyword\">import</span> {Tabs, Tab} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/tabs'</span>;\n<span class=\"hljs-keyword\">import</span> {FormItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/form'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n<span class=\"hljs-keyword\">import</span> Icon <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/icon'</span>;\n\n&lt;div class=\"split-container\"&gt;\n    &lt;Split mode=\"vertical\"\n        v-model:lastSize=\"size\"\n        class={{ {closed: self.get('size') === '0px'} }}\n        min={{ 10 }}\n    &gt;\n        &lt;b:first&gt;\n            &lt;Table data={{ self.get('data') }}\n                fixHeader\n                ref=\"table\"\n                rowCheckable={{ false }}\n                v-model:checkedKeys=\"checkedKeys\"\n                ev-click:row={{ self._onClickRow }}\n                ev-$change:checkedKeys={{ self._togglePanel }}\n            &gt;\n                &lt;TableColumn title=\"名称\" key=\"name\" /&gt;\n                &lt;TableColumn title=\"网段\" key=\"ip\" /&gt;\n                &lt;TableColumn title=\"操作\" key=\"op\"&gt;\n                    &lt;b:template params=\"data\"&gt;\n                        &lt;a&gt;删除&lt;/a&gt; \n                    &lt;/b:template&gt;\n                &lt;/TableColumn&gt;\n            &lt;/Table&gt;\n            &lt;Pagination total={{ 100 }} size=\"small\" /&gt;\n        &lt;/b:first&gt;\n        &lt;b:last&gt;\n            &lt;Button type=\"none\" icon class=\"close\"\n                ev-click={{ self._close }}\n            &gt;\n                &lt;Icon class=\"ion-ios-close-empty\" size=\"40\" /&gt;\n            &lt;/Button&gt;\n            &lt;Tabs v-model=\"tab\"&gt;\n                &lt;Tab value=\"detail\"&gt;详情&lt;/Tab&gt;\n                &lt;Tab value=\"data\"&gt;流量统计&lt;/Tab&gt;\n                &lt;Tab value=\"tag\"&gt;标签&lt;/Tab&gt;\n            &lt;/Tabs&gt;\n            &lt;div v-if={{ self.get('tab') === 'detail' }} class=\"tab-panel\"&gt;\n                &lt;FormItem label=\"创建时间：\"&gt;2018-09-28 17:31:25&lt;/FormItem&gt;\n                &lt;FormItem label=\"弹性IP：\"&gt;{{ self.get('selectedData.ip') }}&lt;/FormItem&gt;\n                &lt;FormItem label=\"名称：\"&gt;{{ self.get('selectedData.name') }}&lt;/FormItem&gt;\n            &lt;/div&gt;\n        &lt;/b:last&gt;\n        &lt;b:drag&gt;\n            &lt;Icon class=\"ion-drag\" /&gt;\n        &lt;/b:drag&gt;\n    &lt;/Split&gt;\n&lt;/div&gt;</code></pre>"
        },
        {
            "language": "styl",
            "content": "<pre><code class=\"hljs styl\">@require(<span class=\"hljs-string\">'~kpc/styles/themes/default.styl'</span>)\n@require(<span class=\"hljs-string\">'~kpc/components/table/variables.styl'</span>)\n\n<span class=\"hljs-selector-class\">.split-container</span>\n    <span class=\"hljs-attribute\">height</span> <span class=\"hljs-number\">500px</span> \n    <span class=\"hljs-attribute\">padding</span> <span class=\"hljs-number\">20px</span>\n    <span class=\"hljs-attribute\">font-size</span> <span class=\"hljs-number\">12px</span>\n    <span class=\"hljs-selector-class\">.k-first</span>\n        <span class=\"hljs-attribute\">border</span> <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-variable\">$table</span>-border-color\n        <span class=\"hljs-attribute\">border-top</span> none\n        <span class=\"hljs-attribute\">height</span> <span class=\"hljs-number\">100%</span>\n        <span class=\"hljs-attribute\">display</span> flex\n        <span class=\"hljs-attribute\">flex-direction</span> column\n    <span class=\"hljs-selector-class\">.k-table</span>\n        <span class=\"hljs-attribute\">flex</span> <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-selector-class\">.k-pagination</span>\n        <span class=\"hljs-attribute\">padding</span> <span class=\"hljs-number\">10px</span>\n        <span class=\"hljs-attribute\">border-top</span> <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-variable\">$table</span>-border-color\n    <span class=\"hljs-selector-class\">.tab-panel</span>\n        <span class=\"hljs-attribute\">padding</span> <span class=\"hljs-number\">10px</span>\n        <span class=\"hljs-selector-class\">.k-form-item</span>\n            <span class=\"hljs-attribute\">margin</span> <span class=\"hljs-number\">0</span>\n    <span class=\"hljs-selector-class\">.close</span>\n        <span class=\"hljs-attribute\">position</span> absolute\n        <span class=\"hljs-attribute\">right</span> <span class=\"hljs-number\">0</span>\n        <span class=\"hljs-attribute\">top</span> <span class=\"hljs-number\">0</span>\n        <span class=\"hljs-attribute\">z-index</span> <span class=\"hljs-number\">1</span>\n    <span class=\"hljs-selector-class\">.k-split</span><span class=\"hljs-selector-class\">.closed</span>\n        <span class=\"hljs-selector-class\">.k-line-wrapper</span>\n            <span class=\"hljs-attribute\">display</span> none\n    <span class=\"hljs-selector-class\">.ion-drag</span>\n        <span class=\"hljs-attribute\">position</span> relative\n        <span class=\"hljs-attribute\">z-index</span> <span class=\"hljs-number\">1</span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">import</span> {range} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/utils'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">data</span>: range(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">10</span>).map(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> {\n                <span class=\"hljs-keyword\">return</span> {\n                    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name '</span> + item,\n                    <span class=\"hljs-attr\">ip</span>: <span class=\"hljs-string\">'127.0.0.'</span> + item\n                };\n            }),\n            <span class=\"hljs-attr\">tab</span>: <span class=\"hljs-string\">'detail'</span>,\n            <span class=\"hljs-attr\">size</span>: <span class=\"hljs-string\">'0px'</span>,\n            <span class=\"hljs-attr\">selectedData</span>: <span class=\"hljs-literal\">undefined</span>,\n            <span class=\"hljs-attr\">checkedKeys</span>: [],\n        }\n    }\n\n    _close() {\n        <span class=\"hljs-keyword\">this</span>.set(<span class=\"hljs-string\">'size'</span>, <span class=\"hljs-string\">'0px'</span>);\n    }\n\n    _open() {\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.get(<span class=\"hljs-string\">'size'</span>) === <span class=\"hljs-string\">'0px'</span>) {\n            <span class=\"hljs-keyword\">this</span>.set(<span class=\"hljs-string\">'size'</span>, <span class=\"hljs-string\">'200px'</span>);\n        }\n    }\n\n    _togglePanel(table, keys) {\n        <span class=\"hljs-keyword\">if</span> (keys.length === <span class=\"hljs-number\">1</span>) {\n            <span class=\"hljs-comment\">// 只选中一行时，展开详情面板</span>\n            <span class=\"hljs-keyword\">const</span> data = table.getCheckedData()[<span class=\"hljs-number\">0</span>];\n            <span class=\"hljs-keyword\">this</span>.set(<span class=\"hljs-string\">'selectedData'</span>, data);\n            <span class=\"hljs-keyword\">this</span>._open();\n        } <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-keyword\">this</span>._close();\n        }\n    }\n\n    _onClickRow(data, index, key) {\n        <span class=\"hljs-keyword\">const</span> checkedKeys = <span class=\"hljs-keyword\">this</span>.get(<span class=\"hljs-string\">'checkedKeys'</span>);\n        <span class=\"hljs-keyword\">if</span> (checkedKeys.length === <span class=\"hljs-number\">1</span> &amp;&amp; checkedKeys[<span class=\"hljs-number\">0</span>] === key) {\n            <span class=\"hljs-comment\">// 如果只选中了一行，再次点击当前行，则取消选中</span>\n            key = [];\n        } <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-comment\">// 否则只选中当前行</span>\n            key = [key];\n        }\n        <span class=\"hljs-keyword\">this</span>.set(<span class=\"hljs-string\">'checkedKeys'</span>, key);\n    }\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"split-container\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Split</span> <span class=\"hljs-attr\">mode</span>=<span class=\"hljs-string\">\"vertical\"</span>\n            <span class=\"hljs-attr\">:lastSize.sync</span>=<span class=\"hljs-string\">\"size\"</span>\n            <span class=\"hljs-attr\">:class</span>=<span class=\"hljs-string\">\"{closed: size === '0px'}\"</span>\n            <span class=\"hljs-attr\">:min</span>=<span class=\"hljs-string\">\"10\"</span>\n        &gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\">\"first\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Table</span> <span class=\"hljs-attr\">:data</span>=<span class=\"hljs-string\">\"data\"</span>\n                    <span class=\"hljs-attr\">fixHeader</span>\n                    <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"table\"</span>\n                    <span class=\"hljs-attr\">:rowCheckable</span>=<span class=\"hljs-string\">\"false\"</span>\n                    <span class=\"hljs-attr\">:checkedKeys.sync</span>=<span class=\"hljs-string\">\"checkedKeys\"</span>\n                    @<span class=\"hljs-attr\">click:row</span>=<span class=\"hljs-string\">\"_onClickRow\"</span>\n                    @$<span class=\"hljs-attr\">change:checkedKeys</span>=<span class=\"hljs-string\">\"_togglePanel\"</span>\n                &gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">TableColumn</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"名称\"</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">\"name\"</span> /&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">TableColumn</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"网段\"</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">\"ip\"</span> /&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">TableColumn</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"操作\"</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">\"op\"</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\">\"template\"</span> <span class=\"hljs-attr\">slot-scope</span>=<span class=\"hljs-string\">\"data\"</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span>&gt;</span>删除<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span> \n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">TableColumn</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Table</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Pagination</span> <span class=\"hljs-attr\">:total</span>=<span class=\"hljs-string\">\"100\"</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\">\"last\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"none\"</span> <span class=\"hljs-attr\">icon</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"close\"</span>\n                    @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">\"_close\"</span>\n                &gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"ion-ios-close-empty\"</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"40\"</span> /&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tabs</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"tab\"</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tab</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"detail\"</span>&gt;</span>详情<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tab</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tab</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"data\"</span>&gt;</span>流量统计<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tab</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tab</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"tag\"</span>&gt;</span>标签<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tab</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tabs</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">v-if</span>=<span class=\"hljs-string\">\"tab === 'detail'\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"tab-panel\"</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">FormItem</span> <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">\"创建时间：\"</span>&gt;</span>2018-09-28 17:31:25<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">FormItem</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">FormItem</span> <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">\"弹性IP：\"</span>&gt;</span>{{ selectedData.ip }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">FormItem</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">FormItem</span> <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">\"名称：\"</span>&gt;</span>{{ selectedData.name }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">FormItem</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\">\"drag\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"ion-drag\"</span> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Split</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> Split <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/split'</span>;\n<span class=\"hljs-keyword\">import</span> {Table, TableColumn} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/table'</span>;\n<span class=\"hljs-keyword\">import</span> {Pagination} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/pagination'</span>;\n<span class=\"hljs-keyword\">import</span> {Tabs, Tab} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/tabs'</span>;\n<span class=\"hljs-keyword\">import</span> {FormItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/form'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/button'</span>;\n<span class=\"hljs-keyword\">import</span> Icon <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/icon'</span>;\n\n<span class=\"hljs-keyword\">import</span> {range} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/utils'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Split, Table, TableColumn, Pagination, Tabs, Tab, FormItem, Button, Icon\n    },\n    data() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">data</span>: range(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">10</span>).map(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> {\n                <span class=\"hljs-keyword\">return</span> {\n                    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name '</span> + item,\n                    <span class=\"hljs-attr\">ip</span>: <span class=\"hljs-string\">'127.0.0.'</span> + item\n                };\n            }),\n            <span class=\"hljs-attr\">tab</span>: <span class=\"hljs-string\">'detail'</span>,\n            <span class=\"hljs-attr\">size</span>: <span class=\"hljs-string\">'0px'</span>,\n            <span class=\"hljs-attr\">selectedData</span>: {},\n            <span class=\"hljs-attr\">checkedKeys</span>: [],\n        }\n    },\n    <span class=\"hljs-attr\">methods</span>: {\n        _close() {\n            <span class=\"hljs-keyword\">this</span>.size = <span class=\"hljs-string\">'0px'</span>;\n        },\n        _open() {\n            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.size === <span class=\"hljs-string\">'0px'</span>) {\n                <span class=\"hljs-keyword\">this</span>.size = <span class=\"hljs-string\">'200px'</span>;\n            }\n        },\n        _togglePanel(table, keys) {\n            <span class=\"hljs-keyword\">if</span> (keys.length === <span class=\"hljs-number\">1</span>) {\n                <span class=\"hljs-comment\">// 只选中一行时，展开详情面板</span>\n                <span class=\"hljs-keyword\">const</span> data = table.getCheckedData()[<span class=\"hljs-number\">0</span>];\n                <span class=\"hljs-keyword\">this</span>.selectedData = data;\n                <span class=\"hljs-keyword\">this</span>._open();\n            } <span class=\"hljs-keyword\">else</span> {\n                <span class=\"hljs-keyword\">this</span>._close();\n            }\n        },\n        _onClickRow(data, index, key) {\n            <span class=\"hljs-keyword\">const</span> checkedKeys = <span class=\"hljs-keyword\">this</span>.checkedKeys;\n            <span class=\"hljs-keyword\">if</span> (checkedKeys.length === <span class=\"hljs-number\">1</span> &amp;&amp; checkedKeys[<span class=\"hljs-number\">0</span>] === key) {\n                <span class=\"hljs-comment\">// 如果只选中了一行，再次点击当前行，则取消选中</span>\n                key = [];\n            } <span class=\"hljs-keyword\">else</span> {\n                <span class=\"hljs-comment\">// 否则只选中当前行</span>\n                key = [key];\n            }\n            <span class=\"hljs-keyword\">this</span>.checkedKeys = key;\n        },\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"stylus\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"./index.styl\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> Split <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/split'</span>;\n<span class=\"hljs-keyword\">import</span> {Table, TableColumn} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/table'</span>;\n<span class=\"hljs-keyword\">import</span> {Pagination} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/pagination'</span>;\n<span class=\"hljs-keyword\">import</span> {Tabs, Tab} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/tabs'</span>;\n<span class=\"hljs-keyword\">import</span> {FormItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/form'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/button'</span>;\n<span class=\"hljs-keyword\">import</span> Icon <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/icon'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>;\n<span class=\"hljs-keyword\">import</span> {range} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/utils'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n        <span class=\"hljs-keyword\">this</span>.state = {\n            <span class=\"hljs-attr\">data</span>: range(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">10</span>).map(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> {\n                <span class=\"hljs-keyword\">return</span> {\n                    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'name '</span> + item,\n                    <span class=\"hljs-attr\">ip</span>: <span class=\"hljs-string\">'127.0.0.'</span> + item\n                };\n            }),\n            <span class=\"hljs-attr\">tab</span>: <span class=\"hljs-string\">'detail'</span>,\n            <span class=\"hljs-attr\">size</span>: <span class=\"hljs-string\">'0px'</span>,\n            <span class=\"hljs-attr\">selectedData</span>: {},\n            <span class=\"hljs-attr\">checkedKeys</span>: [],\n        };\n        <span class=\"hljs-keyword\">this</span>._classNames = <span class=\"hljs-keyword\">this</span>._classNames.bind(<span class=\"hljs-keyword\">this</span>);\n        <span class=\"hljs-keyword\">this</span>._close = <span class=\"hljs-keyword\">this</span>._close.bind(<span class=\"hljs-keyword\">this</span>);\n        <span class=\"hljs-keyword\">this</span>._open = <span class=\"hljs-keyword\">this</span>._open.bind(<span class=\"hljs-keyword\">this</span>);\n        <span class=\"hljs-keyword\">this</span>._togglePanel = <span class=\"hljs-keyword\">this</span>._togglePanel.bind(<span class=\"hljs-keyword\">this</span>);\n    }\n    \n    _classNames(classNames) {\n        <span class=\"hljs-keyword\">const</span> ret = [];\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> classNames) {\n            <span class=\"hljs-keyword\">const</span> value = classNames[key];\n            <span class=\"hljs-keyword\">if</span> (value) {\n                ret.push(key);\n            }\n        }\n        <span class=\"hljs-keyword\">return</span> ret.join(<span class=\"hljs-string\">' '</span>);\n    }\n    \n    _close() {\n        <span class=\"hljs-keyword\">this</span>.setState({<span class=\"hljs-attr\">size</span>: <span class=\"hljs-string\">'0px'</span>});\n    }\n    \n    _open() {\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.state.size === <span class=\"hljs-string\">'0px'</span>) {\n            <span class=\"hljs-keyword\">this</span>.setState({<span class=\"hljs-attr\">size</span>: <span class=\"hljs-string\">'200px'</span>});\n        }\n    }\n    \n    _togglePanel(table, keys) {\n        <span class=\"hljs-keyword\">if</span> (keys.length === <span class=\"hljs-number\">1</span>) {\n            <span class=\"hljs-comment\">// 只选中一行时，展开详情面板</span>\n            <span class=\"hljs-keyword\">const</span> data = table.getCheckedData()[<span class=\"hljs-number\">0</span>];\n            <span class=\"hljs-keyword\">this</span>.setState({<span class=\"hljs-attr\">selectedData</span>: data});\n            <span class=\"hljs-keyword\">this</span>._open();\n        } <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-keyword\">this</span>._close();\n        }\n    }\n    \n    _onClickRow(data, index, key) {\n        <span class=\"hljs-keyword\">const</span> checkedKeys = <span class=\"hljs-keyword\">this</span>.state.checkedKeys;\n        <span class=\"hljs-keyword\">if</span> (checkedKeys.length === <span class=\"hljs-number\">1</span> &amp;&amp; checkedKeys[<span class=\"hljs-number\">0</span>] === key) {\n            <span class=\"hljs-comment\">// 如果只选中了一行，再次点击当前行，则取消选中</span>\n            key = [];\n        } <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-comment\">// 否则只选中当前行</span>\n            key = [key];\n        }\n        <span class=\"hljs-keyword\">this</span>.setState({<span class=\"hljs-attr\">checkedKeys</span>: key});\n    }\n    \n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            &lt;div className=\"split-container\"&gt;\n                &lt;Split mode=\"vertical\"\n                    b-first={&lt;React.Fragment&gt;\n                        &lt;Table data={this.state.data}\n                            fixHeader\n                            ref={i =&gt; this.table = i}\n                            rowCheckable={false}\n                            checkedKeys={this.state.checkedKeys}\n                            on$change-checkedKeys={(c, checkedKeys) =&gt; this.setState({checkedKeys})}\n                            onClick-row={this._onClickRow}\n                            on$change-checkedKeys={this._togglePanel}\n                        &gt;\n                            &lt;TableColumn title=\"名称\" key=\"name\" /&gt;\n                            &lt;TableColumn title=\"网段\" key=\"ip\" /&gt;\n                            &lt;TableColumn title=\"操作\" key=\"op\"\n                                b-template={(data) =&gt; {\n                                    return &lt;React.Fragment&gt;\n                                        &lt;a&gt;删除&lt;/a&gt; \n                                    &lt;/React.Fragment&gt;\n                                }}\n                            &gt;\n                            &lt;/TableColumn&gt;\n                        &lt;/Table&gt;\n                        &lt;Pagination total={100} size=\"small\" /&gt;\n                    &lt;/React.Fragment&gt;}\n                    b-last={&lt;React.Fragment&gt;\n                        &lt;Button type=\"none\" icon className=\"close\"\n                            onClick={this._close}\n                        &gt;\n                            &lt;Icon className=\"ion-ios-close-empty\" size=\"40\" /&gt;\n                        &lt;/Button&gt;\n                        &lt;Tabs value={this.state.tab} on$change-value={(c, tab) =&gt; this.setState({tab})}&gt;\n                            &lt;Tab value=\"detail\"&gt;详情&lt;/Tab&gt;\n                            &lt;Tab value=\"data\"&gt;流量统计&lt;/Tab&gt;\n                            &lt;Tab value=\"tag\"&gt;标签&lt;/Tab&gt;\n                        &lt;/Tabs&gt;\n                        {this.state.tab === 'detail' ?\n                            &lt;div className=\"tab-panel\"&gt;\n                                &lt;FormItem label=\"创建时间：\"&gt;2018-09-28 17:31:25&lt;/FormItem&gt;\n                                &lt;FormItem label=\"弹性IP：\"&gt;{this.state.selectedData.ip}&lt;/FormItem&gt;\n                                &lt;FormItem label=\"名称：\"&gt;{this.state.selectedData.name}&lt;/FormItem&gt;\n                            &lt;/div&gt; :\n                            undefined\n                        }\n                    &lt;/React.Fragment&gt;}\n                    b-drag={&lt;React.Fragment&gt;&lt;Icon className=\"ion-drag\" /&gt;&lt;/React.Fragment&gt;}\n                    lastSize={this.state.size}\n                    on$change-lastSize={(c, size) =&gt; this.setState({size})}\n                    className={this._classNames({closed: this.state.size === '0px'})}\n                    min={10}\n                &gt;\n                &lt;/Split&gt;\n            &lt;/div&gt;\n        )\n    }\n}</code></pre>"
        },
        {
            "language": "ts",
            "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> {Component, ViewChild} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">import</span> {range} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-angular/components/utils'</span>;\n\n\n<span class=\"hljs-meta\">@Component</span>({\n    selector: <span class=\"hljs-string\">'app-demo'</span>,\n    template: <span class=\"hljs-string\">`\n        &lt;div class=\"split-container\"&gt;\n            &lt;k-split mode=\"vertical\"\n                [(lastSize)]=\"size\"\n                [ngClass]=\"{closed: size === '0px'}\"\n                [min]=\"10\"\n            &gt;\n                &lt;ng-template #first&gt;\n                    &lt;k-table [data]=\"data\"\n                        [fixHeader]=\"true\"\n                        #table\n                        [rowCheckable]=\"false\"\n                        [(checkedKeys)]=\"checkedKeys\"\n                        (click-row)=\"_onClickRow($event)\"\n                        ($change-checkedKeys)=\"_togglePanel($event)\"\n                    &gt;\n                        &lt;k-table-column title=\"名称\" key=\"name\"&gt;&lt;/k-table-column&gt;\n                        &lt;k-table-column title=\"网段\" key=\"ip\"&gt;&lt;/k-table-column&gt;\n                        &lt;k-table-column title=\"操作\" key=\"op\"&gt;\n                            &lt;ng-template #template let-data=\"args[0]\"&gt;\n                                &lt;a&gt;删除&lt;/a&gt; \n                            &lt;/ng-template&gt;\n                        &lt;/k-table-column&gt;\n                    &lt;/k-table&gt;\n                    &lt;k-pagination [total]=\"100\" size=\"small\"&gt;&lt;/k-pagination&gt;\n                &lt;/ng-template&gt;\n                &lt;ng-template #last&gt;\n                    &lt;k-button type=\"none\" [icon]=\"true\" class=\"close\"\n                        (click)=\"_close($event)\"\n                    &gt;\n                        &lt;k-icon class=\"ion-ios-close-empty\" size=\"40\"&gt;&lt;/k-icon&gt;\n                    &lt;/k-button&gt;\n                    &lt;k-tabs [(value)]=\"tab\"&gt;\n                        &lt;k-tab value=\"detail\"&gt;详情&lt;/k-tab&gt;\n                        &lt;k-tab value=\"data\"&gt;流量统计&lt;/k-tab&gt;\n                        &lt;k-tab value=\"tag\"&gt;标签&lt;/k-tab&gt;\n                    &lt;/k-tabs&gt;\n                    &lt;div *ngIf=\"tab === 'detail'\" class=\"tab-panel\"&gt;\n                        &lt;k-form-item label=\"创建时间：\"&gt;2018-09-28 17:31:25&lt;/k-form-item&gt;\n                        &lt;k-form-item label=\"弹性IP：\"&gt;{{ selectedData.ip }}&lt;/k-form-item&gt;\n                        &lt;k-form-item label=\"名称：\"&gt;{{ selectedData.name }}&lt;/k-form-item&gt;\n                    &lt;/div&gt;\n                &lt;/ng-template&gt;\n                &lt;ng-template #drag&gt;\n                    &lt;k-icon class=\"ion-drag\"&gt;&lt;/k-icon&gt;\n                &lt;/ng-template&gt;\n            &lt;/k-split&gt;\n        &lt;/div&gt;\n    `</span>,\n    styleUrls: [<span class=\"hljs-string\">'./index.styl'</span>],\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> AppDemoComponent {\n    <span class=\"hljs-meta\">@ViewChild</span>(<span class=\"hljs-string\">'table'</span>, {<span class=\"hljs-keyword\">static</span>: <span class=\"hljs-literal\">false</span>}) table;\n\n    <span class=\"hljs-keyword\">private</span> data = range(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">10</span>).map(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> {\n        <span class=\"hljs-keyword\">return</span> {\n            name: <span class=\"hljs-string\">'name '</span> + item,\n            ip: <span class=\"hljs-string\">'127.0.0.'</span> + item\n        };\n    });\n    <span class=\"hljs-keyword\">private</span> tab = <span class=\"hljs-string\">'detail'</span>;\n    <span class=\"hljs-keyword\">private</span> size = <span class=\"hljs-string\">'0px'</span>;\n    <span class=\"hljs-keyword\">private</span> selectedData = {};\n    <span class=\"hljs-keyword\">private</span> checkedKeys = [];\n\n    _close() {\n        <span class=\"hljs-keyword\">this</span>.size = <span class=\"hljs-string\">'0px'</span>;\n    }\n    \n    _open() {\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.size === <span class=\"hljs-string\">'0px'</span>) {\n            <span class=\"hljs-keyword\">this</span>.size = <span class=\"hljs-string\">'200px'</span>;\n        }\n    }\n    \n    _togglePanel([table, keys]) {\n        <span class=\"hljs-keyword\">if</span> (keys.length === <span class=\"hljs-number\">1</span>) {\n            <span class=\"hljs-comment\">// 只选中一行时，展开详情面板</span>\n            <span class=\"hljs-keyword\">const</span> data = table.getCheckedData()[<span class=\"hljs-number\">0</span>];\n            <span class=\"hljs-keyword\">this</span>.selectedData = data;\n            <span class=\"hljs-keyword\">this</span>._open();\n        } <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-keyword\">this</span>._close();\n        }\n    }\n    \n    _onClickRow([data, index, key]) {\n        <span class=\"hljs-keyword\">const</span> checkedKeys = <span class=\"hljs-keyword\">this</span>.checkedKeys;\n        <span class=\"hljs-keyword\">if</span> (checkedKeys.length === <span class=\"hljs-number\">1</span> &amp;&amp; checkedKeys[<span class=\"hljs-number\">0</span>] === key) {\n            <span class=\"hljs-comment\">// 如果只选中了一行，再次点击当前行，则取消选中</span>\n            key = [];\n        } <span class=\"hljs-keyword\">else</span> {\n            <span class=\"hljs-comment\">// 否则只选中当前行</span>\n            key = [key];\n        }\n        <span class=\"hljs-keyword\">this</span>.checkedKeys = key;\n    }\n}</code></pre>"
        }
    ]
}