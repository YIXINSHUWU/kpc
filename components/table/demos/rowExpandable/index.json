{
    "setting": {
        "title": "行展开",
        "order": 6
    },
    "catalogs": [],
    "contents": "<p>通过<code>expand</code>block指定行展开后的模板内容。是否支持点击该行任何区域都展开内容，是由<code>rowExpandable</code>控制的，默认情况下它为<code>true</code>。你也可以将它设为<code>false</code>，来自定义展开逻辑。例如：点击某个<code>icon</code>后展开改行，而点击其它元素无效。自定义展开逻辑，需要调用<code>shrinkRow(key)</code>和<code>expandRow(key)</code>方法来实现收起和展开，或者修改<code>expandedKeys</code>属性值，来指定哪些<code>key</code>对应的行展开。</p>\n<ul>\n<li><code>rowExpandable</code>：是否点击整行即展开，类型<code>Boolean</code>，默认<code>true</code></li>\n<li><code>expandedKeys</code>：指定哪些<code>key</code>对应行展开，类型<code>Array</code>，默认<code>[]</code></li>\n</ul>\n",
    "index": 261,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Table, TableColumn} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/table'</span>;\n\n&lt;div class='no-data-template'&gt;\n    &lt;Table \n        data={{ self.get('data') }} \n        checkType=\"none\"\n        ref=\"__test1\"\n    &gt;\n        &lt;b:expand params=\"data, index\"&gt;\n            &lt;div&gt;Email: {{ data.email }}&lt;/div&gt;\n        &lt;/b:expand&gt;\n        &lt;TableColumn title=\"点击整行展开内容\" key=\"name\" /&gt;\n    &lt;/Table&gt;\n\n    &lt;Table \n        data={{ self.get('data') }} \n        checkType=\"none\"\n        rowExpandable={{ false }}\n        expandedKeys={{ self.get('expandedKeys') }}\n        ref=\"__test2\"\n    &gt;\n        &lt;b:expand params=\"data, index\"&gt;\n            &lt;div&gt;Email: {{ data.email }}&lt;/div&gt;\n        &lt;/b:expand&gt;\n        &lt;TableColumn title=\"点击+，展开内容\" key=\"name\"&gt;\n            &lt;b:template params=\"data, index\"&gt;\n                &lt;div&gt;\n                    &lt;i \n                        class={{ {\n                            'icon': true,\n                            'ion-ios-plus-outline': self.get('expandedKeys').indexOf(index) &lt; 0,\n                            'ion-ios-minus-outline': self.get('expandedKeys').indexOf(index) &gt; -1,\n                        } }}\n                        ev-click={{ self.toggleExpand.bind(self, data, index) }}\n                    &gt;&lt;/i&gt;\n                    {{ data.name }}\n                &lt;/div&gt;\n            &lt;/b:template&gt;\n        &lt;/TableColumn&gt;\n    &lt;/Table&gt;\n&lt;/div&gt;</code></pre>"
        },
        {
            "language": "styl",
            "content": "<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.no-data-template</span>\n    <span class=\"hljs-attribute\">display</span>: flex\n    <span class=\"hljs-selector-class\">.k-table</span>\n        <span class=\"hljs-attribute\">flex</span> <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-attribute\">margin-left</span>: <span class=\"hljs-number\">10px</span>\n<span class=\"hljs-selector-class\">.icon</span>\n    <span class=\"hljs-attribute\">vertical-align</span> middle\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">10px</span>\n    <span class=\"hljs-attribute\">cursor</span> pointer</code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">expandedKeys</span>: [],\n            <span class=\"hljs-attr\">data</span>: [\n                {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Javey'</span>, <span class=\"hljs-attr\">email</span>: <span class=\"hljs-string\">'jiawei23716@sina.com'</span>}, \n                {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Jiawei'</span>, <span class=\"hljs-attr\">email</span>: <span class=\"hljs-string\">'zoujiawei@gmail.com'</span>}\n            ],\n        };\n    }\n\n    toggleExpand(data, index) {\n        <span class=\"hljs-keyword\">const</span> expandedKeys = <span class=\"hljs-keyword\">this</span>.get(<span class=\"hljs-string\">'expandedKeys'</span>).slice(<span class=\"hljs-number\">0</span>);\n        <span class=\"hljs-keyword\">const</span> i = expandedKeys.indexOf(index);\n        <span class=\"hljs-keyword\">if</span> (i &gt; <span class=\"hljs-number\">-1</span>) {\n            expandedKeys.splice(i, <span class=\"hljs-number\">1</span>);\n        } <span class=\"hljs-keyword\">else</span> {\n            expandedKeys.push(index);\n        }\n        <span class=\"hljs-keyword\">this</span>.set(<span class=\"hljs-string\">'expandedKeys'</span>, expandedKeys);\n    }\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">'no-data-template'</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Table</span> \n            <span class=\"hljs-attr\">:data</span>=<span class=\"hljs-string\">\"data\"</span> \n            <span class=\"hljs-attr\">checkType</span>=<span class=\"hljs-string\">\"none\"</span>\n            <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"__test1\"</span>\n        &gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\">\"expand\"</span> <span class=\"hljs-attr\">slot-scope</span>=<span class=\"hljs-string\">\"data, index\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>Email: {{ data.email }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">TableColumn</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"点击整行展开内容\"</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">\"name\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Table</span>&gt;</span>\n    \n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Table</span> \n            <span class=\"hljs-attr\">:data</span>=<span class=\"hljs-string\">\"data\"</span> \n            <span class=\"hljs-attr\">checkType</span>=<span class=\"hljs-string\">\"none\"</span>\n            <span class=\"hljs-attr\">:rowExpandable</span>=<span class=\"hljs-string\">\"false\"</span>\n            <span class=\"hljs-attr\">:expandedKeys</span>=<span class=\"hljs-string\">\"expandedKeys\"</span>\n            <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"__test2\"</span>\n        &gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\">\"expand\"</span> <span class=\"hljs-attr\">slot-scope</span>=<span class=\"hljs-string\">\"data, index\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>Email: {{ data.email }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">TableColumn</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"点击+，展开内容\"</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">\"name\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\">\"template\"</span> <span class=\"hljs-attr\">slot-scope</span>=<span class=\"hljs-string\">\"data, index\"</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> \n                            <span class=\"hljs-attr\">:class</span>=<span class=\"hljs-string\">\"{\n                                'icon': true,\n                                'ion-ios-plus-outline': expandedKeys.indexOf(index) &lt; 0,\n                                'ion-ios-minus-outline': expandedKeys.indexOf(index) &gt; -1,\n                            }\"</span>\n                            @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">\"toggleExpand(data, index)\"</span>\n                        &gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n                        {{ data.name }}\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">TableColumn</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Table</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> {Table, TableColumn} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/table'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Table, TableColumn\n    },\n    data() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-string\">\"data\"</span>: [\n                {\n                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Javey\"</span>,\n                    <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"jiawei23716@sina.com\"</span>\n                },\n                {\n                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Jiawei\"</span>,\n                    <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"zoujiawei@gmail.com\"</span>\n                }\n            ],\n            <span class=\"hljs-string\">\"expandedKeys\"</span>: []\n        }\n    },\n    <span class=\"hljs-attr\">methods</span>: {\n        toggleExpand(data, index) {\n            <span class=\"hljs-keyword\">const</span> expandedKeys = <span class=\"hljs-keyword\">this</span>.expandedKeys.slice(<span class=\"hljs-number\">0</span>);\n            <span class=\"hljs-keyword\">const</span> i = expandedKeys.indexOf(index);\n            <span class=\"hljs-keyword\">if</span> (i &gt; <span class=\"hljs-number\">-1</span>) {\n                expandedKeys.splice(i, <span class=\"hljs-number\">1</span>);\n            } <span class=\"hljs-keyword\">else</span> {\n                expandedKeys.push(index);\n            }\n            <span class=\"hljs-keyword\">this</span>.expandedKeys = expandedKeys;\n        },\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"stylus\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"./index.styl\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> {Table, TableColumn} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/table'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n        <span class=\"hljs-keyword\">this</span>.state = {\n            <span class=\"hljs-string\">\"expandedKeys\"</span>: [],\n            <span class=\"hljs-string\">\"data\"</span>: [\n                {\n                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Javey\"</span>,\n                    <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"jiawei23716@sina.com\"</span>\n                },\n                {\n                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Jiawei\"</span>,\n                    <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"zoujiawei@gmail.com\"</span>\n                }\n            ]\n        };\n        <span class=\"hljs-keyword\">this</span>._classNames = <span class=\"hljs-keyword\">this</span>._classNames.bind(<span class=\"hljs-keyword\">this</span>);\n        <span class=\"hljs-keyword\">this</span>.toggleExpand = <span class=\"hljs-keyword\">this</span>.toggleExpand.bind(<span class=\"hljs-keyword\">this</span>);\n    }\n\n    _classNames(classNames) {\n        <span class=\"hljs-keyword\">const</span> ret = [];\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> classNames) {\n            <span class=\"hljs-keyword\">const</span> value = classNames[key];\n            <span class=\"hljs-keyword\">if</span> (value) {\n                ret.push(key);\n            }\n        }\n        <span class=\"hljs-keyword\">return</span> ret.join(<span class=\"hljs-string\">' '</span>);\n    }\n    \n    toggleExpand(data, index) {\n        <span class=\"hljs-keyword\">const</span> expandedKeys = <span class=\"hljs-keyword\">this</span>.state.expandedKeys.slice(<span class=\"hljs-number\">0</span>);\n        <span class=\"hljs-keyword\">const</span> i = expandedKeys.indexOf(index);\n        <span class=\"hljs-keyword\">if</span> (i &gt; <span class=\"hljs-number\">-1</span>) {\n            expandedKeys.splice(i, <span class=\"hljs-number\">1</span>);\n        } <span class=\"hljs-keyword\">else</span> {\n            expandedKeys.push(index);\n        }\n        <span class=\"hljs-keyword\">this</span>.setState({<span class=\"hljs-attr\">expandedKeys</span>: expandedKeys});\n    }\n    \n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            &lt;div className='no-data-template'&gt;\n                &lt;Table\n                    b-expand={(data, index) =&gt; {\n                        return &lt;React.Fragment&gt;\n                            &lt;div&gt;Email: {data.email}&lt;/div&gt;\n                        &lt;/React.Fragment&gt;\n                    }}\n                    data={this.state.data} \n                    checkType=\"none\"\n                    ref={i =&gt; this.__test1 = i}\n                &gt;\n                    &lt;TableColumn title=\"点击整行展开内容\" key=\"name\" /&gt;\n                &lt;/Table&gt;\n            \n                &lt;Table\n                    b-expand={(data, index) =&gt; {\n                        return &lt;React.Fragment&gt;\n                            &lt;div&gt;Email: {data.email}&lt;/div&gt;\n                        &lt;/React.Fragment&gt;\n                    }}\n                    data={this.state.data} \n                    checkType=\"none\"\n                    rowExpandable={false}\n                    expandedKeys={this.state.expandedKeys}\n                    ref={i =&gt; this.__test2 = i}\n                &gt;\n                    &lt;TableColumn title=\"点击+，展开内容\" key=\"name\"\n                        b-template={(data, index) =&gt; {\n                            return &lt;React.Fragment&gt;\n                                &lt;div&gt;\n                                    &lt;i \n                                        className={this._classNames({\n                                            'icon': true,\n                                            'ion-ios-plus-outline': this.state.expandedKeys.indexOf(index) &lt; 0,\n                                            'ion-ios-minus-outline': this.state.expandedKeys.indexOf(index) &gt; -1,\n                                        })}\n                                        onClick={this.toggleExpand.bind(this, data, index)}\n                                    &gt;&lt;/i&gt;\n                                    {data.name}\n                                &lt;/div&gt;\n                            &lt;/React.Fragment&gt;\n                        }}\n                    &gt;\n                    &lt;/TableColumn&gt;\n                &lt;/Table&gt;\n            &lt;/div&gt;\n        )\n    }\n}</code></pre>"
        }
    ]
}