{
    "setting": {
        "title": "固定时间点",
        "order": 2
    },
    "catalogs": [],
    "contents": "<p>当指定了<code>step</code>属性时，组件将展示成<code>Select</code>样式，只能选择固定的几个时间点。通过<code>min</code>和<code>max</code>限定选择时间范围（默认：00:00:00 ~ 23:59:59），<code>step</code>指定步长，它们值类型都为时间字符串</p>\n<blockquote>\n<p><code>@since v1.1.0</code> <code>step</code>不能隐藏“秒”，可以通过<code>showFomart</code>或<code>format</code>来格式化时间字符串</p>\n</blockquote>\n",
    "index": 162,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Timepicker <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/timepicker'</span>;\n\n&lt;div&gt;\n    &lt;Timepicker class=\"time\" v-model=\"time\" step=\"00:30:00\"/&gt;\n    You selected: {{ JSON.stringify(self.get('time')) }}\n    &lt;br /&gt;&lt;br /&gt;\n    &lt;Timepicker v-model=\"timeArray\" multiple clearable\n        step=\"00:30:00\" \n        min=\"09:00:00\"\n        max=\"18:00:00\"\n    /&gt;\n    You selected: {{ JSON.stringify(self.get('timeArray')) }}\n&lt;/div&gt;</code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Timepicker</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"time\"</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"time\"</span> <span class=\"hljs-attr\">step</span>=<span class=\"hljs-string\">\"00:30:00\"</span>/&gt;</span>\n        You selected: {{ stringify(time) }}\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Timepicker</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"timeArray\"</span> <span class=\"hljs-attr\">multiple</span> <span class=\"hljs-attr\">clearable</span>\n            <span class=\"hljs-attr\">step</span>=<span class=\"hljs-string\">\"00:30:00\"</span> \n            <span class=\"hljs-attr\">min</span>=<span class=\"hljs-string\">\"09:00:00\"</span>\n            <span class=\"hljs-attr\">max</span>=<span class=\"hljs-string\">\"18:00:00\"</span>\n        /&gt;</span>\n        You selected: {{ stringify(timeArray) }}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> Timepicker <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/timepicker'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Timepicker\n    },\n    data() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-string\">\"time\"</span>: <span class=\"hljs-literal\">null</span>,\n            <span class=\"hljs-string\">\"timeArray\"</span>: <span class=\"hljs-literal\">null</span>\n        }\n    },\n    <span class=\"hljs-attr\">methods</span>: {\n        stringify(data) { <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">JSON</span>.stringify(data); },\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> Timepicker <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/timepicker'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n        <span class=\"hljs-keyword\">this</span>.state = {};\n    }\n\n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            &lt;div&gt;\n                &lt;Timepicker className=\"time\" value={this.state.time} on$change-value={(c, time) =&gt; this.setState({time})} step=\"00:30:00\"/&gt;\n                You selected: {JSON.stringify(this.state.time)}\n                &lt;br /&gt;&lt;br /&gt;\n                &lt;Timepicker value={this.state.timeArray} on$change-value={(c, timeArray) =&gt; this.setState({timeArray})} multiple clearable\n                    step=\"00:30:00\" \n                    min=\"09:00:00\"\n                    max=\"18:00:00\"\n                /&gt;\n                You selected: {JSON.stringify(this.state.timeArray)}\n            &lt;/div&gt;\n        )\n    }\n}</code></pre>"
        },
        {
            "language": "ts",
            "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> {Component} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-meta\">@Component</span>({\n    selector: <span class=\"hljs-string\">'app-demo'</span>,\n    template: <span class=\"hljs-string\">`\n        &lt;div&gt;\n            &lt;k-timepicker class=\"time\" [(value)]=\"time\" step=\"00:30:00\"&gt;&lt;/k-timepicker&gt;\n            You selected: {{ time | json }}\n            &lt;br /&gt;&lt;br /&gt;\n            &lt;k-timepicker [(value)]=\"timeArray\" [multiple]=\"true\" [clearable]=\"true\"\n                step=\"00:30:00\" \n                min=\"09:00:00\"\n                max=\"18:00:00\"\n            &gt;&lt;/k-timepicker&gt;\n            You selected: {{ timeArray | json }}\n        &lt;/div&gt;\n    `</span>,\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> AppDemoComponent {\n    <span class=\"hljs-keyword\">private</span> time;\n    <span class=\"hljs-keyword\">private</span> timeArray;\n}</code></pre>"
        }
    ]
}