{
    "setting": {
        "title": "自定义label",
        "order": 3
    },
    "catalogs": [],
    "contents": "<p>通过<code>label</code>扩展点，我们可以定义更复杂的<code>label</code>，而不仅仅只是文本，当<code>Form</code>添加了<code>starOnRequired</code>属性时，必填的<code>FormItem</code>标签前面将自动添加<code>*</code></p>\n",
    "index": 179,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Form, FormItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/form'</span>;\n<span class=\"hljs-keyword\">import</span> {Input} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/input'</span>;\n\n&lt;Form starOnRequired&gt;\n    &lt;FormItem rules={{ {required: true} }} label=\"姓名\"&gt;\n        &lt;Input /&gt;\n    &lt;/FormItem&gt;\n    &lt;FormItem&gt;\n        &lt;b:label&gt;&lt;i class=\"ion-person\"/&gt; 姓名&lt;/b:label&gt;\n        &lt;Input /&gt;\n    &lt;/FormItem&gt;\n&lt;/Form&gt;</code></pre>"
        },
        {
            "language": "styl",
            "content": "<pre><code class=\"hljs styl\">@media (<span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">768px</span>) \n    <span class=\"hljs-selector-class\">.k-form-item</span>\n        <span class=\"hljs-attribute\">width</span> <span class=\"hljs-number\">100%</span>\n        <span class=\"hljs-selector-class\">.k-input</span>\n            <span class=\"hljs-attribute\">width</span> <span class=\"hljs-number\">100%</span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Form</span> <span class=\"hljs-attr\">starOnRequired</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">FormItem</span> <span class=\"hljs-attr\">:rules</span>=<span class=\"hljs-string\">\"{required: true}\"</span> <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">\"姓名\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Input</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">FormItem</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">FormItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\">\"label\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"ion-person\"</span>/&gt;</span> 姓名<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Input</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">FormItem</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Form</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> {Form, FormItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/form'</span>;\n<span class=\"hljs-keyword\">import</span> {Input} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/input'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Form, FormItem, Input\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"stylus\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"./index.styl\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> {Form, FormItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/form'</span>;\n<span class=\"hljs-keyword\">import</span> {Input} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/input'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n    }\n\n    <span class=\"hljs-comment\">// 注入_context上下文</span>\n    <span class=\"hljs-keyword\">static</span> childContextTypes = {\n        <span class=\"hljs-attr\">_context</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {}\n    }\n    \n    getChildContext() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">_context</span>: <span class=\"hljs-keyword\">this</span>\n        }\n    }\n    \n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            &lt;Form starOnRequired&gt;\n                &lt;FormItem rules={{required: true}} label=\"姓名\"&gt;\n                    &lt;Input /&gt;\n                &lt;/FormItem&gt;\n                &lt;FormItem\n                    b-label={&lt;React.Fragment&gt;&lt;i className=\"ion-person\"/&gt; 姓名&lt;/React.Fragment&gt;}\n                &gt;\n                    &lt;Input /&gt;\n                &lt;/FormItem&gt;\n            &lt;/Form&gt;\n        )\n    }\n}</code></pre>"
        }
    ]
}