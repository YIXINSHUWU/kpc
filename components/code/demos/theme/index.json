{
    "setting": {
        "title": "主题",
        "order": 2
    },
    "catalogs": [],
    "contents": "<p>通过<code>theme</code>属性可以指定主题，可选主题为：<code>vs</code>（默认） <code>vs-dark</code> <code>hc-black</code></p>\n<blockquote>\n<p>切换主题会引入相应的css文件，所以它是全局生效的，并不能对单个实例引用不同主题</p>\n</blockquote>\n",
    "index": 146,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Code <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/code'</span>;\n<span class=\"hljs-keyword\">import</span> {ButtonGroup, Button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    主题：<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"theme\"</span> <span class=\"hljs-attr\">checkType</span>=<span class=\"hljs-string\">\"radio\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">v-for</span>=<span class=\"hljs-string\">{{</span> ['<span class=\"hljs-attr\">vs</span>', '<span class=\"hljs-attr\">vs-dark</span>', '<span class=\"hljs-attr\">hc-black</span>'] }}\n            <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">value</span> }}\n        &gt;</span>{{ value }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Code</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"value\"</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">\"200px\"</span> <span class=\"hljs-attr\">theme</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.get</span>('<span class=\"hljs-attr\">theme</span>') }} /&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"
        },
        {
            "language": "styl",
            "content": "<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-btns</span>\n    <span class=\"hljs-attribute\">margin-bottom</span> <span class=\"hljs-number\">10px</span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">const</span> code = <span class=\"hljs-string\">`function test() {\n    console.log('hello world');\n}`</span>;\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">value</span>: code,\n            <span class=\"hljs-attr\">theme</span>: <span class=\"hljs-string\">'vs'</span>\n        }\n    }\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        主题：<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"theme\"</span> <span class=\"hljs-attr\">checkType</span>=<span class=\"hljs-string\">\"radio\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">v-for</span>=<span class=\"hljs-string\">\"(value, key) in ['vs', 'vs-dark', 'hc-black']\"</span>\n                <span class=\"hljs-attr\">:value</span>=<span class=\"hljs-string\">\"value\"</span>\n            &gt;</span>{{ value }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Code</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"value\"</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">\"200px\"</span> <span class=\"hljs-attr\">:theme</span>=<span class=\"hljs-string\">\"theme\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"actionscript\">\n<span class=\"hljs-meta\"><span class=\"hljs-meta-keyword\">import</span> Code from 'kpc-vue/components/code';</span>\n<span class=\"hljs-meta\"><span class=\"hljs-meta-keyword\">import</span> {ButtonGroup, Button} from 'kpc-vue/components/button';</span>\n\n<span class=\"hljs-keyword\">const</span> code = `<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">()</span> </span>{\n    console.log(<span class=\"hljs-string\">'hello world'</span>);\n}`;\nexport <span class=\"hljs-keyword\">default</span> {\n    components: {\n        Code, ButtonGroup, Button\n    },\n    data() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-string\">\"theme\"</span>: <span class=\"hljs-literal\">null</span>,\n            <span class=\"hljs-string\">\"value\"</span>: <span class=\"hljs-literal\">null</span>\n        }\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"stylus\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"./index.styl\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> Code <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/code'</span>;\n<span class=\"hljs-keyword\">import</span> {ButtonGroup, Button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/button'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>;\n<span class=\"hljs-keyword\">const</span> code = <span class=\"hljs-string\">`function test() {\n    console.log('hello world');\n}`</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n        <span class=\"hljs-keyword\">this</span>.state = {};\n    }\n\n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n                主题：<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{this.state.theme}</span> <span class=\"hljs-attr\">on</span>$<span class=\"hljs-attr\">change-value</span>=<span class=\"hljs-string\">{(c,</span> <span class=\"hljs-attr\">theme</span>) =&gt;</span> this.setState({theme})} checkType=\"radio\"&gt;\n                    {['vs', 'vs-dark', 'hc-black'].map((value, key) =&gt; {\n                        return (\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>\n                                <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{value}</span>\n                            &gt;</span>{value}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n                        )\n                    })}\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Code</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{this.state.value}</span> <span class=\"hljs-attr\">on</span>$<span class=\"hljs-attr\">change-value</span>=<span class=\"hljs-string\">{(c,</span> <span class=\"hljs-attr\">value</span>) =&gt;</span> this.setState({value})} height=\"200px\" theme={this.state.theme} /&gt;\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        )\n    }\n}</span></code></pre>"
        },
        {
            "language": "ts",
            "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> {Component} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">const</span> code = <span class=\"hljs-string\">`function test() {\n    console.log('hello world');\n}`</span>;\n\n<span class=\"hljs-meta\">@Component</span>({\n    selector: <span class=\"hljs-string\">'app-demo'</span>,\n    template: <span class=\"hljs-string\">`\n        &lt;div&gt;\n            主题：&lt;k-button-group [(value)]=\"theme\" checkType=\"radio\"&gt;\n                &lt;k-button *ngFor=\"let value of ['vs', 'vs-dark', 'hc-black']; index as key\"\n                    [value]=\"value\"\n                &gt;{{ value }}&lt;/k-button&gt;\n            &lt;/k-button-group&gt;\n            &lt;k-code [(value)]=\"value\" height=\"200px\" [theme]=\"theme\"&gt;&lt;/k-code&gt;\n        &lt;/div&gt;\n    `</span>,\n    styleUrls: [<span class=\"hljs-string\">'./index.styl'</span>],\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> AppDemoComponent {\n    <span class=\"hljs-keyword\">private</span> theme;\n    <span class=\"hljs-keyword\">private</span> value;\n}</code></pre>"
        }
    ]
}