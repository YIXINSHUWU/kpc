{
    "setting": {
        "title": "展示间隔点",
        "order": 4
    },
    "catalogs": [],
    "contents": "<p>给<code>Slider</code>指定<code>isShowStop</code>属性，可以展示间隔点，在间隔点不密集时使用。</p>\n",
    "index": 228,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Slider <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/slider'</span>;\n\n&lt;div&gt;\n    &lt;Slider value={{ 45 }} step={{ 5 }} isShowStop isShowInput={{ false }}/&gt;\n    &lt;Slider value={{ [0.3, 0.6] }} min={{ 0 }} max={{ 1 }} step={{ 0.1 }} isRange isShowStop /&gt;\n&lt;/div&gt;</code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Slider</span> <span class=\"hljs-attr\">:value</span>=<span class=\"hljs-string\">\"45\"</span> <span class=\"hljs-attr\">:step</span>=<span class=\"hljs-string\">\"5\"</span> <span class=\"hljs-attr\">isShowStop</span> <span class=\"hljs-attr\">:isShowInput</span>=<span class=\"hljs-string\">\"false\"</span>/&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Slider</span> <span class=\"hljs-attr\">:value</span>=<span class=\"hljs-string\">\"[0.3, 0.6]\"</span> <span class=\"hljs-attr\">:min</span>=<span class=\"hljs-string\">\"0\"</span> <span class=\"hljs-attr\">:max</span>=<span class=\"hljs-string\">\"1\"</span> <span class=\"hljs-attr\">:step</span>=<span class=\"hljs-string\">\"0.1\"</span> <span class=\"hljs-attr\">isRange</span> <span class=\"hljs-attr\">isShowStop</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> Slider <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/slider'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Slider\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> Slider <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/slider'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            &lt;div&gt;\n                &lt;Slider value={45} step={5} isShowStop isShowInput={false}/&gt;\n                &lt;Slider value={[0.3, 0.6]} min={0} max={1} step={0.1} isRange isShowStop /&gt;\n            &lt;/div&gt;\n        )\n    }\n}</code></pre>"
        },
        {
            "language": "ts",
            "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> {Component} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-meta\">@Component</span>({\n    selector: <span class=\"hljs-string\">'app-demo'</span>,\n    template: <span class=\"hljs-string\">`\n        &lt;div&gt;\n            &lt;k-slider [value]=\"45\" [step]=\"5\" [isShowStop]=\"true\" [isShowInput]=\"false\"&gt;&lt;/k-slider&gt;\n            &lt;k-slider [value]=\"[0.3, 0.6]\" [min]=\"0\" [max]=\"1\" [step]=\"0.1\" [isRange]=\"true\" [isShowStop]=\"true\"&gt;&lt;/k-slider&gt;\n        &lt;/div&gt;\n    `</span>,\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> AppDemoComponent { }</code></pre>"
        }
    ]
}