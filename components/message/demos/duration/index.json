{
    "setting": {
        "title": "自定义时长",
        "order": 1
    },
    "catalogs": [],
    "contents": "<p>提示默认会在5s后关闭，我们可以指定<code>duration</code>来自定义时长（单位ms）。当指定为<code>0</code>时，提示不会自动关闭。</p>\n",
    "index": 93,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {ButtonGroup, Button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.showMessage1</span> }}&gt;</span>close after 10s<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.showMessage2</span> }}&gt;</span>stick message<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span></span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/message'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    showMessage1() {\n        Message.info(<span class=\"hljs-string\">'close after 10s'</span>, <span class=\"hljs-number\">10000</span>);\n    }\n\n    showMessage2() {\n        Message.info(<span class=\"hljs-string\">'stick message'</span>, <span class=\"hljs-number\">0</span>);\n    }\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">\"showMessage1\"</span>&gt;</span>close after 10s<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">\"showMessage2\"</span>&gt;</span>stick message<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> {ButtonGroup, Button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/button'</span>;\n\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/message'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        ButtonGroup, Button\n    },\n    <span class=\"hljs-attr\">methods</span>: {\n        showMessage1() {\n            Message.info(<span class=\"hljs-string\">'close after 10s'</span>, <span class=\"hljs-number\">10000</span>);\n        },\n        showMessage2() {\n            Message.info(<span class=\"hljs-string\">'stick message'</span>, <span class=\"hljs-number\">0</span>);\n        },\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> {ButtonGroup, Button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/button'</span>;\n\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/message'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n        <span class=\"hljs-keyword\">this</span>.showMessage1 = <span class=\"hljs-keyword\">this</span>.showMessage1.bind(<span class=\"hljs-keyword\">this</span>);\n        <span class=\"hljs-keyword\">this</span>.showMessage2 = <span class=\"hljs-keyword\">this</span>.showMessage2.bind(<span class=\"hljs-keyword\">this</span>);\n    }\n\n    showMessage1() {\n        Message.info(<span class=\"hljs-string\">'close after 10s'</span>, <span class=\"hljs-number\">10000</span>);\n    }\n    \n    showMessage2() {\n        Message.info(<span class=\"hljs-string\">'stick message'</span>, <span class=\"hljs-number\">0</span>);\n    }\n    \n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.showMessage1}</span>&gt;</span>close after 10s<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.showMessage2}</span>&gt;</span>stick message<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span></span>\n        )\n    }\n}</code></pre>"
        },
        {
            "language": "ts",
            "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> {Component} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-angular/components/message'</span>;\n\n\n<span class=\"hljs-meta\">@Component</span>({\n    selector: <span class=\"hljs-string\">'app-demo'</span>,\n    template: <span class=\"hljs-string\">`\n        &lt;k-button-group&gt;\n            &lt;k-button (click)=\"showMessage1($event)\"&gt;close after 10s&lt;/k-button&gt;\n            &lt;k-button (click)=\"showMessage2($event)\"&gt;stick message&lt;/k-button&gt;\n        &lt;/k-button-group&gt;\n    `</span>,\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> AppDemoComponent {\n    showMessage1() {\n        Message.info(<span class=\"hljs-string\">'close after 10s'</span>, <span class=\"hljs-number\">10000</span>);\n    }\n    \n    showMessage2() {\n        Message.info(<span class=\"hljs-string\">'stick message'</span>, <span class=\"hljs-number\">0</span>);\n    }\n}</code></pre>"
        }
    ]
}