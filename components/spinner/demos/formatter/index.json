{
    "setting": {
        "title": "格式化展示",
        "order": 4
    },
    "catalogs": [],
    "contents": "<p>格式化展示的值有两种方式：</p>\n<ol>\n<li>通过<code>formatter</code>和<code>parser</code>来定义格式化和解析的函数</li>\n<li>对于简单的添加单位的情况，组件提供了简单的使用方式，通过<code>prefix</code>定义前缀，<code>suffix</code>定义后缀</li>\n</ol>\n<blockquote>\n<p>当<code>formatter / parser</code>和<code>prefix / suffix</code>同时定义时，前者的优先级更高</p>\n</blockquote>\n",
    "index": 217,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Spinner <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/spinner'</span>;\n\n&lt;div&gt;\n    &lt;Spinner vertical \n        v-model=\"money\"\n        formatter={{ value =&gt; ('￥' + value).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') }}\n        parser={{ value =&gt; value.replace(/￥|,/g, '') }}\n    /&gt;\n    &lt;Spinner vertical \n        prefix=\"增长率 \"\n        suffix=\"%\"\n        v-model=\"percent\"\n    /&gt;\n&lt;/div&gt;</code></pre>"
        },
        {
            "language": "styl",
            "content": "<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-spinner</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">16px</span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">money</span>: <span class=\"hljs-number\">1000</span>,\n            <span class=\"hljs-attr\">percent</span>: <span class=\"hljs-number\">78</span>,\n        };\n    }\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Spinner</span> <span class=\"hljs-attr\">vertical</span> \n            <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"money\"</span>\n            <span class=\"hljs-attr\">:formatter</span>=<span class=\"hljs-string\">\"value =&gt; ('￥' + value).replace(/\\\\B(?=(\\\\d{3})+(?!\\\\d))/g, ',')\"</span>\n            <span class=\"hljs-attr\">:parser</span>=<span class=\"hljs-string\">\"value =&gt; value.replace(/￥|,/g, '')\"</span>\n        /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Spinner</span> <span class=\"hljs-attr\">vertical</span> \n            <span class=\"hljs-attr\">prefix</span>=<span class=\"hljs-string\">\"增长率 \"</span>\n            <span class=\"hljs-attr\">suffix</span>=<span class=\"hljs-string\">\"%\"</span>\n            <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"percent\"</span>\n        /&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> Spinner <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/spinner'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Spinner\n    },\n    data() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-string\">\"money\"</span>: <span class=\"hljs-number\">1000</span>,\n            <span class=\"hljs-string\">\"percent\"</span>: <span class=\"hljs-number\">78</span>\n        }\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"stylus\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"./index.styl\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> Spinner <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/spinner'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n        <span class=\"hljs-keyword\">this</span>.state = {\n            <span class=\"hljs-string\">\"money\"</span>: <span class=\"hljs-number\">1000</span>,\n            <span class=\"hljs-string\">\"percent\"</span>: <span class=\"hljs-number\">78</span>\n        };\n    }\n\n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            &lt;div&gt;\n                &lt;Spinner vertical \n                    value={this.state.money}\n                    on$change-value={(c, money) =&gt; this.setState({money})}\n                    formatter={value =&gt; ('￥' + value).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                    parser={value =&gt; value.replace(/￥|,/g, '')}\n                /&gt;\n                &lt;Spinner vertical \n                    prefix=\"增长率 \"\n                    suffix=\"%\"\n                    value={this.state.percent}\n                    on$change-value={(c, percent) =&gt; this.setState({percent})}\n                /&gt;\n            &lt;/div&gt;\n        )\n    }\n}</code></pre>"
        },
        {
            "language": "ts",
            "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> {Component} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-meta\">@Component</span>({\n    selector: <span class=\"hljs-string\">'app-demo'</span>,\n    template: <span class=\"hljs-string\">`\n        &lt;div&gt;\n            &lt;k-spinner [vertical]=\"true\" \n                [(value)]=\"money\"\n                [formatter]=\"formatter\"\n                [parser]=\"parser\"\n            &gt;&lt;/k-spinner&gt;\n            &lt;k-spinner [vertical]=\"true\" \n                prefix=\"增长率 \"\n                suffix=\"%\"\n                [(value)]=\"percent\"\n            &gt;&lt;/k-spinner&gt;\n        &lt;/div&gt;\n    `</span>,\n    styleUrls: [<span class=\"hljs-string\">'./index.styl'</span>],\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> AppDemoComponent {\n    <span class=\"hljs-keyword\">private</span> money = <span class=\"hljs-number\">1000</span>;\n    <span class=\"hljs-keyword\">private</span> percent = <span class=\"hljs-number\">78</span>;\n\n    formatter = <span class=\"hljs-function\"><span class=\"hljs-params\">value</span> =&gt;</span> (<span class=\"hljs-string\">'￥'</span> + value).replace(<span class=\"hljs-regexp\">/\\B(?=(\\d{3})+(?!\\d))/g</span>, <span class=\"hljs-string\">','</span>);\n    \n    parser = <span class=\"hljs-function\"><span class=\"hljs-params\">value</span> =&gt;</span> value.replace(<span class=\"hljs-regexp\">/￥|,/g</span>, <span class=\"hljs-string\">''</span>);\n}</code></pre>"
        }
    ]
}