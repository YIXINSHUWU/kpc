{
    "setting": {
        "title": "分组",
        "order": 18
    },
    "catalogs": [],
    "contents": "<p>分组需要两个<code>group</code>来指定：</p>\n<ol>\n<li>第一个是<code>Table</code>上的<code>group</code>属性，该属性指定当前分组的方式，形式为：<code>{[&quot;分组的列的key&quot;]: [&quot;当前列选择的分组的值&quot;]}</code></li>\n<li>第二个是<code>TableColumn</code>或者<code>scheme</code>上的<code>group</code>属性，该属性指定当前列有哪些可选的分组方式，\n如果该列支持多选，还可以添加<code>multiple</code>属性，默认为单选。形式为：<code>[{label: &quot;分组展示文案&quot;, value: &quot;选择后的值&quot;}]</code></li>\n</ol>\n<p>当分组方式改变时，可以监听默认事件<code>$change:group</code>来执行自定义分组逻辑</p>\n<blockquote>\n<p><code>group</code>属性不会双向绑定，所以在改变时，你应该同步更新当前属性值(<code>sort</code>也一样)</p>\n</blockquote>\n",
    "index": 318,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Table, TableColumn} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/table'</span>;\n\n<span class=\"hljs-keyword\">const</span> scheme = {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'名称'</span>,\n    <span class=\"hljs-attr\">status</span>: {\n        <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'状态'</span>,\n        template(data) {\n            <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>{{ data.status === 'active' ? '运行中' : '已关闭' }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span></span>\n        },\n        <span class=\"hljs-attr\">group</span>: [\n            {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'全部'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">''</span>},\n            {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'运行中'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">'active'</span>},\n            {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'已关闭'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">'stopped'</span>},\n        ]\n    }\n};\n\n&lt;div class='no-data-template'&gt;\n    &lt;Table scheme={{ scheme }} \n        data={{ self.get('data') }} \n        v-model:group=\"group\"\n        ev-$change:group={{ self._onChangeGroup }}\n        ref=\"__test1\"\n    /&gt;\n    &lt;Table data={{ self.get('multipleData') }} \n        v-model:group=\"multipleGroup\"\n        ev-$change:group={{ self._onChangeMultipleGroup }}\n        ref=\"__test2\"\n    &gt;\n        &lt;TableColumn title='名称' key='name' /&gt;\n        &lt;TableColumn title='状态' key='status' \n            group={{ [ \n                {label: '运行中', value: 'active'},\n                {label: '已关闭', value: 'stopped'}\n            ] }}\n            multiple\n        &gt;\n            &lt;b:template params=\"data\"&gt;\n                &lt;span&gt;{{ data.status === 'active' ? '运行中' : '已关闭' }}&lt;/span&gt;\n            &lt;/b:template&gt;\n        &lt;/TableColumn&gt;\n    &lt;/Table&gt;\n&lt;/div&gt;</code></pre>"
        },
        {
            "language": "styl",
            "content": "<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.no-data-template</span>\n    <span class=\"hljs-attribute\">display</span>: flex\n    <span class=\"hljs-selector-class\">.k-table</span>\n        <span class=\"hljs-attribute\">flex</span> <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-attribute\">margin-left</span>: <span class=\"hljs-number\">10px</span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">const</span> oData = [\n    {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'主机1'</span>, <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">'active'</span>},\n    {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'主机2'</span>, <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">'stopped'</span>},\n    {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'主机3'</span>, <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">'active'</span>},\n];\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">data</span>: oData, \n            <span class=\"hljs-attr\">group</span>: {<span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">''</span>},\n            <span class=\"hljs-attr\">multipleData</span>: oData,\n            <span class=\"hljs-attr\">multipleGroup</span>: {<span class=\"hljs-attr\">status</span>: []},\n        }\n    }\n\n    _onChangeGroup(c, group) {\n        <span class=\"hljs-built_in\">console</span>.log(group);\n        <span class=\"hljs-keyword\">const</span> data = oData.filter(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> {\n            <span class=\"hljs-keyword\">let</span> matched = <span class=\"hljs-literal\">true</span>;\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> group) {\n                <span class=\"hljs-keyword\">const</span> value = group[key];\n                <span class=\"hljs-keyword\">if</span> (value &amp;&amp; item[key] !== value) {\n                    matched = <span class=\"hljs-literal\">false</span>;\n                    <span class=\"hljs-keyword\">break</span>;\n                }\n            }\n            <span class=\"hljs-keyword\">return</span> matched;\n        });\n\n        <span class=\"hljs-keyword\">this</span>.set(<span class=\"hljs-string\">'data'</span>, data);\n    }\n\n    _onChangeMultipleGroup(c, group) {\n        <span class=\"hljs-built_in\">console</span>.log(group);\n        <span class=\"hljs-keyword\">const</span> data = oData.filter(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> {\n            <span class=\"hljs-keyword\">let</span> matched = <span class=\"hljs-literal\">true</span>;\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> group) {\n                <span class=\"hljs-keyword\">const</span> value = group[key];\n                <span class=\"hljs-keyword\">if</span> (value.length &amp;&amp; value.indexOf(item[key]) === <span class=\"hljs-number\">-1</span>) {\n                    matched = <span class=\"hljs-literal\">false</span>;\n                    <span class=\"hljs-keyword\">break</span>;\n                }\n            }\n            <span class=\"hljs-keyword\">return</span> matched;\n        });\n\n        <span class=\"hljs-keyword\">this</span>.set(<span class=\"hljs-string\">'multipleData'</span>, data);\n    }\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">'no-data-template'</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Table</span> <span class=\"hljs-attr\">:scheme</span>=<span class=\"hljs-string\">\"scheme\"</span> \n            <span class=\"hljs-attr\">:data</span>=<span class=\"hljs-string\">\"data\"</span> \n            <span class=\"hljs-attr\">:group.sync</span>=<span class=\"hljs-string\">\"group\"</span>\n            @$<span class=\"hljs-attr\">change:group</span>=<span class=\"hljs-string\">\"_onChangeGroup\"</span>\n            <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"__test1\"</span>\n        /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Table</span> <span class=\"hljs-attr\">:data</span>=<span class=\"hljs-string\">\"multipleData\"</span> \n            <span class=\"hljs-attr\">:group.sync</span>=<span class=\"hljs-string\">\"multipleGroup\"</span>\n            @$<span class=\"hljs-attr\">change:group</span>=<span class=\"hljs-string\">\"_onChangeMultipleGroup\"</span>\n            <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"__test2\"</span>\n        &gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">TableColumn</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">'名称'</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">'name'</span> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">TableColumn</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">'状态'</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">'status'</span> \n                <span class=\"hljs-attr\">:group</span>=<span class=\"hljs-string\">\"[ \n                    {label: '运行中', value: 'active'},\n                    {label: '已关闭', value: 'stopped'}\n                ]\"</span>\n                <span class=\"hljs-attr\">multiple</span>\n            &gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\">\"template\"</span> <span class=\"hljs-attr\">slot-scope</span>=<span class=\"hljs-string\">\"data\"</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>{{ data.status === 'active' ? '运行中' : '已关闭' }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">TableColumn</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Table</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> {Table, TableColumn} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/table'</span>;\n\n<span class=\"hljs-keyword\">const</span> oData = [\n    {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'主机1'</span>, <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">'active'</span>},\n    {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'主机2'</span>, <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">'stopped'</span>},\n    {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'主机3'</span>, <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">'active'</span>},\n];\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Table, TableColumn\n    },\n    data() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">data</span>: oData, \n            <span class=\"hljs-attr\">group</span>: {<span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">''</span>},\n            <span class=\"hljs-attr\">multipleData</span>: oData,\n            <span class=\"hljs-attr\">multipleGroup</span>: {<span class=\"hljs-attr\">status</span>: []},\n            <span class=\"hljs-attr\">scheme</span>: {\n                <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'名称'</span>,\n                <span class=\"hljs-attr\">status</span>: {\n                    <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'状态'</span>,\n                    <span class=\"hljs-attr\">template</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{\n                        <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>{data.status === 'active' ? '运行中' : '已关闭'}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span></span>\n                    },\n                    <span class=\"hljs-attr\">group</span>: [\n                        {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'全部'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">''</span>},\n                        {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'运行中'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">'active'</span>},\n                        {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'已关闭'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">'stopped'</span>},\n                    ]\n                }\n            },\n        }\n    },\n    <span class=\"hljs-attr\">methods</span>: {\n        _onChangeGroup(c, group) {\n            <span class=\"hljs-built_in\">console</span>.log(group);\n            <span class=\"hljs-keyword\">const</span> data = oData.filter(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> {\n                <span class=\"hljs-keyword\">let</span> matched = <span class=\"hljs-literal\">true</span>;\n                <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> group) {\n                    <span class=\"hljs-keyword\">const</span> value = group[key];\n                    <span class=\"hljs-keyword\">if</span> (value &amp;&amp; item[key] !== value) {\n                        matched = <span class=\"hljs-literal\">false</span>;\n                        <span class=\"hljs-keyword\">break</span>;\n                    }\n                }\n                <span class=\"hljs-keyword\">return</span> matched;\n            });\n        \n            <span class=\"hljs-keyword\">this</span>.data = data;\n        },\n        _onChangeMultipleGroup(c, group) {\n            <span class=\"hljs-built_in\">console</span>.log(group);\n            <span class=\"hljs-keyword\">const</span> data = oData.filter(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> {\n                <span class=\"hljs-keyword\">let</span> matched = <span class=\"hljs-literal\">true</span>;\n                <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> group) {\n                    <span class=\"hljs-keyword\">const</span> value = group[key];\n                    <span class=\"hljs-keyword\">if</span> (value.length &amp;&amp; value.indexOf(item[key]) === <span class=\"hljs-number\">-1</span>) {\n                        matched = <span class=\"hljs-literal\">false</span>;\n                        <span class=\"hljs-keyword\">break</span>;\n                    }\n                }\n                <span class=\"hljs-keyword\">return</span> matched;\n            });\n        \n            <span class=\"hljs-keyword\">this</span>.multipleData = data;\n        },\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"stylus\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"./index.styl\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> {Table, TableColumn} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/table'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>;\n<span class=\"hljs-keyword\">const</span> oData = [\n    {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'主机1'</span>, <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">'active'</span>},\n    {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'主机2'</span>, <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">'stopped'</span>},\n    {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'主机3'</span>, <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">'active'</span>},\n];\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n        <span class=\"hljs-keyword\">this</span>.state = {\n            <span class=\"hljs-string\">\"data\"</span>: oData,\n            <span class=\"hljs-string\">\"group\"</span>: {\n                <span class=\"hljs-string\">\"status\"</span>: <span class=\"hljs-string\">\"\"</span>\n            },\n            <span class=\"hljs-string\">\"multipleData\"</span>: oData,\n            <span class=\"hljs-string\">\"multipleGroup\"</span>: {\n                <span class=\"hljs-string\">\"status\"</span>: []\n            }\n        };\n        <span class=\"hljs-keyword\">this</span>._onChangeGroup = <span class=\"hljs-keyword\">this</span>._onChangeGroup.bind(<span class=\"hljs-keyword\">this</span>);\n        <span class=\"hljs-keyword\">this</span>._onChangeMultipleGroup = <span class=\"hljs-keyword\">this</span>._onChangeMultipleGroup.bind(<span class=\"hljs-keyword\">this</span>);\n    }\n    \n    _onChangeGroup(c, group) {\n        <span class=\"hljs-built_in\">console</span>.log(group);\n        <span class=\"hljs-keyword\">const</span> data = oData.filter(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> {\n            <span class=\"hljs-keyword\">let</span> matched = <span class=\"hljs-literal\">true</span>;\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> group) {\n                <span class=\"hljs-keyword\">const</span> value = group[key];\n                <span class=\"hljs-keyword\">if</span> (value &amp;&amp; item[key] !== value) {\n                    matched = <span class=\"hljs-literal\">false</span>;\n                    <span class=\"hljs-keyword\">break</span>;\n                }\n            }\n            <span class=\"hljs-keyword\">return</span> matched;\n        });\n    \n        <span class=\"hljs-keyword\">this</span>.setState({<span class=\"hljs-attr\">data</span>: data});\n    }\n    \n    _onChangeMultipleGroup(c, group) {\n        <span class=\"hljs-built_in\">console</span>.log(group);\n        <span class=\"hljs-keyword\">const</span> data = oData.filter(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> {\n            <span class=\"hljs-keyword\">let</span> matched = <span class=\"hljs-literal\">true</span>;\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> group) {\n                <span class=\"hljs-keyword\">const</span> value = group[key];\n                <span class=\"hljs-keyword\">if</span> (value.length &amp;&amp; value.indexOf(item[key]) === <span class=\"hljs-number\">-1</span>) {\n                    matched = <span class=\"hljs-literal\">false</span>;\n                    <span class=\"hljs-keyword\">break</span>;\n                }\n            }\n            <span class=\"hljs-keyword\">return</span> matched;\n        });\n    \n        <span class=\"hljs-keyword\">this</span>.setState({<span class=\"hljs-attr\">multipleData</span>: data});\n    }\n    \n    render() {\n        <span class=\"hljs-keyword\">const</span> scheme = {\n            <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'名称'</span>,\n            <span class=\"hljs-attr\">status</span>: {\n                <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'状态'</span>,\n                template(data) {\n                    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>{data.status === 'active' ? '运行中' : '已关闭'}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span></span>\n                },\n                <span class=\"hljs-attr\">group</span>: [\n                    {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'全部'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">''</span>},\n                    {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'运行中'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">'active'</span>},\n                    {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'已关闭'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">'stopped'</span>},\n                ]\n            }\n        };\n    \n        <span class=\"hljs-keyword\">return</span> (\n            &lt;div className='no-data-template'&gt;\n                &lt;Table scheme={scheme} \n                    data={this.state.data} \n                    group={this.state.group}\n                    on$change-group={(c, group) =&gt; this.setState({group})}\n                    on$change-group={this._onChangeGroup}\n                    ref={i =&gt; this.__test1 = i}\n                /&gt;\n                &lt;Table data={this.state.multipleData} \n                    group={this.state.multipleGroup}\n                    on$change-group={(c, multipleGroup) =&gt; this.setState({multipleGroup})}\n                    on$change-group={this._onChangeMultipleGroup}\n                    ref={i =&gt; this.__test2 = i}\n                &gt;\n                    &lt;TableColumn title='名称' key='name' /&gt;\n                    &lt;TableColumn title='状态' key='status'\n                        b-template={(data) =&gt; {\n                            return &lt;React.Fragment&gt;\n                                &lt;span&gt;{data.status === 'active' ? '运行中' : '已关闭'}&lt;/span&gt;\n                            &lt;/React.Fragment&gt;\n                        }}\n                        group={[ \n                            {label: '运行中', value: 'active'},\n                            {label: '已关闭', value: 'stopped'}\n                        ]}\n                        multiple\n                    &gt;\n                    &lt;/TableColumn&gt;\n                &lt;/Table&gt;\n            &lt;/div&gt;\n        )\n    }\n}</code></pre>"
        },
        {
            "language": "ts",
            "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> {Component, ViewChild} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">const</span> oData = [\n    {name: <span class=\"hljs-string\">'主机1'</span>, status: <span class=\"hljs-string\">'active'</span>},\n    {name: <span class=\"hljs-string\">'主机2'</span>, status: <span class=\"hljs-string\">'stopped'</span>},\n    {name: <span class=\"hljs-string\">'主机3'</span>, status: <span class=\"hljs-string\">'active'</span>},\n];\n\n<span class=\"hljs-meta\">@Component</span>({\n    selector: <span class=\"hljs-string\">'app-demo'</span>,\n    template: <span class=\"hljs-string\">`\n        &lt;div class='no-data-template'&gt;\n            &lt;k-table [scheme]=\"scheme\" \n                [data]=\"data\" \n                [(group)]=\"group\"\n                ($change-group)=\"_onChangeGroup($event)\"\n                #__test1\n            &gt;&lt;/k-table&gt;\n            &lt;k-table [data]=\"multipleData\" \n                [(group)]=\"multipleGroup\"\n                ($change-group)=\"_onChangeMultipleGroup($event)\"\n                #__test2\n            &gt;\n                &lt;k-table-column title='名称' key='name'&gt;&lt;/k-table-column&gt;\n                &lt;k-table-column title='状态' key='status' \n                    [group]=\"[ \n                        {label: '运行中', value: 'active'},\n                        {label: '已关闭', value: 'stopped'}\n                    ]\"\n                    [multiple]=\"true\"\n                &gt;\n                    &lt;ng-template #template let-data=\"args[0]\"&gt;\n                        &lt;span&gt;{{ data.status === 'active' ? '运行中' : '已关闭' }}&lt;/span&gt;\n                    &lt;/ng-template&gt;\n                &lt;/k-table-column&gt;\n            &lt;/k-table&gt;\n        &lt;/div&gt;\n    `</span>,\n    styleUrls: [<span class=\"hljs-string\">'./index.styl'</span>],\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> AppDemoComponent {\n    <span class=\"hljs-meta\">@ViewChild</span>(<span class=\"hljs-string\">'__test1'</span>, {<span class=\"hljs-keyword\">static</span>: <span class=\"hljs-literal\">false</span>}) __test1;\n    <span class=\"hljs-meta\">@ViewChild</span>(<span class=\"hljs-string\">'__test2'</span>, {<span class=\"hljs-keyword\">static</span>: <span class=\"hljs-literal\">false</span>}) __test2;\n\n    <span class=\"hljs-keyword\">private</span> data = oData;\n    <span class=\"hljs-keyword\">private</span> group = {status: <span class=\"hljs-string\">''</span>};\n    <span class=\"hljs-keyword\">private</span> multipleData = oData;\n    <span class=\"hljs-keyword\">private</span> multipleGroup = {status: []};\n    <span class=\"hljs-keyword\">private</span> scheme = {\n        name: <span class=\"hljs-string\">'名称'</span>,\n        status: {\n            title: <span class=\"hljs-string\">'状态'</span>,\n            template: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> data.status === <span class=\"hljs-string\">'active'</span> ? <span class=\"hljs-string\">'运行中'</span> : <span class=\"hljs-string\">'已关闭'</span>;\n            },\n            group: [\n                {label: <span class=\"hljs-string\">'全部'</span>, value: <span class=\"hljs-string\">''</span>},\n                {label: <span class=\"hljs-string\">'运行中'</span>, value: <span class=\"hljs-string\">'active'</span>},\n                {label: <span class=\"hljs-string\">'已关闭'</span>, value: <span class=\"hljs-string\">'stopped'</span>},\n            ]\n        }\n    };\n\n    _onChangeGroup([c, group]) {\n        <span class=\"hljs-built_in\">console</span>.log(group);\n        <span class=\"hljs-keyword\">const</span> data = oData.filter(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> {\n            <span class=\"hljs-keyword\">let</span> matched = <span class=\"hljs-literal\">true</span>;\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> group) {\n                <span class=\"hljs-keyword\">const</span> value = group[key];\n                <span class=\"hljs-keyword\">if</span> (value &amp;&amp; item[key] !== value) {\n                    matched = <span class=\"hljs-literal\">false</span>;\n                    <span class=\"hljs-keyword\">break</span>;\n                }\n            }\n            <span class=\"hljs-keyword\">return</span> matched;\n        });\n    \n        <span class=\"hljs-keyword\">this</span>.data = data;\n    }\n    \n    _onChangeMultipleGroup([c, group]) {\n        <span class=\"hljs-built_in\">console</span>.log(group);\n        <span class=\"hljs-keyword\">const</span> data = oData.filter(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> {\n            <span class=\"hljs-keyword\">let</span> matched = <span class=\"hljs-literal\">true</span>;\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> group) {\n                <span class=\"hljs-keyword\">const</span> value = group[key];\n                <span class=\"hljs-keyword\">if</span> (value.length &amp;&amp; value.indexOf(item[key]) === <span class=\"hljs-number\">-1</span>) {\n                    matched = <span class=\"hljs-literal\">false</span>;\n                    <span class=\"hljs-keyword\">break</span>;\n                }\n            }\n            <span class=\"hljs-keyword\">return</span> matched;\n        });\n    \n        <span class=\"hljs-keyword\">this</span>.multipleData = data;\n    }\n}</code></pre>"
        }
    ]
}