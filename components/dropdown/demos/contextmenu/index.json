{
    "setting": {
        "title": "右键菜单",
        "order": 7
    },
    "catalogs": [],
    "contents": "<p>将<code>DropdownMenu</code>作为顶层元素，而不是<code>Dropdown</code>的子元素，然后指定<code>of</code>属性为事件对象，即可以实现跟随鼠标位置的弹出菜单</p>\n<blockquote>\n<p>这里将<code>position</code>属性指定为<code>left+1</code>是为了避免弹出菜单立即被选中第一项</p>\n</blockquote>\n<blockquote>\n<p><code>React</code>下事件对象会复用，我们不能在异步函数中调用事件对象的属性和方法，如果需要保留事件对象，需要调用<code>event.persist()</code>方法 <a href=\"https://reactjs.org/docs/events.html#event-pooling\">https://reactjs.org/docs/events.html#event-pooling</a></p>\n</blockquote>\n",
    "index": 262,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {DropdownMenu, DropdownItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dropdown'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"contextmenu-area\"</span> <span class=\"hljs-attr\">ev-contextmenu</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self._showMenu</span> }}&gt;</span>\n        right click this area to show context menu\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownMenu</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"show\"</span> \n        <span class=\"hljs-attr\">of</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.get</span>('<span class=\"hljs-attr\">event</span>') }}\n        <span class=\"hljs-attr\">position</span>=<span class=\"hljs-string\">{{</span> {<span class=\"hljs-attr\">my:</span> '<span class=\"hljs-attr\">left</span>+<span class=\"hljs-attr\">1</span> <span class=\"hljs-attr\">top</span>', <span class=\"hljs-attr\">at:</span> '<span class=\"hljs-attr\">right</span> <span class=\"hljs-attr\">bottom</span>'} }}\n    &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>Option 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>Option 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>Option 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"
        },
        {
            "language": "styl",
            "content": "<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.contextmenu-area</span>\n    <span class=\"hljs-attribute\">height</span> <span class=\"hljs-number\">100px</span>\n    <span class=\"hljs-attribute\">background</span> <span class=\"hljs-number\">#f0f0f0</span>\n    <span class=\"hljs-attribute\">text-align</span> center\n    <span class=\"hljs-attribute\">line-height</span> <span class=\"hljs-number\">100px</span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> { \n            <span class=\"hljs-attr\">show</span>: <span class=\"hljs-literal\">false</span>,\n            <span class=\"hljs-attr\">event</span>: <span class=\"hljs-literal\">null</span>,\n        };\n    }\n\n    _showMenu(event) {\n        event.preventDefault();\n        <span class=\"hljs-keyword\">this</span>.set({\n            <span class=\"hljs-attr\">show</span>: <span class=\"hljs-literal\">true</span>,\n            <span class=\"hljs-attr\">event</span>: event,\n        });\n    }\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"contextmenu-area\"</span> @<span class=\"hljs-attr\">contextmenu</span>=<span class=\"hljs-string\">\"_showMenu\"</span>&gt;</span>\n            right click this area to show context menu\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownMenu</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"show\"</span> \n            <span class=\"hljs-attr\">:of</span>=<span class=\"hljs-string\">\"event\"</span>\n            <span class=\"hljs-attr\">:position</span>=<span class=\"hljs-string\">\"{my: 'left+1 top', at: 'right bottom'}\"</span>\n        &gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>Option 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>Option 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>Option 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> {DropdownMenu, DropdownItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dropdown'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        DropdownMenu, DropdownItem\n    },\n    data() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-string\">\"event\"</span>: <span class=\"hljs-literal\">null</span>,\n            <span class=\"hljs-string\">\"show\"</span>: <span class=\"hljs-literal\">false</span>\n        }\n    },\n    <span class=\"hljs-attr\">methods</span>: {\n        _showMenu(event) {\n            event.preventDefault();\n            <span class=\"hljs-keyword\">this</span>.show = <span class=\"hljs-literal\">true</span>;\n            <span class=\"hljs-keyword\">this</span>.event = event;\n        },\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"stylus\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"./index.styl\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> {DropdownMenu, DropdownItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dropdown'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n        <span class=\"hljs-keyword\">this</span>.state = {\n            <span class=\"hljs-string\">\"show\"</span>: <span class=\"hljs-literal\">false</span>,\n            <span class=\"hljs-string\">\"event\"</span>: <span class=\"hljs-literal\">null</span>\n        };\n        <span class=\"hljs-keyword\">this</span>._showMenu = <span class=\"hljs-keyword\">this</span>._showMenu.bind(<span class=\"hljs-keyword\">this</span>);\n    }\n\n    _showMenu(event) {\n        <span class=\"hljs-comment\">// https://reactjs.org/docs/events.html#event-pooling</span>\n        event.persist();\n        event.preventDefault();\n        <span class=\"hljs-keyword\">this</span>.setState({\n            <span class=\"hljs-attr\">show</span>: <span class=\"hljs-literal\">true</span>,\n            <span class=\"hljs-attr\">event</span>: event,\n        });\n    }\n    \n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"contextmenu-area\"</span> <span class=\"hljs-attr\">onContextMenu</span>=<span class=\"hljs-string\">{this._showMenu}</span>&gt;</span>\n                    right click this area to show context menu\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownMenu</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{this.state.show}</span>\n                    <span class=\"hljs-attr\">on</span>$<span class=\"hljs-attr\">change-value</span>=<span class=\"hljs-string\">{(c,</span> <span class=\"hljs-attr\">show</span>) =&gt;</span> this.setState({show})} \n                    of={this.state.event}\n                    position={{my: 'left+1 top', at: 'right bottom'}}\n                &gt;\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>Option 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>Option 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>Option 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n        )\n    }\n}</code></pre>"
        }
    ]
}