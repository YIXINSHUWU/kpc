{
    "setting": {
        "title": "排序",
        "order": 17
    },
    "catalogs": [],
    "contents": "<p>通过<code>sort</code>属性来指定当前表格的排序方式。它的数据格式如下：</p>\n<p><code>{ key: &#39;当前排序的列的key&#39;, type: &#39;当前排序方式（desc: 降序，asc: 升序）&#39; }</code></p>\n<p>当该列可排序时，只需要在定义表格结构的<code>scheme</code>或者<code>TableColumn</code>中加入<code>sortable</code>并且取值为<code>true</code>即可</p>\n<p>当排序方式改变时，可以监听默认事件<code>$change:sort</code>来执行自定义排序逻辑</p>\n",
    "index": 319,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Table, TableColumn} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/table'</span>;\n\n&lt;div class='no-data-template'&gt;\n    &lt;Table scheme={{ self.get('scheme') }} \n        data={{ self.get('data') }} \n        sort={{ self.get('sort') }}\n        ev-$change:sort={{ self._onSort }}\n    /&gt;\n    &lt;Table data={{ self.get('data') }} \n        sort={{ self.get('sort') }}\n        ev-$change:sort={{ self._onSort }}\n    &gt;\n        &lt;TableColumn title='姓名' key='name' sortable /&gt;\n        &lt;TableColumn title='年龄' key='age' sortable /&gt;\n    &lt;/Table&gt;\n&lt;/div&gt;</code></pre>"
        },
        {
            "language": "styl",
            "content": "<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.no-data-template</span>\n    <span class=\"hljs-attribute\">display</span>: flex\n    <span class=\"hljs-selector-class\">.k-table</span>\n        <span class=\"hljs-attribute\">flex</span> <span class=\"hljs-number\">1</span>\n        <span class=\"hljs-attribute\">margin-left</span>: <span class=\"hljs-number\">10px</span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">data</span>: [{<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'aa'</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">1</span>}, {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'cc'</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">5</span>}, {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'bb'</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">9</span>}],\n            <span class=\"hljs-attr\">scheme</span>: {\n                <span class=\"hljs-attr\">name</span>: {\n                    <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'姓名'</span>,\n                    <span class=\"hljs-attr\">sortable</span>: <span class=\"hljs-literal\">true</span>\n                },\n                <span class=\"hljs-attr\">age</span>: {\n                    <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'年龄'</span>,\n                    <span class=\"hljs-attr\">sortable</span>: <span class=\"hljs-literal\">true</span>\n                }\n            },\n            <span class=\"hljs-attr\">sort</span>: {}\n        }\n    }\n\n    _onSort(c, sort) {\n        <span class=\"hljs-built_in\">console</span>.log(sort);\n        <span class=\"hljs-keyword\">const</span> data = <span class=\"hljs-keyword\">this</span>.get(<span class=\"hljs-string\">'data'</span>).slice(<span class=\"hljs-number\">0</span>);\n        data.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =&gt;</span> {\n            <span class=\"hljs-keyword\">return</span> sort.type === <span class=\"hljs-string\">'desc'</span> ? \n                (a[sort.key] &gt; b[sort.key] ? <span class=\"hljs-number\">-1</span> : <span class=\"hljs-number\">1</span>) : \n                (a[sort.key] &gt; b[sort.key] ? <span class=\"hljs-number\">1</span> : <span class=\"hljs-number\">-1</span>);\n        });\n        <span class=\"hljs-keyword\">this</span>.set({data, sort});\n    }\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">'no-data-template'</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Table</span> <span class=\"hljs-attr\">:scheme</span>=<span class=\"hljs-string\">\"scheme\"</span> \n            <span class=\"hljs-attr\">:data</span>=<span class=\"hljs-string\">\"data\"</span> \n            <span class=\"hljs-attr\">:sort</span>=<span class=\"hljs-string\">\"sort\"</span>\n            @$<span class=\"hljs-attr\">change:sort</span>=<span class=\"hljs-string\">\"_onSort\"</span>\n        /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Table</span> <span class=\"hljs-attr\">:data</span>=<span class=\"hljs-string\">\"data\"</span> \n            <span class=\"hljs-attr\">:sort</span>=<span class=\"hljs-string\">\"sort\"</span>\n            @$<span class=\"hljs-attr\">change:sort</span>=<span class=\"hljs-string\">\"_onSort\"</span>\n        &gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">TableColumn</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">'姓名'</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">'name'</span> <span class=\"hljs-attr\">sortable</span> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">TableColumn</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">'年龄'</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">'age'</span> <span class=\"hljs-attr\">sortable</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Table</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> {Table, TableColumn} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/table'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Table, TableColumn\n    },\n    data() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-string\">\"scheme\"</span>: {\n                <span class=\"hljs-string\">\"name\"</span>: {\n                    <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"姓名\"</span>,\n                    <span class=\"hljs-string\">\"sortable\"</span>: <span class=\"hljs-literal\">true</span>\n                },\n                <span class=\"hljs-string\">\"age\"</span>: {\n                    <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"年龄\"</span>,\n                    <span class=\"hljs-string\">\"sortable\"</span>: <span class=\"hljs-literal\">true</span>\n                }\n            },\n            <span class=\"hljs-string\">\"data\"</span>: [\n                {\n                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"aa\"</span>,\n                    <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">1</span>\n                },\n                {\n                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"cc\"</span>,\n                    <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">5</span>\n                },\n                {\n                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"bb\"</span>,\n                    <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">9</span>\n                }\n            ],\n            <span class=\"hljs-string\">\"sort\"</span>: {}\n        }\n    },\n    <span class=\"hljs-attr\">methods</span>: {\n        _onSort(c, sort) {\n            <span class=\"hljs-built_in\">console</span>.log(sort);\n            <span class=\"hljs-keyword\">const</span> data = <span class=\"hljs-keyword\">this</span>.data.slice(<span class=\"hljs-number\">0</span>);\n            data.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =&gt;</span> {\n                <span class=\"hljs-keyword\">return</span> sort.type === <span class=\"hljs-string\">'desc'</span> ? \n                    (a[sort.key] &gt; b[sort.key] ? <span class=\"hljs-number\">-1</span> : <span class=\"hljs-number\">1</span>) : \n                    (a[sort.key] &gt; b[sort.key] ? <span class=\"hljs-number\">1</span> : <span class=\"hljs-number\">-1</span>);\n            });\n            <span class=\"hljs-keyword\">this</span>.data = data;\n            <span class=\"hljs-keyword\">this</span>.sort = sort;\n        },\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"stylus\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"./index.styl\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> {Table, TableColumn} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/table'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n        <span class=\"hljs-keyword\">this</span>.state = {\n            <span class=\"hljs-string\">\"data\"</span>: [\n                {\n                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"aa\"</span>,\n                    <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">1</span>\n                },\n                {\n                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"cc\"</span>,\n                    <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">5</span>\n                },\n                {\n                    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"bb\"</span>,\n                    <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">9</span>\n                }\n            ],\n            <span class=\"hljs-string\">\"scheme\"</span>: {\n                <span class=\"hljs-string\">\"name\"</span>: {\n                    <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"姓名\"</span>,\n                    <span class=\"hljs-string\">\"sortable\"</span>: <span class=\"hljs-literal\">true</span>\n                },\n                <span class=\"hljs-string\">\"age\"</span>: {\n                    <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"年龄\"</span>,\n                    <span class=\"hljs-string\">\"sortable\"</span>: <span class=\"hljs-literal\">true</span>\n                }\n            },\n            <span class=\"hljs-string\">\"sort\"</span>: {}\n        };\n        <span class=\"hljs-keyword\">this</span>._onSort = <span class=\"hljs-keyword\">this</span>._onSort.bind(<span class=\"hljs-keyword\">this</span>);\n    }\n\n    _onSort(c, sort) {\n        <span class=\"hljs-built_in\">console</span>.log(sort);\n        <span class=\"hljs-keyword\">const</span> data = <span class=\"hljs-keyword\">this</span>.state.data.slice(<span class=\"hljs-number\">0</span>);\n        data.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =&gt;</span> {\n            <span class=\"hljs-keyword\">return</span> sort.type === <span class=\"hljs-string\">'desc'</span> ? \n                (a[sort.key] &gt; b[sort.key] ? <span class=\"hljs-number\">-1</span> : <span class=\"hljs-number\">1</span>) : \n                (a[sort.key] &gt; b[sort.key] ? <span class=\"hljs-number\">1</span> : <span class=\"hljs-number\">-1</span>);\n        });\n        <span class=\"hljs-keyword\">this</span>.setState({data, sort});\n    }\n    \n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            &lt;div className='no-data-template'&gt;\n                &lt;Table scheme={this.state.scheme} \n                    data={this.state.data} \n                    sort={this.state.sort}\n                    on$change-sort={this._onSort}\n                /&gt;\n                &lt;Table data={this.state.data} \n                    sort={this.state.sort}\n                    on$change-sort={this._onSort}\n                &gt;\n                    &lt;TableColumn title='姓名' key='name' sortable /&gt;\n                    &lt;TableColumn title='年龄' key='age' sortable /&gt;\n                &lt;/Table&gt;\n            &lt;/div&gt;\n        )\n    }\n}</code></pre>"
        },
        {
            "language": "ts",
            "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> {Component} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-meta\">@Component</span>({\n    selector: <span class=\"hljs-string\">'app-demo'</span>,\n    template: <span class=\"hljs-string\">`\n        &lt;div class='no-data-template'&gt;\n            &lt;k-table [scheme]=\"scheme\" \n                [data]=\"data\" \n                [sort]=\"sort\"\n                ($change-sort)=\"_onSort($event)\"\n            &gt;&lt;/k-table&gt;\n            &lt;k-table [data]=\"data\" \n                [sort]=\"sort\"\n                ($change-sort)=\"_onSort($event)\"\n            &gt;\n                &lt;k-table-column title='姓名' key='name' [sortable]=\"true\"&gt;&lt;/k-table-column&gt;\n                &lt;k-table-column title='年龄' key='age' [sortable]=\"true\"&gt;&lt;/k-table-column&gt;\n            &lt;/k-table&gt;\n        &lt;/div&gt;\n    `</span>,\n    styleUrls: [<span class=\"hljs-string\">'./index.styl'</span>],\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> AppDemoComponent {\n    <span class=\"hljs-keyword\">private</span> scheme = {\n        <span class=\"hljs-string\">\"name\"</span>: {\n            <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"姓名\"</span>,\n            <span class=\"hljs-string\">\"sortable\"</span>: <span class=\"hljs-literal\">true</span>\n        },\n        <span class=\"hljs-string\">\"age\"</span>: {\n            <span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"年龄\"</span>,\n            <span class=\"hljs-string\">\"sortable\"</span>: <span class=\"hljs-literal\">true</span>\n        }\n    };\n    <span class=\"hljs-keyword\">private</span> data = [\n        {\n            <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"aa\"</span>,\n            <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">1</span>\n        },\n        {\n            <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"cc\"</span>,\n            <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">5</span>\n        },\n        {\n            <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"bb\"</span>,\n            <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">9</span>\n        }\n    ];\n    <span class=\"hljs-keyword\">private</span> sort = {};\n\n    <span class=\"hljs-comment\">// helper function</span>\n    <span class=\"hljs-keyword\">set</span>(obj) { <span class=\"hljs-built_in\">Object</span>.keys(obj).forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">key</span> =&gt;</span> <span class=\"hljs-keyword\">this</span>[key] = obj[key]); }\n    \n    _onSort([c, sort]) {\n        <span class=\"hljs-built_in\">console</span>.log(sort);\n        <span class=\"hljs-keyword\">const</span> data = <span class=\"hljs-keyword\">this</span>.data.slice(<span class=\"hljs-number\">0</span>);\n        data.sort(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =&gt;</span> {\n            <span class=\"hljs-keyword\">return</span> sort.type === <span class=\"hljs-string\">'desc'</span> ? \n                (a[sort.key] &gt; b[sort.key] ? <span class=\"hljs-number\">-1</span> : <span class=\"hljs-number\">1</span>) : \n                (a[sort.key] &gt; b[sort.key] ? <span class=\"hljs-number\">1</span> : <span class=\"hljs-number\">-1</span>);\n        });\n        <span class=\"hljs-keyword\">this</span>.set({data, sort});\n    }\n}</code></pre>"
        }
    ]
}