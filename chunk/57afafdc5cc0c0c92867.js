require("source-map-support").install(),exports.ids=[2],exports.modules={"./components/link/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.Link=e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/get-own-property-descriptor"));n("core-js/modules/es6.regexp.replace"),n("core-js/modules/es6.regexp.search");var c,o,l,d,p=a(n("@babel/runtime-corejs2/core-js/array/is-array")),i=a(n("@babel/runtime-corejs2/helpers/createClass")),r=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),h=a(n("@babel/runtime-corejs2/helpers/defineProperty")),m=a(n("@babel/runtime-corejs2/helpers/applyDecoratedDescriptor")),j=a(n("intact")),u=a(n("./components/link/index.vdt")),g=(c=j.default.template(),d=l=function(s){function e(){return s.apply(this,arguments)||this}(0,r.default)(e,s);var n=e.prototype;return n.defaults=function(){return{href:void 0,name:void 0,isReplace:!1}},n.to=function(s){s.preventDefault(),this.trigger("click",s);var n,a=this.get("href"),t=this.get("name"),c=e.history;if(null!=a?n=a:null!=t&&(n=(0,p.default)(t)?e.url.apply(e.url,t):e.url(t)),n){var o=c.location;if(o.pathname+o.search===n)return;this.get("isReplace")?c.replace(n):c.push(n)}},(0,i.default)(e,[{key:"template",get:function(){return u.default}}]),e}(j.default),(0,h.default)(l,"history",void 0),(0,h.default)(l,"propTypes",{href:String,name:[String,Array],isReplace:Boolean}),(0,h.default)(l,"events",{click:!0}),o=d,(0,m.default)(o.prototype,"template",[c],(0,t.default)(o.prototype,"template"),o.prototype),o);e.Link=e.default=g},"./components/link/index.vdt":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=function(s,e,n,a){e||(e=Vdt),s||(s={}),n||(n={});var o=e.miss.h,l=(e.miss.hc,e.miss.hu,this&&this.widgets,e.utils),d=(l.extend,l.error),p=l.className,i=(l.slice,l.noop,l.map,l.Options),r=(i.getModel,i.setModel,l.setCheckboxModel,l.detectCheckboxChecked,l.setSelectModel,this.data),h=(r&&r.Animate,(a||{})._super,r.get().className);return o("a",(0,t.default)({},function(){try{return(0,c.getRestProps)(r)}catch(s){d(s)}}.call(this),{"ev-click":function(){try{return r.to}catch(s){d(s)}}.call(this)}),function(){try{return r.get("children")}catch(s){d(s)}}.call(this),p(function(){try{return h}catch(s){d(s)}}.call(this)))};var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=n("./components/utils.js")},"./site/dist sync recursive ^\\.\\/(components|docs)\\/.*index\\.js$":function(s,e,n){var a={"./components/affix/demos/basic/index.js":"./site/dist/components/affix/demos/basic/index.js","./components/affix/demos/custom/index.js":"./site/dist/components/affix/demos/custom/index.js","./components/affix/index.js":"./site/dist/components/affix/index.js","./components/app/demos/basic/index.js":"./site/dist/components/app/demos/basic/index.js","./components/app/demos/ssr/index.js":"./site/dist/components/app/demos/ssr/index.js","./components/app/index.js":"./site/dist/components/app/index.js","./components/badge/demos/alone/index.js":"./site/dist/components/badge/demos/alone/index.js","./components/badge/demos/basic/index.js":"./site/dist/components/badge/demos/basic/index.js","./components/badge/demos/disabled/index.js":"./site/dist/components/badge/demos/disabled/index.js","./components/badge/demos/text/index.js":"./site/dist/components/badge/demos/text/index.js","./components/badge/index.js":"./site/dist/components/badge/index.js","./components/breadcrumb/demos/basic/index.js":"./site/dist/components/breadcrumb/demos/basic/index.js","./components/breadcrumb/demos/separator/index.js":"./site/dist/components/breadcrumb/demos/separator/index.js","./components/breadcrumb/index.js":"./site/dist/components/breadcrumb/index.js","./components/button/demos/basic/index.js":"./site/dist/components/button/demos/basic/index.js","./components/button/demos/disabled/index.js":"./site/dist/components/button/demos/disabled/index.js","./components/button/demos/ghost/index.js":"./site/dist/components/button/demos/ghost/index.js","./components/button/demos/group/index.js":"./site/dist/components/button/demos/group/index.js","./components/button/demos/icon/index.js":"./site/dist/components/button/demos/icon/index.js","./components/button/demos/loading/index.js":"./site/dist/components/button/demos/loading/index.js","./components/button/demos/size/index.js":"./site/dist/components/button/demos/size/index.js","./components/button/demos/tagName/index.js":"./site/dist/components/button/demos/tagName/index.js","./components/button/index.js":"./site/dist/components/button/index.js","./components/card/demos/basic/index.js":"./site/dist/components/card/demos/basic/index.js","./components/card/demos/extra/index.js":"./site/dist/components/card/demos/extra/index.js","./components/card/demos/grid/index.js":"./site/dist/components/card/demos/grid/index.js","./components/card/demos/noHeader/index.js":"./site/dist/components/card/demos/noHeader/index.js","./components/card/index.js":"./site/dist/components/card/index.js","./components/carousel/demos/autoplay/index.js":"./site/dist/components/carousel/demos/autoplay/index.js","./components/carousel/demos/basic/index.js":"./site/dist/components/carousel/demos/basic/index.js","./components/carousel/demos/effect/index.js":"./site/dist/components/carousel/demos/effect/index.js","./components/carousel/demos/multiple/index.js":"./site/dist/components/carousel/demos/multiple/index.js","./components/carousel/index.js":"./site/dist/components/carousel/index.js","./components/cascader/demos/basic/index.js":"./site/dist/components/cascader/demos/basic/index.js","./components/cascader/demos/changeOnSelect/index.js":"./site/dist/components/cascader/demos/changeOnSelect/index.js","./components/cascader/demos/custom/index.js":"./site/dist/components/cascader/demos/custom/index.js","./components/cascader/demos/disabled/index.js":"./site/dist/components/cascader/demos/disabled/index.js","./components/cascader/demos/filterable/index.js":"./site/dist/components/cascader/demos/filterable/index.js","./components/cascader/demos/loadData/index.js":"./site/dist/components/cascader/demos/loadData/index.js","./components/cascader/demos/size/index.js":"./site/dist/components/cascader/demos/size/index.js","./components/cascader/demos/trigger/index.js":"./site/dist/components/cascader/demos/trigger/index.js","./components/cascader/index.js":"./site/dist/components/cascader/index.js","./components/checkbox/demos/basic/index.js":"./site/dist/components/checkbox/demos/basic/index.js","./components/checkbox/demos/group/index.js":"./site/dist/components/checkbox/demos/group/index.js","./components/checkbox/demos/indeterminate/index.js":"./site/dist/components/checkbox/demos/indeterminate/index.js","./components/checkbox/demos/value/index.js":"./site/dist/components/checkbox/demos/value/index.js","./components/checkbox/index.js":"./site/dist/components/checkbox/index.js","./components/code/demos/basic/index.js":"./site/dist/components/code/demos/basic/index.js","./components/code/demos/readonly/index.js":"./site/dist/components/code/demos/readonly/index.js","./components/code/demos/theme/index.js":"./site/dist/components/code/demos/theme/index.js","./components/code/index.js":"./site/dist/components/code/index.js","./components/collapse/demos/accordion/index.js":"./site/dist/components/collapse/demos/accordion/index.js","./components/collapse/demos/arrow/index.js":"./site/dist/components/collapse/demos/arrow/index.js","./components/collapse/demos/basic/index.js":"./site/dist/components/collapse/demos/basic/index.js","./components/collapse/demos/noBorder/index.js":"./site/dist/components/collapse/demos/noBorder/index.js","./components/collapse/demos/title/index.js":"./site/dist/components/collapse/demos/title/index.js","./components/collapse/index.js":"./site/dist/components/collapse/index.js","./components/colorpicker/demos/basic/index.js":"./site/dist/components/colorpicker/demos/basic/index.js","./components/colorpicker/demos/disabled/index.js":"./site/dist/components/colorpicker/demos/disabled/index.js","./components/colorpicker/demos/presets/index.js":"./site/dist/components/colorpicker/demos/presets/index.js","./components/colorpicker/demos/size/index.js":"./site/dist/components/colorpicker/demos/size/index.js","./components/colorpicker/index.js":"./site/dist/components/colorpicker/index.js","./components/datepicker/demos/basic/index.js":"./site/dist/components/datepicker/demos/basic/index.js","./components/datepicker/demos/clearable/index.js":"./site/dist/components/datepicker/demos/clearable/index.js","./components/datepicker/demos/datetime/index.js":"./site/dist/components/datepicker/demos/datetime/index.js","./components/datepicker/demos/disabledDate/index.js":"./site/dist/components/datepicker/demos/disabledDate/index.js","./components/datepicker/demos/format/index.js":"./site/dist/components/datepicker/demos/format/index.js","./components/datepicker/demos/maxMin/index.js":"./site/dist/components/datepicker/demos/maxMin/index.js","./components/datepicker/demos/multiple/index.js":"./site/dist/components/datepicker/demos/multiple/index.js","./components/datepicker/demos/range/index.js":"./site/dist/components/datepicker/demos/range/index.js","./components/datepicker/demos/shortcuts/index.js":"./site/dist/components/datepicker/demos/shortcuts/index.js","./components/datepicker/demos/yearMonth/index.js":"./site/dist/components/datepicker/demos/yearMonth/index.js","./components/datepicker/index.js":"./site/dist/components/datepicker/index.js","./components/diagram/demos/basic/index.js":"./site/dist/components/diagram/demos/basic/index.js","./components/diagram/demos/children/index.js":"./site/dist/components/diagram/demos/children/index.js","./components/diagram/demos/layout/index.js":"./site/dist/components/diagram/demos/layout/index.js","./components/diagram/demos/line/index.js":"./site/dist/components/diagram/demos/line/index.js","./components/diagram/demos/select/index.js":"./site/dist/components/diagram/demos/select/index.js","./components/diagram/demos/shape/index.js":"./site/dist/components/diagram/demos/shape/index.js","./components/diagram/index.js":"./site/dist/components/diagram/index.js","./components/dialog/demos/asyncClose/index.js":"./site/dist/components/dialog/demos/asyncClose/index.js","./components/dialog/demos/asyncOpen/index.js":"./site/dist/components/dialog/demos/asyncOpen/index.js","./components/dialog/demos/basic/index.js":"./site/dist/components/dialog/demos/basic/index.js","./components/dialog/demos/block/index.js":"./site/dist/components/dialog/demos/block/index.js","./components/dialog/demos/events/index.js":"./site/dist/components/dialog/demos/events/index.js","./components/dialog/demos/extends/index.js":"./site/dist/components/dialog/demos/extends/index.js","./components/dialog/demos/hide/index.js":"./site/dist/components/dialog/demos/hide/index.js","./components/dialog/demos/size/index.js":"./site/dist/components/dialog/demos/size/index.js","./components/dialog/demos/static/index.js":"./site/dist/components/dialog/demos/static/index.js","./components/dialog/demos/terminate/index.js":"./site/dist/components/dialog/demos/terminate/index.js","./components/dialog/index.js":"./site/dist/components/dialog/index.js","./components/drawer/demos/basic/index.js":"./site/dist/components/drawer/demos/basic/index.js","./components/drawer/demos/overlay/index.js":"./site/dist/components/drawer/demos/overlay/index.js","./components/drawer/demos/placement/index.js":"./site/dist/components/drawer/demos/placement/index.js","./components/drawer/index.js":"./site/dist/components/drawer/index.js","./components/dropdown/demos/basic/index.js":"./site/dist/components/dropdown/demos/basic/index.js","./components/dropdown/demos/checkbox/index.js":"./site/dist/components/dropdown/demos/checkbox/index.js","./components/dropdown/demos/contextmenu/index.js":"./site/dist/components/dropdown/demos/contextmenu/index.js","./components/dropdown/demos/disabled/index.js":"./site/dist/components/dropdown/demos/disabled/index.js","./components/dropdown/demos/nested/index.js":"./site/dist/components/dropdown/demos/nested/index.js","./components/dropdown/demos/position/index.js":"./site/dist/components/dropdown/demos/position/index.js","./components/dropdown/demos/tooltip/index.js":"./site/dist/components/dropdown/demos/tooltip/index.js","./components/dropdown/demos/trigger/index.js":"./site/dist/components/dropdown/demos/trigger/index.js","./components/dropdown/index.js":"./site/dist/components/dropdown/index.js","./components/editable/demos/basic/index.js":"./site/dist/components/editable/demos/basic/index.js","./components/editable/demos/validate/index.js":"./site/dist/components/editable/demos/validate/index.js","./components/editable/index.js":"./site/dist/components/editable/index.js","./components/form/demos/basic/index.js":"./site/dist/components/form/demos/basic/index.js","./components/form/demos/custom/index.js":"./site/dist/components/form/demos/custom/index.js","./components/form/demos/label/index.js":"./site/dist/components/form/demos/label/index.js","./components/form/demos/layout/index.js":"./site/dist/components/form/demos/layout/index.js","./components/form/demos/remote/index.js":"./site/dist/components/form/demos/remote/index.js","./components/form/demos/variable/index.js":"./site/dist/components/form/demos/variable/index.js","./components/form/index.js":"./site/dist/components/form/index.js","./components/grid/demos/basic/index.js":"./site/dist/components/grid/demos/basic/index.js","./components/grid/demos/flexAlign/index.js":"./site/dist/components/grid/demos/flexAlign/index.js","./components/grid/demos/flexLayout/index.js":"./site/dist/components/grid/demos/flexLayout/index.js","./components/grid/demos/flexOrder/index.js":"./site/dist/components/grid/demos/flexOrder/index.js","./components/grid/demos/gutter/index.js":"./site/dist/components/grid/demos/gutter/index.js","./components/grid/demos/offset/index.js":"./site/dist/components/grid/demos/offset/index.js","./components/grid/demos/pushPull/index.js":"./site/dist/components/grid/demos/pushPull/index.js","./components/grid/demos/responsive/index.js":"./site/dist/components/grid/demos/responsive/index.js","./components/grid/index.js":"./site/dist/components/grid/index.js","./components/icon/demos/basic/index.js":"./site/dist/components/icon/demos/basic/index.js","./components/icon/demos/color/index.js":"./site/dist/components/icon/demos/color/index.js","./components/icon/index.js":"./site/dist/components/icon/index.js","./components/input/demos/autowidth/index.js":"./site/dist/components/input/demos/autowidth/index.js","./components/input/demos/basic/index.js":"./site/dist/components/input/demos/basic/index.js","./components/input/demos/blocks/index.js":"./site/dist/components/input/demos/blocks/index.js","./components/input/demos/clearable/index.js":"./site/dist/components/input/demos/clearable/index.js","./components/input/demos/frozen/index.js":"./site/dist/components/input/demos/frozen/index.js","./components/input/demos/search/index.js":"./site/dist/components/input/demos/search/index.js","./components/input/demos/select/index.js":"./site/dist/components/input/demos/select/index.js","./components/input/demos/size/index.js":"./site/dist/components/input/demos/size/index.js","./components/input/demos/textarea/index.js":"./site/dist/components/input/demos/textarea/index.js","./components/input/index.js":"./site/dist/components/input/index.js","./components/layout/demos/aside/index.js":"./site/dist/components/layout/demos/aside/index.js","./components/layout/demos/asideFix/index.js":"./site/dist/components/layout/demos/asideFix/index.js","./components/layout/demos/basic/index.js":"./site/dist/components/layout/demos/basic/index.js","./components/layout/demos/fix/index.js":"./site/dist/components/layout/demos/fix/index.js","./components/layout/index.js":"./site/dist/components/layout/index.js","./components/menu/demos/accordion/index.js":"./site/dist/components/menu/demos/accordion/index.js","./components/menu/demos/basic/index.js":"./site/dist/components/menu/demos/basic/index.js","./components/menu/demos/collapse/index.js":"./site/dist/components/menu/demos/collapse/index.js","./components/menu/demos/dot/index.js":"./site/dist/components/menu/demos/dot/index.js","./components/menu/demos/horizontal/index.js":"./site/dist/components/menu/demos/horizontal/index.js","./components/menu/demos/size/index.js":"./site/dist/components/menu/demos/size/index.js","./components/menu/demos/theme/index.js":"./site/dist/components/menu/demos/theme/index.js","./components/menu/index.js":"./site/dist/components/menu/index.js","./components/message/demos/basic/index.js":"./site/dist/components/message/demos/basic/index.js","./components/message/demos/config/index.js":"./site/dist/components/message/demos/config/index.js","./components/message/demos/custom/index.js":"./site/dist/components/message/demos/custom/index.js","./components/message/demos/duration/index.js":"./site/dist/components/message/demos/duration/index.js","./components/message/index.js":"./site/dist/components/message/index.js","./components/pagination/demos/basic/index.js":"./site/dist/components/pagination/demos/basic/index.js","./components/pagination/demos/counts/index.js":"./site/dist/components/pagination/demos/counts/index.js","./components/pagination/demos/current/index.js":"./site/dist/components/pagination/demos/current/index.js","./components/pagination/demos/goto/index.js":"./site/dist/components/pagination/demos/goto/index.js","./components/pagination/demos/noBoard/index.js":"./site/dist/components/pagination/demos/noBoard/index.js","./components/pagination/demos/simple/index.js":"./site/dist/components/pagination/demos/simple/index.js","./components/pagination/demos/size/index.js":"./site/dist/components/pagination/demos/size/index.js","./components/pagination/index.js":"./site/dist/components/pagination/index.js","./components/progress/demos/basic/index.js":"./site/dist/components/progress/demos/basic/index.js","./components/progress/demos/children/index.js":"./site/dist/components/progress/demos/children/index.js","./components/progress/demos/circle/index.js":"./site/dist/components/progress/demos/circle/index.js","./components/progress/demos/innerText/index.js":"./site/dist/components/progress/demos/innerText/index.js","./components/progress/demos/size/index.js":"./site/dist/components/progress/demos/size/index.js","./components/progress/demos/status/index.js":"./site/dist/components/progress/demos/status/index.js","./components/progress/index.js":"./site/dist/components/progress/index.js","./components/radio/demos/basic/index.js":"./site/dist/components/radio/demos/basic/index.js","./components/radio/demos/group/index.js":"./site/dist/components/radio/demos/group/index.js","./components/radio/demos/value/index.js":"./site/dist/components/radio/demos/value/index.js","./components/radio/index.js":"./site/dist/components/radio/index.js","./components/rate/demos/basic/index.js":"./site/dist/components/rate/demos/basic/index.js","./components/rate/demos/clearable/index.js":"./site/dist/components/rate/demos/clearable/index.js","./components/rate/demos/custom/index.js":"./site/dist/components/rate/demos/custom/index.js","./components/rate/demos/disabled/index.js":"./site/dist/components/rate/demos/disabled/index.js","./components/rate/index.js":"./site/dist/components/rate/index.js","./components/scrollSelect/demos/basic/index.js":"./site/dist/components/scrollSelect/demos/basic/index.js","./components/scrollSelect/demos/disable/index.js":"./site/dist/components/scrollSelect/demos/disable/index.js","./components/scrollSelect/demos/infinite/index.js":"./site/dist/components/scrollSelect/demos/infinite/index.js","./components/scrollSelect/index.js":"./site/dist/components/scrollSelect/index.js","./components/select/demos/allowUnmatch/index.js":"./site/dist/components/select/demos/allowUnmatch/index.js","./components/select/demos/basic/index.js":"./site/dist/components/select/demos/basic/index.js","./components/select/demos/clearable/index.js":"./site/dist/components/select/demos/clearable/index.js","./components/select/demos/custom/index.js":"./site/dist/components/select/demos/custom/index.js","./components/select/demos/disabled/index.js":"./site/dist/components/select/demos/disabled/index.js","./components/select/demos/filterable/index.js":"./site/dist/components/select/demos/filterable/index.js","./components/select/demos/format/index.js":"./site/dist/components/select/demos/format/index.js","./components/select/demos/group/index.js":"./site/dist/components/select/demos/group/index.js","./components/select/demos/multiple/index.js":"./site/dist/components/select/demos/multiple/index.js","./components/select/demos/noBorder/index.js":"./site/dist/components/select/demos/noBorder/index.js","./components/select/demos/remote/index.js":"./site/dist/components/select/demos/remote/index.js","./components/select/demos/size/index.js":"./site/dist/components/select/demos/size/index.js","./components/select/index.js":"./site/dist/components/select/index.js","./components/slider/demos/basic/index.js":"./site/dist/components/slider/demos/basic/index.js","./components/slider/demos/disabled/index.js":"./site/dist/components/slider/demos/disabled/index.js","./components/slider/demos/marks/index.js":"./site/dist/components/slider/demos/marks/index.js","./components/slider/demos/range/index.js":"./site/dist/components/slider/demos/range/index.js","./components/slider/demos/step/index.js":"./site/dist/components/slider/demos/step/index.js","./components/slider/demos/stop/index.js":"./site/dist/components/slider/demos/stop/index.js","./components/slider/demos/tooltip/index.js":"./site/dist/components/slider/demos/tooltip/index.js","./components/slider/index.js":"./site/dist/components/slider/index.js","./components/spin/demos/basic/index.js":"./site/dist/components/spin/demos/basic/index.js","./components/spin/demos/overlay/index.js":"./site/dist/components/spin/demos/overlay/index.js","./components/spin/index.js":"./site/dist/components/spin/index.js","./components/spinner/demos/basic/index.js":"./site/dist/components/spinner/demos/basic/index.js","./components/spinner/demos/formatter/index.js":"./site/dist/components/spinner/demos/formatter/index.js","./components/spinner/demos/precision/index.js":"./site/dist/components/spinner/demos/precision/index.js","./components/spinner/demos/size/index.js":"./site/dist/components/spinner/demos/size/index.js","./components/spinner/demos/step/index.js":"./site/dist/components/spinner/demos/step/index.js","./components/spinner/demos/vertical/index.js":"./site/dist/components/spinner/demos/vertical/index.js","./components/spinner/index.js":"./site/dist/components/spinner/index.js","./components/split/demos/basic/index.js":"./site/dist/components/split/demos/basic/index.js","./components/split/demos/complex/index.js":"./site/dist/components/split/demos/complex/index.js","./components/split/demos/nested/index.js":"./site/dist/components/split/demos/nested/index.js","./components/split/demos/range/index.js":"./site/dist/components/split/demos/range/index.js","./components/split/demos/vertical/index.js":"./site/dist/components/split/demos/vertical/index.js","./components/split/index.js":"./site/dist/components/split/index.js","./components/steps/demos/basic/index.js":"./site/dist/components/steps/demos/basic/index.js","./components/steps/demos/clickable/index.js":"./site/dist/components/steps/demos/clickable/index.js","./components/steps/demos/error/index.js":"./site/dist/components/steps/demos/error/index.js","./components/steps/demos/line/index.js":"./site/dist/components/steps/demos/line/index.js","./components/steps/demos/simple/index.js":"./site/dist/components/steps/demos/simple/index.js","./components/steps/index.js":"./site/dist/components/steps/index.js","./components/switch/demos/basic/index.js":"./site/dist/components/switch/demos/basic/index.js","./components/switch/demos/onOff/index.js":"./site/dist/components/switch/demos/onOff/index.js","./components/switch/demos/size/index.js":"./site/dist/components/switch/demos/size/index.js","./components/switch/demos/value/index.js":"./site/dist/components/switch/demos/value/index.js","./components/switch/demos/widthHeight/index.js":"./site/dist/components/switch/demos/widthHeight/index.js","./components/switch/index.js":"./site/dist/components/switch/index.js","./components/table/demos/basic/index.js":"./site/dist/components/table/demos/basic/index.js","./components/table/demos/checkType/index.js":"./site/dist/components/table/demos/checkType/index.js","./components/table/demos/checkedKey_s/index.js":"./site/dist/components/table/demos/checkedKey_s/index.js","./components/table/demos/disableRow/index.js":"./site/dist/components/table/demos/disableRow/index.js","./components/table/demos/export/index.js":"./site/dist/components/table/demos/export/index.js","./components/table/demos/fixColumn/index.js":"./site/dist/components/table/demos/fixColumn/index.js","./components/table/demos/fixHeader/index.js":"./site/dist/components/table/demos/fixHeader/index.js","./components/table/demos/group/index.js":"./site/dist/components/table/demos/group/index.js","./components/table/demos/groupHeader/index.js":"./site/dist/components/table/demos/groupHeader/index.js","./components/table/demos/loading/index.js":"./site/dist/components/table/demos/loading/index.js","./components/table/demos/mergeCell/index.js":"./site/dist/components/table/demos/mergeCell/index.js","./components/table/demos/noDataTemplate/index.js":"./site/dist/components/table/demos/noDataTemplate/index.js","./components/table/demos/resizable/index.js":"./site/dist/components/table/demos/resizable/index.js","./components/table/demos/rowCheckable/index.js":"./site/dist/components/table/demos/rowCheckable/index.js","./components/table/demos/rowClassName/index.js":"./site/dist/components/table/demos/rowClassName/index.js","./components/table/demos/rowExpandable/index.js":"./site/dist/components/table/demos/rowExpandable/index.js","./components/table/demos/scheme/index.js":"./site/dist/components/table/demos/scheme/index.js","./components/table/demos/scrollToRow/index.js":"./site/dist/components/table/demos/scrollToRow/index.js","./components/table/demos/selectedKeys/index.js":"./site/dist/components/table/demos/selectedKeys/index.js","./components/table/demos/sort/index.js":"./site/dist/components/table/demos/sort/index.js","./components/table/demos/stickHeader/index.js":"./site/dist/components/table/demos/stickHeader/index.js","./components/table/demos/stickScrollbar/index.js":"./site/dist/components/table/demos/stickScrollbar/index.js","./components/table/demos/title/index.js":"./site/dist/components/table/demos/title/index.js","./components/table/demos/tooltip/index.js":"./site/dist/components/table/demos/tooltip/index.js","./components/table/demos/tree/index.js":"./site/dist/components/table/demos/tree/index.js","./components/table/demos/type/index.js":"./site/dist/components/table/demos/type/index.js","./components/table/index.js":"./site/dist/components/table/index.js","./components/tabs/demos/basic/index.js":"./site/dist/components/tabs/demos/basic/index.js","./components/tabs/demos/beforeChange/index.js":"./site/dist/components/tabs/demos/beforeChange/index.js","./components/tabs/demos/card/index.js":"./site/dist/components/tabs/demos/card/index.js","./components/tabs/demos/closable/index.js":"./site/dist/components/tabs/demos/closable/index.js","./components/tabs/demos/data/index.js":"./site/dist/components/tabs/demos/data/index.js","./components/tabs/demos/disabled/index.js":"./site/dist/components/tabs/demos/disabled/index.js","./components/tabs/demos/size/index.js":"./site/dist/components/tabs/demos/size/index.js","./components/tabs/demos/vertical/index.js":"./site/dist/components/tabs/demos/vertical/index.js","./components/tabs/index.js":"./site/dist/components/tabs/index.js","./components/tag/demos/basic/index.js":"./site/dist/components/tag/demos/basic/index.js","./components/tag/demos/closable/index.js":"./site/dist/components/tag/demos/closable/index.js","./components/tag/demos/size/index.js":"./site/dist/components/tag/demos/size/index.js","./components/tag/index.js":"./site/dist/components/tag/index.js","./components/timeline/demos/basic/index.js":"./site/dist/components/timeline/demos/basic/index.js","./components/timeline/demos/custom/index.js":"./site/dist/components/timeline/demos/custom/index.js","./components/timeline/demos/type/index.js":"./site/dist/components/timeline/demos/type/index.js","./components/timeline/index.js":"./site/dist/components/timeline/index.js","./components/timepicker/demos/basic/index.js":"./site/dist/components/timepicker/demos/basic/index.js","./components/timepicker/demos/format/index.js":"./site/dist/components/timepicker/demos/format/index.js","./components/timepicker/demos/range/index.js":"./site/dist/components/timepicker/demos/range/index.js","./components/timepicker/demos/step/index.js":"./site/dist/components/timepicker/demos/step/index.js","./components/timepicker/demos/stepRange/index.js":"./site/dist/components/timepicker/demos/stepRange/index.js","./components/timepicker/index.js":"./site/dist/components/timepicker/index.js","./components/tip/demos/basic/index.js":"./site/dist/components/tip/demos/basic/index.js","./components/tip/demos/closable/index.js":"./site/dist/components/tip/demos/closable/index.js","./components/tip/demos/title/index.js":"./site/dist/components/tip/demos/title/index.js","./components/tip/index.js":"./site/dist/components/tip/index.js","./components/tooltip/demos/always/index.js":"./site/dist/components/tooltip/demos/always/index.js","./components/tooltip/demos/basic/index.js":"./site/dist/components/tooltip/demos/basic/index.js","./components/tooltip/demos/confirm/index.js":"./site/dist/components/tooltip/demos/confirm/index.js","./components/tooltip/demos/content/index.js":"./site/dist/components/tooltip/demos/content/index.js","./components/tooltip/demos/position/index.js":"./site/dist/components/tooltip/demos/position/index.js","./components/tooltip/demos/trigger/index.js":"./site/dist/components/tooltip/demos/trigger/index.js","./components/tooltip/index.js":"./site/dist/components/tooltip/index.js","./components/transfer/demos/basic/index.js":"./site/dist/components/transfer/demos/basic/index.js","./components/transfer/demos/customFilter/index.js":"./site/dist/components/transfer/demos/customFilter/index.js","./components/transfer/demos/customList/index.js":"./site/dist/components/transfer/demos/customList/index.js","./components/transfer/demos/label/index.js":"./site/dist/components/transfer/demos/label/index.js","./components/transfer/demos/leftChecked/index.js":"./site/dist/components/transfer/demos/leftChecked/index.js","./components/transfer/demos/tree/index.js":"./site/dist/components/transfer/demos/tree/index.js","./components/transfer/index.js":"./site/dist/components/transfer/index.js","./components/tree/demos/basic/index.js":"./site/dist/components/tree/demos/basic/index.js","./components/tree/demos/checkbox/index.js":"./site/dist/components/tree/demos/checkbox/index.js","./components/tree/demos/contextmenu/index.js":"./site/dist/components/tree/demos/contextmenu/index.js","./components/tree/demos/custom/index.js":"./site/dist/components/tree/demos/custom/index.js","./components/tree/demos/draggable/index.js":"./site/dist/components/tree/demos/draggable/index.js","./components/tree/demos/expandAll/index.js":"./site/dist/components/tree/demos/expandAll/index.js","./components/tree/demos/filterable/index.js":"./site/dist/components/tree/demos/filterable/index.js","./components/tree/demos/loading/index.js":"./site/dist/components/tree/demos/loading/index.js","./components/tree/demos/select/index.js":"./site/dist/components/tree/demos/select/index.js","./components/tree/demos/uncorrelated/index.js":"./site/dist/components/tree/demos/uncorrelated/index.js","./components/tree/index.js":"./site/dist/components/tree/index.js","./components/treeSelect/demos/basic/index.js":"./site/dist/components/treeSelect/demos/basic/index.js","./components/treeSelect/demos/checkbox/index.js":"./site/dist/components/treeSelect/demos/checkbox/index.js","./components/treeSelect/demos/filter/index.js":"./site/dist/components/treeSelect/demos/filter/index.js","./components/treeSelect/demos/load/index.js":"./site/dist/components/treeSelect/demos/load/index.js","./components/treeSelect/demos/multiple/index.js":"./site/dist/components/treeSelect/demos/multiple/index.js","./components/treeSelect/index.js":"./site/dist/components/treeSelect/index.js","./components/upload/demos/basic/index.js":"./site/dist/components/upload/demos/basic/index.js","./components/upload/demos/directory/index.js":"./site/dist/components/upload/demos/directory/index.js","./components/upload/demos/drag/index.js":"./site/dist/components/upload/demos/drag/index.js","./components/upload/demos/files/index.js":"./site/dist/components/upload/demos/files/index.js","./components/upload/demos/gallery/index.js":"./site/dist/components/upload/demos/gallery/index.js","./components/upload/demos/manually/index.js":"./site/dist/components/upload/demos/manually/index.js","./components/upload/index.js":"./site/dist/components/upload/index.js","./docs/angular/index.js":"./site/dist/docs/angular/index.js","./docs/blogs/design/demos/demo0/index.js":"./site/dist/docs/blogs/design/demos/demo0/index.js","./docs/blogs/design/index.js":"./site/dist/docs/blogs/design/index.js","./docs/blogs/diagram/index.js":"./site/dist/docs/blogs/diagram/index.js","./docs/changelog/index.js":"./site/dist/docs/changelog/index.js","./docs/design/8point/index.js":"./site/dist/docs/design/8point/index.js","./docs/design/button/index.js":"./site/dist/docs/design/button/index.js","./docs/design/color/demos/demo0/index.js":"./site/dist/docs/design/color/demos/demo0/index.js","./docs/design/color/index.js":"./site/dist/docs/design/color/index.js","./docs/design/dialog/index.js":"./site/dist/docs/design/dialog/index.js","./docs/design/font/index.js":"./site/dist/docs/design/font/index.js","./docs/design/format/index.js":"./site/dist/docs/design/format/index.js","./docs/design/gutter/index.js":"./site/dist/docs/design/gutter/index.js","./docs/design/hierarchy/index.js":"./site/dist/docs/design/hierarchy/index.js","./docs/design/language/index.js":"./site/dist/docs/design/language/index.js","./docs/design/navigator/index.js":"./site/dist/docs/design/navigator/index.js","./docs/design/text/index.js":"./site/dist/docs/design/text/index.js","./docs/design/tip/index.js":"./site/dist/docs/design/tip/index.js","./docs/event/index.js":"./site/dist/docs/event/index.js","./docs/getting-started/index.js":"./site/dist/docs/getting-started/index.js","./docs/i18n/index.js":"./site/dist/docs/i18n/index.js","./docs/react/index.js":"./site/dist/docs/react/index.js","./docs/theme/index.js":"./site/dist/docs/theme/index.js","./docs/vue/index.js":"./site/dist/docs/vue/index.js"};function t(s){var e=c(s);return n(e)}function c(s){if(!n.o(a,s)){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}return a[s]}t.keys=function(){return Object.keys(a)},t.resolve=c,s.exports=t,t.id="./site/dist sync recursive ^\\.\\/(components|docs)\\/.*index\\.js$"},"./site/dist/design.json":function(s){s.exports=JSON.parse('{"undefined":[{"title":"设计语言","order":0,"sidebar":"design","path":"docs/design/language.md","children":[{"children":[{"title":"通用设计语言King Design","path":"#header-%E9%80%9A%E7%94%A8%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80King%20Design","level":2,"content":"<h2 id=\'header-%E9%80%9A%E7%94%A8%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80King%20Design\'>通用设计语言King Design</h2>","text":"通用设计语言King Design","children":[]},{"title":"King Design的价值","path":"#header-King%20Design%E7%9A%84%E4%BB%B7%E5%80%BC","level":2,"content":"<h2 id=\'header-King%20Design%E7%9A%84%E4%BB%B7%E5%80%BC\'>King Design的价值</h2>","text":"King Design的价值","children":[]},{"title":"设计原则","path":"#header-%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99","level":2,"content":"<h2 id=\'header-%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99\'>设计原则</h2>","text":"设计原则","children":[]}]}]},{"title":"8-Point Grid System","order":0.1,"sidebar":"design","disabled":true,"path":"docs/design/8point.md","children":[{"children":[{"title":"8像素规则","path":"#header-8%E5%83%8F%E7%B4%A0%E8%A7%84%E5%88%99","level":2,"content":"<h2 id=\'header-8%E5%83%8F%E7%B4%A0%E8%A7%84%E5%88%99\'>8像素规则</h2>","text":"8像素规则","children":[]}]}]},{"title":"颜色","order":1,"sidebar":"design","path":"docs/design/color.md","children":[{"children":[{"title":"品牌色","path":"#header-%E5%93%81%E7%89%8C%E8%89%B2","level":2,"content":"<h2 id=\'header-%E5%93%81%E7%89%8C%E8%89%B2\'>品牌色</h2>","text":"品牌色","children":[]}]}]},{"title":"间距","order":2,"sidebar":"design","disabled":true,"path":"docs/design/gutter.md","children":[{"children":[{"title":"遵循8像素规则","path":"#header-%E9%81%B5%E5%BE%AA8%E5%83%8F%E7%B4%A0%E8%A7%84%E5%88%99","level":2,"content":"<h2 id=\'header-%E9%81%B5%E5%BE%AA8%E5%83%8F%E7%B4%A0%E8%A7%84%E5%88%99\'>遵循8像素规则</h2>","text":"遵循8像素规则","children":[]},{"title":"纵向间距","path":"#header-%E7%BA%B5%E5%90%91%E9%97%B4%E8%B7%9D","level":2,"content":"<h2 id=\'header-%E7%BA%B5%E5%90%91%E9%97%B4%E8%B7%9D\'>纵向间距</h2>","text":"纵向间距","children":[]},{"title":"横向间距","path":"#header-%E6%A8%AA%E5%90%91%E9%97%B4%E8%B7%9D","level":2,"content":"<h2 id=\'header-%E6%A8%AA%E5%90%91%E9%97%B4%E8%B7%9D\'>横向间距</h2>","text":"横向间距","children":[]}]}]},{"title":"字体","order":2,"sidebar":"design","disabled":true,"path":"docs/design/font.md","children":[{"children":[{"title":"字体家族","path":"#header-%E5%AD%97%E4%BD%93%E5%AE%B6%E6%97%8F","level":2,"content":"<h2 id=\'header-%E5%AD%97%E4%BD%93%E5%AE%B6%E6%97%8F\'>字体家族</h2>","text":"字体家族","children":[]},{"title":"字体大小","path":"#header-%E5%AD%97%E4%BD%93%E5%A4%A7%E5%B0%8F","level":2,"content":"<h2 id=\'header-%E5%AD%97%E4%BD%93%E5%A4%A7%E5%B0%8F\'>字体大小</h2>","text":"字体大小","children":[]},{"title":"字体行高","path":"#header-%E5%AD%97%E4%BD%93%E8%A1%8C%E9%AB%98","level":2,"content":"<h2 id=\'header-%E5%AD%97%E4%BD%93%E8%A1%8C%E9%AB%98\'>字体行高</h2>","text":"字体行高","children":[]},{"title":"对比度","path":"#header-%E5%AF%B9%E6%AF%94%E5%BA%A6","level":2,"content":"<h2 id=\'header-%E5%AF%B9%E6%AF%94%E5%BA%A6\'>对比度</h2>","text":"对比度","children":[]}]}]},{"title":"格式","order":3,"sidebar":"design","disabled":true,"path":"docs/design/format.md","children":[{"children":[{"title":"费用金额","path":"#header-%E8%B4%B9%E7%94%A8%E9%87%91%E9%A2%9D","level":2,"content":"<h2 id=\'header-%E8%B4%B9%E7%94%A8%E9%87%91%E9%A2%9D\'>费用金额</h2>","text":"费用金额","children":[]},{"title":"日期","path":"#header-%E6%97%A5%E6%9C%9F","level":2,"content":"<h2 id=\'header-%E6%97%A5%E6%9C%9F\'>日期</h2>","text":"日期","children":[]},{"title":"时间","path":"#header-%E6%97%B6%E9%97%B4","level":2,"content":"<h2 id=\'header-%E6%97%B6%E9%97%B4\'>时间</h2>","text":"时间","children":[]}]}]},{"title":"层级关系","order":4,"sidebar":"design","disabled":true,"path":"docs/design/hierarchy.md","children":[{"children":[{"title":"层级阴影","path":"#header-%E5%B1%82%E7%BA%A7%E9%98%B4%E5%BD%B1","level":2,"content":"<h2 id=\'header-%E5%B1%82%E7%BA%A7%E9%98%B4%E5%BD%B1\'>层级阴影</h2>","text":"层级阴影","children":[]}]}]},{"title":"文案","order":6,"sidebar":"design","disabled":true,"path":"docs/design/text.md","children":[{"children":[{"title":"语言","path":"#header-%E8%AF%AD%E8%A8%80","level":2,"content":"<h2 id=\'header-%E8%AF%AD%E8%A8%80\'>语言</h2>","text":"语言","children":[]},{"title":"用户视角","path":"#header-%E7%94%A8%E6%88%B7%E8%A7%86%E8%A7%92","level":2,"content":"<h2 id=\'header-%E7%94%A8%E6%88%B7%E8%A7%86%E8%A7%92\'>用户视角</h2>","text":"用户视角","children":[]},{"title":"CTA(call to action)操作命名","path":"#header-CTA(call%20to%20action)%E6%93%8D%E4%BD%9C%E5%91%BD%E5%90%8D","level":2,"content":"<h2 id=\'header-CTA(call%20to%20action)%E6%93%8D%E4%BD%9C%E5%91%BD%E5%90%8D\'>CTA(call to action)操作命名</h2>","text":"CTA(call to action)操作命名","children":[]},{"title":"简单直接，大白话","path":"#header-%E7%AE%80%E5%8D%95%E7%9B%B4%E6%8E%A5%EF%BC%8C%E5%A4%A7%E7%99%BD%E8%AF%9D","level":2,"content":"<h2 id=\'header-%E7%AE%80%E5%8D%95%E7%9B%B4%E6%8E%A5%EF%BC%8C%E5%A4%A7%E7%99%BD%E8%AF%9D\'>简单直接，大白话</h2>","text":"简单直接，大白话","children":[]},{"title":"切中要害，可感知","path":"#header-%E5%88%87%E4%B8%AD%E8%A6%81%E5%AE%B3%EF%BC%8C%E5%8F%AF%E6%84%9F%E7%9F%A5","level":2,"content":"<h2 id=\'header-%E5%88%87%E4%B8%AD%E8%A6%81%E5%AE%B3%EF%BC%8C%E5%8F%AF%E6%84%9F%E7%9F%A5\'>切中要害，可感知</h2>","text":"切中要害，可感知","children":[]}]}]}],"组件":[{"title":"按钮","order":0,"category":"组件","sidebar":"design","disabled":true,"path":"docs/design/button.md","children":[{"children":[{"title":"应用规则","path":"#header-%E5%BA%94%E7%94%A8%E8%A7%84%E5%88%99","level":2,"content":"<h2 id=\'header-%E5%BA%94%E7%94%A8%E8%A7%84%E5%88%99\'>应用规则</h2>","text":"应用规则","children":[]},{"title":"按钮状态","path":"#header-%E6%8C%89%E9%92%AE%E7%8A%B6%E6%80%81","level":2,"content":"<h2 id=\'header-%E6%8C%89%E9%92%AE%E7%8A%B6%E6%80%81\'>按钮状态</h2>","text":"按钮状态","children":[]},{"title":"按钮类型","path":"#header-%E6%8C%89%E9%92%AE%E7%B1%BB%E5%9E%8B","level":2,"content":"<h2 id=\'header-%E6%8C%89%E9%92%AE%E7%B1%BB%E5%9E%8B\'>按钮类型</h2>","text":"按钮类型","children":[]},{"title":"按钮生成器","path":"#header-%E6%8C%89%E9%92%AE%E7%94%9F%E6%88%90%E5%99%A8","level":2,"content":"<h2 id=\'header-%E6%8C%89%E9%92%AE%E7%94%9F%E6%88%90%E5%99%A8\'>按钮生成器</h2>","text":"按钮生成器","children":[]}]}]},{"title":"导航","order":2,"category":"组件","sidebar":"design","disabled":true,"path":"docs/design/navigator.md","children":[{"children":[{"title":"面包屑导航","path":"#header-%E9%9D%A2%E5%8C%85%E5%B1%91%E5%AF%BC%E8%88%AA","level":2,"content":"<h2 id=\'header-%E9%9D%A2%E5%8C%85%E5%B1%91%E5%AF%BC%E8%88%AA\'>面包屑导航</h2>","text":"面包屑导航","children":[]},{"title":"页签","path":"#header-%E9%A1%B5%E7%AD%BE","level":2,"content":"<h2 id=\'header-%E9%A1%B5%E7%AD%BE\'>页签</h2>","text":"页签","children":[{"children":[{"title":"标签页","path":"#header-%E6%A0%87%E7%AD%BE%E9%A1%B5","level":4,"content":"<h4 id=\'header-%E6%A0%87%E7%AD%BE%E9%A1%B5\'>标签页</h4>","text":"标签页","children":[]},{"title":"选项卡","path":"#header-%E9%80%89%E9%A1%B9%E5%8D%A1","level":4,"content":"<h4 id=\'header-%E9%80%89%E9%A1%B9%E5%8D%A1\'>选项卡</h4>","text":"选项卡","children":[]},{"title":"导航按钮","path":"#header-%E5%AF%BC%E8%88%AA%E6%8C%89%E9%92%AE","level":4,"content":"<h4 id=\'header-%E5%AF%BC%E8%88%AA%E6%8C%89%E9%92%AE\'>导航按钮</h4>","text":"导航按钮","children":[]}]}]}]}]},{"title":"对话框","order":2,"category":"组件","sidebar":"design","disabled":true,"path":"docs/design/dialog.md","children":[{"children":[{"children":[{"title":"无标题对话框","path":"#header-%E6%97%A0%E6%A0%87%E9%A2%98%E5%AF%B9%E8%AF%9D%E6%A1%86","level":3,"content":"<h3 id=\'header-%E6%97%A0%E6%A0%87%E9%A2%98%E5%AF%B9%E8%AF%9D%E6%A1%86\'>无标题对话框</h3>","text":"无标题对话框","children":[]},{"title":"带标题对话框","path":"#header-%E5%B8%A6%E6%A0%87%E9%A2%98%E5%AF%B9%E8%AF%9D%E6%A1%86","level":3,"content":"<h3 id=\'header-%E5%B8%A6%E6%A0%87%E9%A2%98%E5%AF%B9%E8%AF%9D%E6%A1%86\'>带标题对话框</h3>","text":"带标题对话框","children":[]},{"title":"复杂操作对话框","path":"#header-%E5%A4%8D%E6%9D%82%E6%93%8D%E4%BD%9C%E5%AF%B9%E8%AF%9D%E6%A1%86","level":3,"content":"<h3 id=\'header-%E5%A4%8D%E6%9D%82%E6%93%8D%E4%BD%9C%E5%AF%B9%E8%AF%9D%E6%A1%86\'>复杂操作对话框</h3>","text":"复杂操作对话框","children":[]},{"title":"长内容对话框","path":"#header-%E9%95%BF%E5%86%85%E5%AE%B9%E5%AF%B9%E8%AF%9D%E6%A1%86","level":3,"content":"<h3 id=\'header-%E9%95%BF%E5%86%85%E5%AE%B9%E5%AF%B9%E8%AF%9D%E6%A1%86\'>长内容对话框</h3>","text":"长内容对话框","children":[]}]}]}]},{"title":"提示","order":3,"category":"组件","sidebar":"design","disabled":true,"path":"docs/design/tip.md","children":[{"children":[{"children":[{"title":"警告提示","path":"#header-%E8%AD%A6%E5%91%8A%E6%8F%90%E7%A4%BA","level":3,"content":"<h3 id=\'header-%E8%AD%A6%E5%91%8A%E6%8F%90%E7%A4%BA\'>警告提示</h3>","text":"警告提示","children":[]},{"title":"全局提示","path":"#header-%E5%85%A8%E5%B1%80%E6%8F%90%E7%A4%BA","level":3,"content":"<h3 id=\'header-%E5%85%A8%E5%B1%80%E6%8F%90%E7%A4%BA\'>全局提示</h3>","text":"全局提示","children":[]},{"title":"帮助气泡","path":"#header-%E5%B8%AE%E5%8A%A9%E6%B0%94%E6%B3%A1","level":3,"content":"<h3 id=\'header-%E5%B8%AE%E5%8A%A9%E6%B0%94%E6%B3%A1\'>帮助气泡</h3>","text":"帮助气泡","children":[]},{"title":"文字提示","path":"#header-%E6%96%87%E5%AD%97%E6%8F%90%E7%A4%BA","level":3,"content":"<h3 id=\'header-%E6%96%87%E5%AD%97%E6%8F%90%E7%A4%BA\'>文字提示</h3>","text":"文字提示","children":[]}]}]}]}]}')},"./site/dist/docs/angular sync recursive demos.*(index|demo).js$":function(s,e){function n(s){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,s.exports=n,n.id="./site/dist/docs/angular sync recursive demos.*(index|demo).js$"},"./site/dist/docs/angular/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/angular/index.json")),p=a(n("./site/dist/doc.json")),i=n("./site/dist/docs/angular sync recursive demos.*(index|demo).js$"),r=i.keys(),h=[],m=0;m<r.length;m++){var j=r[m];/demo.js$/.test(j)&&m++,h.push(i(j))}var u=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:h})},e}(l.default);e.default=u,(0,o.default)(u,"sidebar",p.default),(0,o.default)(u,"data",d.default)},"./site/dist/docs/angular/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"Angular中使用","order":1.21,"sidebar":"doc"},"catalogs":[],"contents":"<blockquote>\\n<p>目前KPC并没有TypeScript类型声明，所以你需要将KPC组件转为<code>any</code>类型</p>\\n<p>所有组件都已在<code>Angular@8</code>下测试通过</p>\\n</blockquote>\\n<h1 id=\'header-%E5%AE%89%E8%A3%85\'>安装</h1><pre><code class=\\"hljs js\\">npm <span class=\\"hljs-keyword\\">install</span> kpc-angular -S\\n</code></pre>\\n<h1 id=\'header-Angular%20CLI\'>Angular CLI</h1><p>使用<code>@angular/cli</code>可以轻松地初始化Angular项目，但是由于<code>KPC</code>并非通过<code>Angular</code>编写，它引入样式的方式并非<code>styleUrl</code>，而是直接<code>import</code>，所以我们需要额外配置<code>webpack</code>。</p>\\n<h2 id=\'header-%E5%AE%89%E8%A3%85%E5%92%8C%E5%88%9D%E5%A7%8B%E5%8C%96\'>安装和初始化</h2><pre><code class=\\"hljs shell\\">npm install -<span class=\\"hljs-keyword\\">g</span> @angular/<span class=\\"hljs-keyword\\">cli</span>\\nng new my-<span class=\\"hljs-keyword\\">app</span>\\n<span class=\\"hljs-keyword\\">cd</span> my-<span class=\\"hljs-keyword\\">app</span>\\nnpm install kpc-angular -<span class=\\"hljs-built_in\\">S</span>\\n</code></pre>\\n<h2 id=\'header-%E9%85%8D%E7%BD%AEwebpack\'>配置<code>webpack</code></h2><p>要配置Angular CLI初始化的项目的<code>webapck</code>，我们需要安装<code>@angular-builders/custom-webpack</code>，然后修改<code>angular.json</code></p>\\n<pre><code class=\\"hljs shell\\"><span class=\\"hljs-selector-tag\\">npm</span> <span class=\\"hljs-selector-tag\\">install</span> @<span class=\\"hljs-keyword\\">angular</span>-<span class=\\"hljs-keyword\\">builders</span>/<span class=\\"hljs-keyword\\">custom</span>-<span class=\\"hljs-keyword\\">webpack</span> -D\\n</code></pre>\\n<p>修改<code>angular.json</code></p>\\n<pre><code class=\\"hljs diff\\">--- a/angular.json\\n+++ b/angular.json\\n@@ <span class=\\"hljs-number\\">-15</span>,<span class=\\"hljs-number\\">8</span> +<span class=\\"hljs-number\\">15</span>,<span class=\\"hljs-number\\">11</span> @@\\n       <span class=\\"hljs-string\\">\\"prefix\\"</span>: <span class=\\"hljs-string\\">\\"app\\"</span>,\\n       <span class=\\"hljs-string\\">\\"architect\\"</span>: {\\n         <span class=\\"hljs-string\\">\\"build\\"</span>: {\\n-          <span class=\\"hljs-string\\">\\"builder\\"</span>: <span class=\\"hljs-string\\">\\"@angular-devkit/build-angular:browser\\"</span>,\\n+          <span class=\\"hljs-string\\">\\"builder\\"</span>: <span class=\\"hljs-string\\">\\"@angular-builders/custom-webpack:browser\\"</span>,\\n           <span class=\\"hljs-string\\">\\"options\\"</span>: {\\n+            <span class=\\"hljs-string\\">\\"customWebpackConfig\\"</span>: {\\n+              <span class=\\"hljs-string\\">\\"path\\"</span>: <span class=\\"hljs-string\\">\\"./webpack.config.js\\"</span>\\n+            },\\n             <span class=\\"hljs-string\\">\\"outputPath\\"</span>: <span class=\\"hljs-string\\">\\"dist/my-app\\"</span>,\\n             <span class=\\"hljs-string\\">\\"index\\"</span>: <span class=\\"hljs-string\\">\\"src/index.html\\"</span>,\\n             <span class=\\"hljs-string\\">\\"main\\"</span>: <span class=\\"hljs-string\\">\\"src/main.ts\\"</span>,\\n@@ <span class=\\"hljs-number\\">-65</span>,<span class=\\"hljs-number\\">7</span> +<span class=\\"hljs-number\\">68</span>,<span class=\\"hljs-number\\">7</span> @@\\n           }\\n         },\\n         <span class=\\"hljs-string\\">\\"serve\\"</span>: {\\n-          <span class=\\"hljs-string\\">\\"builder\\"</span>: <span class=\\"hljs-string\\">\\"@angular-devkit/build-angular:dev-server\\"</span>,\\n+          <span class=\\"hljs-string\\">\\"builder\\"</span>: <span class=\\"hljs-string\\">\\"@angular-builders/custom-webpack:dev-server\\"</span>,\\n           <span class=\\"hljs-string\\">\\"options\\"</span>: {\\n             <span class=\\"hljs-string\\">\\"browserTarget\\"</span>: <span class=\\"hljs-string\\">\\"my-app:build\\"</span>\\n           },\\n</code></pre>\\n<p>然后我们就可以在根目录下创建<code>webpack.config.js</code>来添加自定义配置了，我们需要将<code>KPC</code>组件引入的<code>css</code>文件直接通过<code>css-loader</code>处理</p>\\n<pre><code class=\\"hljs js\\">const <span class=\\"hljs-built_in\\">path</span> = <span class=\\"hljs-built_in\\">require</span>(<span class=\\"hljs-string\\">\'path\'</span>);\\n\\nmodule.exports = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span><span class=\\"hljs-params\\">(config)</span></span> {\\n  <span class=\\"hljs-built_in\\">config</span>.module.rules.<span class=\\"hljs-built_in\\">find</span>(rule =&gt; {\\n    <span class=\\"hljs-keyword\\">if</span> (rule.test.toString() === <span class=\\"hljs-string\\">\'/\\\\\\\\.css$/\'</span>) {\\n      rule.exclude.push(<span class=\\"hljs-built_in\\">path</span>.resolve(__dirname, <span class=\\"hljs-string\\">\'node_modules/kpc-angular\'</span>));\\n      <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-literal\\">true</span>;\\n    }\\n  });\\n\\n  <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-built_in\\">config</span>;\\n}\\n</code></pre>\\n<h2 id=\'header-%E5%BC%95%E5%85%A5KPC%E7%BB%84%E4%BB%B6\'>引入KPC组件</h2><p>为了使<code>KPC</code>组件正常工作，我们需要使用<code>KPC</code>提供的<code>KpcBrowserModule</code>替换<code>BrowserModule</code>，所以需要同时导入<code>KpcBrowserModule</code>和<code>KpcModule</code>两个模块给<code>AppModule</code>。另外，还需要引入<code>CUSTOM_ELEMENTS_SCHEMA</code>，来使Angular将<code>KPC</code>组件当做<code>Web Component</code>元素</p>\\n<pre><code class=\\"hljs diff\\"><span class=\\"hljs-comment\\">--- a/src/app/app.module.ts</span>\\n+++ b/src/app/app.<span class=\\"hljs-built_in\\">module</span>.ts\\n@@ <span class=\\"hljs-number\\">-1</span>,<span class=\\"hljs-number\\">5</span> +<span class=\\"hljs-number\\">1</span>,<span class=\\"hljs-number\\">5</span> @@\\n-<span class=\\"hljs-keyword\\">import</span> { BrowserModule } <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'@angular/platform-browser\'</span>;\\n-<span class=\\"hljs-keyword\\">import</span> { NgModule } <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'@angular/core\'</span>;\\n+<span class=\\"hljs-keyword\\">import</span> { KpcBrowserModule, KpcModule } <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'kpc-angular\'</span>;\\n+<span class=\\"hljs-keyword\\">import</span> { NgModule, CUSTOM_ELEMENTS_SCHEMA } <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'@angular/core\'</span>;\\n\\n <span class=\\"hljs-keyword\\">import</span> { AppRoutingModule } <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'./app-routing.module\'</span>;\\n <span class=\\"hljs-keyword\\">import</span> { AppComponent } <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'./app.component\'</span>;\\n@@ <span class=\\"hljs-number\\">-9</span>,<span class=\\"hljs-number\\">10</span> +<span class=\\"hljs-number\\">9</span>,<span class=\\"hljs-number\\">12</span> @@ <span class=\\"hljs-keyword\\">import</span> { AppComponent } <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'./app.component\'</span>;\\n     AppComponent\\n   ],\\n   <span class=\\"hljs-name\\">imports</span>: [\\n-    BrowserModule,\\n-    AppRoutingModule\\n+    KpcBrowserModule,\\n+    AppRoutingModule,\\n+    KpcModule\\n   ],\\n   <span class=\\"hljs-name\\">providers</span>: [],\\n-  <span class=\\"hljs-name\\">bootstrap</span>: [AppComponent]\\n+  <span class=\\"hljs-name\\">bootstrap</span>: [AppComponent],\\n+  <span class=\\"hljs-name\\">schemas</span>: [CUSTOM_ELEMENTS_SCHEMA]\\n })\\n <span class=\\"hljs-keyword\\">export</span> <span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">AppModule</span> { }</span>\\n</code></pre>\\n<h2 id=\'header-%E4%BD%BF%E7%94%A8KPC%E7%BB%84%E4%BB%B6\'>使用KPC组件</h2><p>至此，我们就可以愉快地使用<code>KPC</code>组件了</p>\\n<blockquote>\\n<p>需要注意的是，如果你要定义<code>KPC</code>组件的样式，你需要将<code>encapsulation</code>设为<code>ViewEncapsulation.None</code>，否则你将选择不到元素</p>\\n</blockquote>\\n<blockquote>\\n<p><code>KPC</code>提供的组件都以<code>k-</code>作为前缀，并且该前缀具有特殊用途，如果你要自定义组件，请避免使用该前缀</p>\\n</blockquote>\\n<pre><code class=\\"hljs ts\\"><span class=\\"hljs-keyword\\">import</span> { Component, ViewEncapsulation } <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'@angular/core\'</span>;\\n<span class=\\"hljs-keyword\\">import</span> { MessageComponent } <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'kpc-angular\'</span>;\\n\\n@Component({\\n  <span class=\\"hljs-name\\">selector</span>: <span class=\\"hljs-string\\">\'app-root\'</span>,\\n  <span class=\\"hljs-name\\">template</span>: `\\n    &lt;k-button <span class=\\"hljs-built_in\\">type</span>=<span class=\\"hljs-string\\">\\"primary\\"</span> (click)=<span class=\\"hljs-string\\">\\"onClick()\\"</span>&gt;Hello World&lt;/k-button&gt;\\n  `,\\n  <span class=\\"hljs-name\\">style</span>: `\\n    .k-button {\\n      <span class=\\"hljs-name\\">margin</span>: <span class=\\"hljs-number\\">10</span>px;\\n    }\\n  `,\\n  <span class=\\"hljs-name\\">encapsulation</span>: ViewEncapsulation.None,\\n})\\n<span class=\\"hljs-keyword\\">export</span> <span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">AppComponent</span> {</span>\\n  onClick() {\\n    MessageComponent.success(<span class=\\"hljs-string\\">\'Welcome to kpc world!\'</span>);\\n  }\\n}\\n</code></pre>\\n<h1 id=\'header-%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98\'>修改主题</h1><p><code>KPC</code>组件库的样式文件使用<code>stylus</code>编写，使用主题前，我们需要修改<code>webpack</code>配置，让组件的<code>stylus</code>文件进过<code>stylus-loader</code>处理。此时我们需要<code>kpc-angular/@stylus</code>下的文件，不过也可以通过<code>alias</code>配置来保持引入路径统一</p>\\n<p>修改后的<code>webpack.config.js</code>文件如下</p>\\n<pre><code class=\\"hljs js\\">const <span class=\\"hljs-type\\">path</span> = require(<span class=\\"hljs-string\\">\'path\'</span>);\\n\\nmodule.exports = <span class=\\"hljs-keyword\\">function</span>(config) {\\n  config.module.rules.find(<span class=\\"hljs-keyword\\">rule</span> =&gt; {\\n    <span class=\\"hljs-keyword\\">if</span> (<span class=\\"hljs-keyword\\">rule</span>.test.toString() === <span class=\\"hljs-string\\">\'/\\\\\\\\.css$/\'</span>) {\\n      <span class=\\"hljs-keyword\\">rule</span>.<span class=\\"hljs-keyword\\">exclude</span>.push(<span class=\\"hljs-type\\">path</span>.resolve(__dirname, <span class=\\"hljs-string\\">\'node_modules/kpc-angular\'</span>));\\n      <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-keyword\\">true</span>;\\n    }\\n  });\\n\\n  // <span class=\\"hljs-keyword\\">if</span> you want <span class=\\"hljs-keyword\\">to</span> use `ksyun` theme\\n  config.module.rules.find(<span class=\\"hljs-keyword\\">rule</span> =&gt; {\\n    <span class=\\"hljs-keyword\\">if</span> (<span class=\\"hljs-keyword\\">rule</span>.test.toString() === <span class=\\"hljs-string\\">\'/\\\\\\\\.styl$/\'</span>) {\\n      <span class=\\"hljs-keyword\\">rule</span>.<span class=\\"hljs-keyword\\">exclude</span>.push(<span class=\\"hljs-type\\">path</span>.resolve(__dirname, <span class=\\"hljs-string\\">\'node_modules/kpc-angular\'</span>));\\n      <span class=\\"hljs-keyword\\">rule</span>.use.find(loader =&gt; {\\n        <span class=\\"hljs-keyword\\">if</span> (loader.loader === <span class=\\"hljs-string\\">\'stylus-loader\'</span>) {\\n          <span class=\\"hljs-keyword\\">Object</span>.assign(loader.<span class=\\"hljs-keyword\\">options</span>, {\\n            <span class=\\"hljs-string\\">\'resolve url\'</span>: <span class=\\"hljs-keyword\\">true</span>,\\n            <span class=\\"hljs-string\\">\'include css\'</span>: <span class=\\"hljs-keyword\\">true</span>,\\n            <span class=\\"hljs-string\\">\'import\'</span>: <span class=\\"hljs-type\\">path</span>.resolve(__dirname, <span class=\\"hljs-string\\">\'node_modules/kpc-angular/@stylus/styles/themes/ksyun/index.styl\'</span>)\\n          });\\n          <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-keyword\\">true</span>;\\n        }\\n      });\\n      <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-keyword\\">true</span>;\\n    }\\n  });\\n\\n  // <span class=\\"hljs-keyword\\">set</span> <span class=\\"hljs-keyword\\">alias</span>\\n  config.resolve.<span class=\\"hljs-keyword\\">alias</span>[<span class=\\"hljs-string\\">\'kpc-angular\'</span>] = <span class=\\"hljs-string\\">\'kpc-angular/@stylus\'</span>;\\n\\n  <span class=\\"hljs-keyword\\">return</span> config;\\n}\\n</code></pre>\\n","index":130}')},"./site/dist/docs/blogs/design sync recursive demos.*(index|demo).js$":function(s,e,n){var a={"./demos/demo0/index.js":"./site/dist/docs/blogs/design/demos/demo0/index.js"};function t(s){var e=c(s);return n(e)}function c(s){if(!n.o(a,s)){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}return a[s]}t.keys=function(){return Object.keys(a)},t.resolve=c,s.exports=t,t.id="./site/dist/docs/blogs/design sync recursive demos.*(index|demo).js$"},"./site/dist/docs/blogs/design/demos/demo0/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.example=e.default=void 0;var t=a(n("./site/dist/components/select/demos/basic/index.js")).default;e.default=t;e.example=!0},"./site/dist/docs/blogs/design/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/blogs/design/index.json")),p=n("./site/dist/docs/blogs/design sync recursive demos.*(index|demo).js$"),i=p.keys(),r=[],h=0;h<i.length;h++){var m=i[h];/demo.js$/.test(m)&&h++,r.push(p(m))}var j=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:r})},e}(l.default);e.default=j,(0,o.default)(j,"data",d.default)},"./site/dist/docs/blogs/design/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"KPC设计思路","order":0},"catalogs":[{"text":"目录结构","level":2,"id":"header-%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84","content":"<h2 id=\'header-%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84\'>目录结构</h2>"},{"text":"样式","level":2,"id":"header-%E6%A0%B7%E5%BC%8F","content":"<h2 id=\'header-%E6%A0%B7%E5%BC%8F\'>样式</h2>"},{"text":"主题定制","level":3,"id":"header-%E4%B8%BB%E9%A2%98%E5%AE%9A%E5%88%B6","content":"<h3 id=\'header-%E4%B8%BB%E9%A2%98%E5%AE%9A%E5%88%B6\'>主题定制</h3>"},{"text":"构建打包","level":2,"id":"header-%E6%9E%84%E5%BB%BA%E6%89%93%E5%8C%85","content":"<h2 id=\'header-%E6%9E%84%E5%BB%BA%E6%89%93%E5%8C%85\'>构建打包</h2>"},{"text":"单文件构建版","level":3,"id":"header-%E5%8D%95%E6%96%87%E4%BB%B6%E6%9E%84%E5%BB%BA%E7%89%88","content":"<h3 id=\'header-%E5%8D%95%E6%96%87%E4%BB%B6%E6%9E%84%E5%BB%BA%E7%89%88\'>单文件构建版</h3>"},{"text":"多文件css构建版","level":3,"id":"header-%E5%A4%9A%E6%96%87%E4%BB%B6css%E6%9E%84%E5%BB%BA%E7%89%88","content":"<h3 id=\'header-%E5%A4%9A%E6%96%87%E4%BB%B6css%E6%9E%84%E5%BB%BA%E7%89%88\'>多文件css构建版</h3>"},{"text":"多文件stylus构建版","level":3,"id":"header-%E5%A4%9A%E6%96%87%E4%BB%B6stylus%E6%9E%84%E5%BB%BA%E7%89%88","content":"<h3 id=\'header-%E5%A4%9A%E6%96%87%E4%BB%B6stylus%E6%9E%84%E5%BB%BA%E7%89%88\'>多文件stylus构建版</h3>"},{"text":"文档生成","level":2,"id":"header-%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90","content":"<h2 id=\'header-%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90\'>文档生成</h2>"},{"text":"单元测试","level":2,"id":"header-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95","content":"<h2 id=\'header-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95\'>单元测试</h2>"},{"text":"测试工具","level":3,"id":"header-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7","content":"<h3 id=\'header-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7\'>测试工具</h3>"},{"text":"demo测试","level":3,"id":"header-demo%E6%B5%8B%E8%AF%95","content":"<h3 id=\'header-demo%E6%B5%8B%E8%AF%95\'>demo测试</h3>"},{"text":"交互测试","level":3,"id":"header-%E4%BA%A4%E4%BA%92%E6%B5%8B%E8%AF%95","content":"<h3 id=\'header-%E4%BA%A4%E4%BA%92%E6%B5%8B%E8%AF%95\'>交互测试</h3>"}],"contents":"<h2 id=\'header-%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84\'>目录结构</h2><p>整体上看，目录结构涉及组件源码，调试相关，文档展示，单元测试，构建打包等方面，具体如下：</p>\\n<pre><code class=\\"hljs js\\">.\\n├── components <span class=\\"hljs-comment\\">// 组件源码</span>\\n├── styles <span class=\\"hljs-comment\\">// 全局样式</span>\\n├── i18n <span class=\\"hljs-comment\\">// 国际化</span>\\n├\\n├── pages <span class=\\"hljs-comment\\">// 调试页面</span>\\n├── app <span class=\\"hljs-comment\\">// 调试服务启动文件</span>\\n├── views <span class=\\"hljs-comment\\">// 调试服务vdt模板文件</span>\\n├\\n├── docs <span class=\\"hljs-comment\\">// markdown文档</span>\\n├── site <span class=\\"hljs-comment\\">// 文档网站代码</span>\\n├\\n├── test <span class=\\"hljs-comment\\">// 测试代码</span>\\n├\\n├── dist <span class=\\"hljs-comment\\">// 单文件构建目录</span>\\n├── <span class=\\"hljs-meta\\">@css</span> <span class=\\"hljs-comment\\">// css多文件构建目录</span>\\n└── <span class=\\"hljs-meta\\">@stylus</span> <span class=\\"hljs-comment\\">// stylus多文件构建目录</span>\\n</code></pre>\\n<p>与组件相关的文件，全部放到一起，包括：组件逻辑，模板，样式，单元测试，文档，示例</p>\\n<pre><code class=\\"hljs js\\">components/checkbox\\n├── demos <span class=\\"hljs-comment\\">// 文档示例</span>\\n│   ├── basic<span class=\\"hljs-selector-class\\">.md</span>\\n│   ├── group<span class=\\"hljs-selector-class\\">.md</span>\\n│   └── value<span class=\\"hljs-selector-class\\">.md</span>\\n├── index<span class=\\"hljs-selector-class\\">.js</span> <span class=\\"hljs-comment\\">// 组件逻辑</span>\\n├── index<span class=\\"hljs-selector-class\\">.md</span> <span class=\\"hljs-comment\\">// 组件文档</span>\\n├── index<span class=\\"hljs-selector-class\\">.spec</span><span class=\\"hljs-selector-class\\">.js</span> <span class=\\"hljs-comment\\">// 单元测试</span>\\n├── index<span class=\\"hljs-selector-class\\">.styl</span> <span class=\\"hljs-comment\\">// 组件样式</span>\\n├── index<span class=\\"hljs-selector-class\\">.vdt</span> <span class=\\"hljs-comment\\">// 组件模板</span>\\n└── variables<span class=\\"hljs-selector-class\\">.styl</span> <span class=\\"hljs-comment\\">// 样式变量声明</span>\\n</code></pre>\\n<h2 id=\'header-%E6%A0%B7%E5%BC%8F\'>样式</h2><p>对于样式要考虑的一个目标是：主题定制。所以我们不能将样式写死，借助<code>stylus</code>可编译样式语言，我们将kpc中一切可能改变的样式值都定义为变量。</p>\\n<ol>\\n<li>样式变量声明</li>\\n</ol>\\n<p>变量声明分为两部分：全局声明和组件声明。全局声明用于定义全局的样式，例如：主题色，边框色，字体，尺寸等；组件声明会使用全局声明中定义的变量来定义组件使用的变量，这样既可以做到一改全改，又可以针对组件进行特殊化定制。</p>\\n<p>全局声明文件：<code>styles/themes/defaults.styl</code></p>\\n<pre><code class=\\"hljs stylus\\"><span class=\\"hljs-comment\\"><span class=\\"markdown\\">/<span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span>\\n<span class=\\"hljs-code\\">             Theme</span>\\n<span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span>*/</span></span>\\nuse(<span class=\\"hljs-string\\">\'../functions.js\'</span>)\\n$theme-dir := __dirname()\\n$fonts-dir := <span class=\\"hljs-string\\">\'./fonts\'</span>;\\n\\n<span class=\\"hljs-comment\\"><span class=\\"markdown\\">/<span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span>\\n<span class=\\"hljs-code\\">             Colors</span>\\n<span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span>*/</span></span>\\n\\n$red := #db2828\\n$blue := #<span class=\\"hljs-number\\">0</span>a5eee\\n$light-black := #<span class=\\"hljs-number\\">595959</span>\\n\\n\\n<span class=\\"hljs-comment\\"><span class=\\"markdown\\">/<span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span>\\n<span class=\\"hljs-code\\">            Page</span>\\n<span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span><span class=\\"hljs-strong\\">*****</span>*/</span></span>\\n\\n$font-family := <span class=\\"hljs-string\\">\'Microsoft YaHei\'</span>\\n$font-size := <span class=\\"hljs-number\\">14</span>px \\n$text-color := $light-black \\n$primary-color := $blue\\n$disabled-bg-color := #f7f7f7\\n$disabled-border-color := #d9d9d9\\n\\n<span class=\\"hljs-comment\\">// size</span>\\n$<span class=\\"hljs-keyword\\">default</span>-font-size := <span class=\\"hljs-number\\">1</span>rem\\n$small-height := <span class=\\"hljs-number\\">30</span>\\n$small-font-size := unit(<span class=\\"hljs-number\\">12</span> / <span class=\\"hljs-number\\">14</span>, rem)\\n\\n<span class=\\"hljs-comment\\">// box-shadow</span>\\n$box-shadow := <span class=\\"hljs-number\\">0</span> <span class=\\"hljs-number\\">2</span>px <span class=\\"hljs-number\\">8</span>px <span class=\\"hljs-number\\">0</span> rgba(<span class=\\"hljs-number\\">191</span>, <span class=\\"hljs-number\\">191</span>, <span class=\\"hljs-number\\">191</span>, <span class=\\"hljs-number\\">.5</span>)\\n$border-radius := unit(<span class=\\"hljs-number\\">2</span> / <span class=\\"hljs-number\\">14</span>, rem) \\n\\n...\\n\\n</code></pre>\\n<p>组件声明文件：<code>components/checkbox/variables.styl</code></p>\\n<pre><code class=\\"hljs stylus\\">@require(<span class=\\"hljs-string\\">\'../../styles/themes/default.styl\'</span>)\\n\\n$checkbox-width := <span class=\\"hljs-keyword\\">unit</span>(<span class=\\"hljs-number\\">14</span> / <span class=\\"hljs-number\\">14</span>, rem) \\n$checkbox-border-<span class=\\"hljs-keyword\\">color</span> := $dark-border-<span class=\\"hljs-keyword\\">color</span>\\n$checkbox-border-radius := <span class=\\"hljs-number\\">2</span>px\\n$checkbox-bg-<span class=\\"hljs-keyword\\">color</span> := #fff\\n\\n<span class=\\"hljs-comment\\">// text</span>\\n$checkbox-<span class=\\"hljs-keyword\\">text</span>-margin-left := <span class=\\"hljs-keyword\\">unit</span>(<span class=\\"hljs-number\\">8</span> / <span class=\\"hljs-number\\">14</span>, em)\\n\\n<span class=\\"hljs-comment\\">// checked</span>\\n$checkbox-checked-border-<span class=\\"hljs-keyword\\">color</span> := $primary-<span class=\\"hljs-keyword\\">color</span> \\n$checkbox-checked-bg-<span class=\\"hljs-keyword\\">color</span> := $checkbox-checked-border-<span class=\\"hljs-keyword\\">color</span>\\n\\n...\\n</code></pre>\\n<ol start=\\"2\\">\\n<li>组件样式定义</li>\\n</ol>\\n<p>每一个组件都有个样式文件，该样式文件中样式值都使用前面定义的变量进行定义（除非该定义本不该改变）。</p>\\n<p>样式文件：<code>components/checkbox/index.styl</code></p>\\n<pre><code class=\\"hljs stylus\\">@require(<span class=\\"hljs-string\\">\'./variables.styl\'</span>);\\n\\n<span class=\\"hljs-selector-class\\">.k-checkbox</span>\\n    <span class=\\"hljs-attribute\\">display</span> inline-block\\n    <span class=\\"hljs-attribute\\">cursor</span> pointer\\n    <span class=\\"hljs-selector-class\\">.k-wrapper</span>\\n        <span class=\\"hljs-attribute\\">display</span> inline-block\\n        <span class=\\"hljs-attribute\\">width</span> <span class=\\"hljs-variable\\">$checkbox-width</span>\\n        <span class=\\"hljs-attribute\\">height</span> <span class=\\"hljs-variable\\">$checkbox-width</span> \\n        <span class=\\"hljs-attribute\\">vertical-align</span> middle\\n        <span class=\\"hljs-attribute\\">border</span> 1px solid <span class=\\"hljs-variable\\">$checkbox-border-color</span> \\n        <span class=\\"hljs-attribute\\">border-radius</span> <span class=\\"hljs-variable\\">$checkbox-border-radius</span> \\n        <span class=\\"hljs-attribute\\">position</span> relative\\n        <span class=\\"hljs-attribute\\">transition</span> all <span class=\\"hljs-variable\\">$transition</span>\\n        <span class=\\"hljs-attribute\\">background</span> <span class=\\"hljs-variable\\">$checkbox-bg-color</span>\\n\\n...\\n</code></pre>\\n<h3 id=\'header-%E4%B8%BB%E9%A2%98%E5%AE%9A%E5%88%B6\'>主题定制</h3><p>在上面变量声明中，我们使用<code>:=</code>进行赋值，这是<code>stylus</code>的特有语法，意为：如果该变量已被赋值则忽略本次赋值。借助该特性，我们可以在编译时提前引入一个主题文件来改变默认变量定义。借助<code>stylus-loader</code>我们可以为每一个<code>stylus</code>统一引入一个文件，该文件中定义了所有需要重新定义的变量。</p>\\n<pre><code class=\\"hljs js\\">{\\n    <span class=\\"hljs-attribute\\">loader</span>: <span class=\\"hljs-string\\">\'stylus-loader\'</span>,\\n    options: {\\n        // 引入自定义主题文件mytheme/index.styl\\n        import: path.<span class=\\"hljs-built_in\\">resolve</span>(__dirname, <span class=\\"hljs-string\\">\'styles/mytheme/index.styl\'</span>)\\n    }\\n}\\n</code></pre>\\n<p>实际主题定制中，仅仅通过改变变量并不能完成100%的定制需求，当我们需要为组件添加新样式时，仅有的变量便无法满足，因为新增的样式kpc并没有声明相应的变量。所以还需一种方式引入额外样式声明文件。</p>\\n<p>例如：<code>Select</code>默认主题并没有定义<code>border-radius</code>，也没有相应的变量声明，此时我们需要在自定义主题中添加<code>border-radius</code>怎么办？</p>\\n\x3c!-- example --\x3e<p>kpc为每个组件的样式文件<code>index.styl</code>添加了一句代码</p>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-function\\"><span class=\\"hljs-title\\">require</span><span class=\\"hljs-params\\">(<span class=\\"hljs-variable\\">$theme</span>-dir + <span class=\\"hljs-string\\">\'/select.styl\'</span>)</span></span>\\n</code></pre>\\n<p>这里<code>require</code>方法是自定义的方法，定义在文件<code>styles/functions.js</code>中，它的意思是：当文件存在时就包含该文件。所以我们只需要在<code>$theme-dir</code>定义的文件夹中创建<code>select.styl</code>文件，组件就会默认包含该样式文件。</p>\\n<p>这里我们在自定义主题文件中声明<code>$theme-dir</code>指向当前主题所在文件夹，然后在该文件下定义<code>select.styl</code>文件添加样式定义即可。</p>\\n<p><code>styles/mytheme/index.styl</code></p>\\n<pre><code class=\\"hljs stylus\\"><span class=\\"hljs-variable\\">$theme-dir</span> := __dirname(); <span class=\\"hljs-comment\\">// __dirname也为自定义方法，用于获取当前文件所在的文件夹的绝对路径</span>\\n</code></pre>\\n<p><code>styles/mytheme/select.styl</code></p>\\n<pre><code class=\\"hljs stylus\\"><span class=\\"hljs-selector-class\\">.k-select</span>\\n    <span class=\\"hljs-selector-class\\">.k-wrapper</span>\\n        <span class=\\"hljs-attribute\\">border-radius</span> <span class=\\"hljs-variable\\">$border</span>-radius\\n</code></pre>\\n<blockquote>\\n<p>由于我们必须在<code>stylus</code>编译时引入变量定义和新增样式声明，因此当我们需要定制主题时，必须使用<code>stylus</code>多文件构建版。</p>\\n</blockquote>\\n<h2 id=\'header-%E6%9E%84%E5%BB%BA%E6%89%93%E5%8C%85\'>构建打包</h2><p>kpc使用了3中方式进行构建打包，每种方式都有特定的适用场景。</p>\\n<h3 id=\'header-%E5%8D%95%E6%96%87%E4%BB%B6%E6%9E%84%E5%BB%BA%E7%89%88\'>单文件构建版</h3><p>该打包方式将所有组件合并成到一个文件<code>kpc.js</code>中，所有的样式经过编译后合并到文件<code>kpc.css</code>中。该打包方式适合不需要经过<code>webpack</code>构建的项目，只需要在html文件中直接全量引入即可。但是缺点是，由于全量引入加载了不需要的组件，会造成代码冗余。</p>\\n<p>全量打包大致分为两步：</p>\\n<ol>\\n<li>生成索引文件</li>\\n</ol>\\n<p>索引文件是编译的入口文件，它会将所有的组件<code>import</code>进来，然后<code>export</code>出去。但是当组件数变得庞大时，手动维护该文件会非常麻烦。kpc采用扫描所有组件文件，自动生成索引文件的方式来维护该文件。</p>\\n<p>在每个组件入口文件<code>index.js</code>中，最后一句代码来暴露该组件的接口，例如：<code>components/select/index.js</code></p>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-builtin-name\\">export</span> {Select, Option,<span class=\\"hljs-built_in\\"> Group </span>as OptionGroup};\\n</code></pre>\\n<p>构建时，正则匹配该代码，提取组件名称：<code>Select, Option, OptionGroup</code>，然后生成索引代码至<code>components/index.js</code></p>\\n<pre><code class=\\"hljs js\\">import {<span class=\\"hljs-keyword\\">Select</span>, <span class=\\"hljs-keyword\\">Option</span>, OptionGroup} <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'./select\'</span>;\\n\\nexport {\\n    <span class=\\"hljs-keyword\\">Select</span>,\\n    <span class=\\"hljs-keyword\\">Option</span>,\\n    OptionGroup\\n};\\n</code></pre>\\n<ol start=\\"2\\">\\n<li>webpack构建</li>\\n</ol>\\n<p>将上述生成的索引文件<code>components/index.js</code>作为编译入口生成打包后的文件<code>kpc.js</code>，期间使用<code>extract-text-webpack-plugin</code>提取所有css文件至<code>kpc.css</code>即可。</p>\\n<h3 id=\'header-%E5%A4%9A%E6%96%87%E4%BB%B6css%E6%9E%84%E5%BB%BA%E7%89%88\'>多文件css构建版</h3><p>多文件构建版分为css构建版和stylus构建版，它们都能够做到按需加载。唯一的区别是对<code>stylus</code>样式文件的处理方式不同。css构建版，会将所有的<code>stylus</code>编译成<code>css</code>，而stylus构建版，则保留<code>stylus</code>源码。所以stylus构建版能够在开发时进行主题定制，而css构建版则不能。</p>\\n<p>多文件构建时，由于不存在打包过程，所以不需要<code>webpack</code>来构建，通过<code>gulp</code>将各种类型文件单独编译即可。</p>\\n<ol>\\n<li>编译js</li>\\n</ol>\\n<p><code>js</code>文件需要通过<code>babel</code>编译，但是这里需要进行额外的一步替换操作。因为<code>js</code>源码中的样式加载代码为：</p>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-keyword\\">import</span> Intact <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'intact\'</span>;\\n<span class=\\"hljs-keyword\\">import</span> <span class=\\"hljs-keyword\\">template</span> <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'./index.vdt\'</span>;\\n<span class=\\"hljs-keyword\\">import</span> <span class=\\"hljs-string\\">\'../../styles/kpc.styl\'</span>;\\n<span class=\\"hljs-keyword\\">import</span> <span class=\\"hljs-string\\">\'./index.styl\'</span>;\\n</code></pre>\\n<p>进过<code>balel</code>编译后，会变成</p>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-keyword\\">var</span> Intact = <span class=\\"hljs-built_in\\">require</span>(<span class=\\"hljs-string\\">\'intact\'</span>);\\n<span class=\\"hljs-keyword\\">var</span> template = <span class=\\"hljs-built_in\\">require</span>(<span class=\\"hljs-string\\">\'./index.vdt\'</span>);\\n<span class=\\"hljs-built_in\\">require</span>(<span class=\\"hljs-string\\">\'../../styles/kpc.styl\'</span>);\\n<span class=\\"hljs-built_in\\">require</span>(<span class=\\"hljs-string\\">\'./index.styl);</span>\\n</code></pre>\\n<p>实际<code>index.styl</code>文件会编译成<code>index.css</code>，所以这里需要将<code>require(&#39;./index.styl&#39;)</code>替换成<code>require(&#39;./index.css&#39;)</code></p>\\n<ol start=\\"2\\">\\n<li>编译vdt</li>\\n</ol>\\n<p>模板<code>index.vdt</code>文件会编译成<code>index.vdt.js</code>文件。而<code>js</code>中引入的<code>vdt</code>文件不用像<code>stylus</code>一样需要替换，依然为：</p>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-function\\"><span class=\\"hljs-title\\">require</span><span class=\\"hljs-params\\">(<span class=\\"hljs-string\\">\'./index.vdt\'</span>)</span></span>\\n</code></pre>\\n<p>不需要替换的原因是，<code>require</code>方法有一个特性：当不存在<code>./index.vdt</code>时，会去找<code>./index.vdt.js</code>。</p>\\n<ol start=\\"3\\">\\n<li>编译stylus</li>\\n</ol>\\n<p><code>stylus</code>会进过<code>postcss</code>处理，提高兼容性。</p>\\n<h3 id=\'header-%E5%A4%9A%E6%96%87%E4%BB%B6stylus%E6%9E%84%E5%BB%BA%E7%89%88\'>多文件stylus构建版</h3><p>stylus构建版与css构建的构建原理相同，只是比它更简单，因为不需要编译<code>stylus</code>，所以不需要替换<code>js</code>的源码。除了编译<code>js</code>和<code>vdt</code>外，剩下的文件简单复制即可。</p>\\n<h2 id=\'header-%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90\'>文档生成</h2><p>kpc采用<code>markdown</code>书写文档和示例，然后再编译成网站。构建的过程大致如下：</p>\\n<div class=\\"mermaid\\">\\ngraph TB\\n    A[markdown]\\n    A --&gt; B[分析yaml]\\n    A --&gt; G[编译mardown为html]\\n    B --&gt; B1{是否是demo}\\n    G --&gt; B1\\n    B1 -- 是 --&gt; C[分析code]\\n    B1 -- 否 --&gt; I&gt;index.js, index.json]\\n    I -- webpack --&gt; J&gt;client.js]\\n    I -- webpack --&gt; render&gt;render.js]\\n    render -- 静态化 --&gt; html&gt;index.html]\\n    C -- js --&gt; D&gt;index.js]\\n    C -- vdt --&gt; E&gt;index.vdt]\\n    C -- stylus --&gt; F&gt;index.styl]\\n    D --&gt; demoJson&gt;index.json]\\n    E --&gt; demoJson\\n    F --&gt; demoJson\\n    D -.-&gt; | require | I\\n</div>\\n\\n<p>例如：<code>Button</code>组件下存在<code>index.md</code>和<code>demos/basic.md</code>等<code>markdown</code>文件</p>\\n<p><code>index.md</code></p>\\n<pre><code class=\\"hljs markdown\\"><span class=\\"hljs-meta\\">---</span>\\n<span class=\\"hljs-attr\\">title:</span> <span class=\\"hljs-string\\">按钮</span>\\n<span class=\\"hljs-attr\\">category:</span> <span class=\\"hljs-string\\">组件</span>\\n<span class=\\"hljs-attr\\">order:</span> <span class=\\"hljs-number\\">0</span>\\n<span class=\\"hljs-attr\\">sidebar:</span> <span class=\\"hljs-string\\">doc</span>\\n<span class=\\"hljs-meta\\">---</span>\\n\\n<span class=\\"hljs-comment\\"># 属性</span>\\n\\n<span class=\\"hljs-comment\\">## Button</span>\\n</code></pre>\\n<p>上述<code>markdown</code>文件最终生成文件如下：</p>\\n<p><code>index.json</code></p>\\n<pre><code class=\\"hljs json\\">{\\n    <span class=\\"hljs-attr\\">\\"setting\\"</span>: {\\n        <span class=\\"hljs-attr\\">\\"title\\"</span>: <span class=\\"hljs-string\\">\\"按钮\\"</span>,\\n        <span class=\\"hljs-attr\\">\\"category\\"</span>: <span class=\\"hljs-string\\">\\"组件\\"</span>,\\n        <span class=\\"hljs-attr\\">\\"order\\"</span>: <span class=\\"hljs-number\\">0</span>,\\n        <span class=\\"hljs-attr\\">\\"sidebar\\"</span>: <span class=\\"hljs-string\\">\\"doc\\"</span>\\n    },\\n    <span class=\\"hljs-attr\\">\\"contents\\"</span>: <span class=\\"hljs-string\\">\\"&lt;h1 id=\'header-%E5%B1%9E%E6%80%A7\'&gt;属性&lt;/h1&gt;&lt;h2 id=\'header-Button\'&gt;Button&lt;/h2&gt;\\"</span>\\n}\\n</code></pre>\\n<p><code>index.js</code></p>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-keyword\\">import</span> Article <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'~/../src/components/article\'</span>;\\n<span class=\\"hljs-keyword\\">import</span> data <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'./index.json\'</span>;\\n\\n<span class=\\"hljs-keyword\\">const</span> r = <span class=\\"hljs-built_in\\">require</span>.context(<span class=\\"hljs-string\\">\'./\'</span>, <span class=\\"hljs-literal\\">true</span>, <span class=\\"hljs-regexp\\">/demos.*index.js$/</span>);\\n<span class=\\"hljs-keyword\\">const</span> demos = r.keys().map(r);\\n\\n<span class=\\"hljs-keyword\\">export</span> <span class=\\"hljs-keyword\\">default</span> <span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-keyword\\">extends</span> <span class=\\"hljs-title\\">Article</span> {</span>\\n    static data = data;\\n\\n    defaults() {\\n        <span class=\\"hljs-keyword\\">return</span> {...<span class=\\"hljs-keyword\\">super</span>.defaults(), ...data, demos};\\n    }\\n}\\n</code></pre>\\n<p>静态化入口文件：<code>index.html</code></p>\\n<pre><code class=\\"hljs html\\"><span class=\\"hljs-meta\\">&lt;!DOCTYPE html&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">html</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">head</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">meta</span> <span class=\\"hljs-attr\\">charset</span>=<span class=\\"hljs-string\\">\\"utf-8\\"</span> /&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">title</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">title</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">link</span> <span class=\\"hljs-attr\\">rel</span>=<span class=\\"hljs-string\\">\\"stylesheet\\"</span> <span class=\\"hljs-attr\\">href</span>=<span class=\\"hljs-string\\">\\"/theme-kpc.css\\"</span> /&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">head</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">body</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">div</span> <span class=\\"hljs-attr\\">id</span>=<span class=\\"hljs-string\\">\\"page\\"</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">div</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span> <span class=\\"hljs-attr\\">src</span>=<span class=\\"hljs-string\\">\\"/static/client.js\\"</span> <span class=\\"hljs-attr\\">type</span>=<span class=\\"hljs-string\\">\\"text/javascript\\"</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">body</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">html</span>&gt;</span>\\n</code></pre>\\n<p>对于demo文件<code>demos/basic.md</code></p>\\n<pre><code class=\\"hljs markdown\\"><span class=\\"hljs-meta\\">---</span>\\n<span class=\\"hljs-attr\\">title:</span> <span class=\\"hljs-string\\">按钮类型</span>\\n<span class=\\"hljs-attr\\">order:</span> <span class=\\"hljs-number\\">0</span>\\n<span class=\\"hljs-meta\\">---</span>\\n\\n<span class=\\"hljs-string\\">有如下几种类型：默认按钮，主按钮，警告按钮，危险按钮，文字按钮。</span>\\n\\n<span class=\\"hljs-string\\">```vdt</span>\\n<span class=\\"hljs-string\\">import</span> <span class=\\"hljs-string\\">Button</span> <span class=\\"hljs-string\\">from</span> <span class=\\"hljs-string\\">\'kpc/components/button\'</span><span class=\\"hljs-string\\">;</span>\\n\\n<span class=\\"hljs-string\\">&lt;div&gt;</span>\\n    <span class=\\"hljs-string\\">&lt;Button&gt;default&lt;/Button&gt;</span>\\n    <span class=\\"hljs-string\\">&lt;Button</span> <span class=\\"hljs-string\\">type=\\"primary\\"&gt;primay&lt;/Button&gt;</span>\\n    <span class=\\"hljs-string\\">&lt;Button</span> <span class=\\"hljs-string\\">type=\\"warning\\"&gt;warning&lt;/Button&gt;</span>\\n    <span class=\\"hljs-string\\">&lt;Button</span> <span class=\\"hljs-string\\">type=\\"danger\\"&gt;danger&lt;/Button&gt;</span>\\n    <span class=\\"hljs-string\\">&lt;Button</span> <span class=\\"hljs-string\\">type=\\"none\\"&gt;none&lt;/Button&gt;</span>\\n<span class=\\"hljs-string\\">&lt;/div&gt;</span>\\n<span class=\\"hljs-string\\">```</span>\\n\\n<span class=\\"hljs-string\\">```styl</span>\\n<span class=\\"hljs-string\\">.k-btn</span>\\n    <span class=\\"hljs-string\\">margin-right</span> <span class=\\"hljs-number\\">20</span><span class=\\"hljs-string\\">px</span>\\n<span class=\\"hljs-string\\">```</span>\\n</code></pre>\\n<p>demo文件最终生成如下文件：</p>\\n<p><code>demos/basic/index.js</code></p>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-keyword\\">export</span> {<span class=\\"hljs-keyword\\">default</span> <span class=\\"hljs-keyword\\">as</span> data} <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'./index.json\'</span>;\\n<span class=\\"hljs-keyword\\">import</span> Intact <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'intact\'</span>;\\n<span class=\\"hljs-keyword\\">import</span> template <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'./index.vdt\'</span>;\\n<span class=\\"hljs-keyword\\">import</span> <span class=\\"hljs-string\\">\'./index.styl\'</span>; \\n\\n<span class=\\"hljs-keyword\\">export</span> <span class=\\"hljs-keyword\\">default</span> <span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-keyword\\">extends</span> <span class=\\"hljs-title\\">Intact</span> {</span>\\n    @Intact.template()\\n    static template = template;\\n}\\n</code></pre>\\n<p><code>demos/basic/index.vdt</code></p>\\n<pre><code class=\\"hljs vdt\\"><span class=\\"hljs-keyword\\">import</span> Button <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'kpc/components/button\'</span>;\\n\\n<span class=\\"xml\\"><span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">div</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">Button</span>&gt;</span>default<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">Button</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">Button</span> <span class=\\"hljs-attr\\">type</span>=<span class=\\"hljs-string\\">\\"primary\\"</span>&gt;</span>primay<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">Button</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">Button</span> <span class=\\"hljs-attr\\">type</span>=<span class=\\"hljs-string\\">\\"warning\\"</span>&gt;</span>warning<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">Button</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">Button</span> <span class=\\"hljs-attr\\">type</span>=<span class=\\"hljs-string\\">\\"danger\\"</span>&gt;</span>danger<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">Button</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">Button</span> <span class=\\"hljs-attr\\">type</span>=<span class=\\"hljs-string\\">\\"none\\"</span>&gt;</span>none<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">Button</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">div</span>&gt;</span></span>\\n</code></pre>\\n<p><code>demos/basic/index.styl</code></p>\\n<pre><code class=\\"hljs stylus\\"><span class=\\"hljs-selector-class\\">.example</span><span class=\\"hljs-selector-class\\">.index-14</span>\\n    <span class=\\"hljs-selector-class\\">.k-btn</span>\\n        <span class=\\"hljs-attribute\\">margin-right</span> <span class=\\"hljs-number\\">20px</span>\\n</code></pre>\\n<p><code>demos/basic/index.json</code></p>\\n<pre><code class=\\"hljs json\\">{\\n    \\"setting\\": {\\n        \\"title\\": \\"按钮类型\\",\\n        \\"order\\": 0\\n    },\\n    \\"contents\\": \\"<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">p</span>&gt;</span>有如下几种类型：默认按钮，主按钮，警告按钮，危险按钮，文字按钮。<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">p</span>&gt;</span>\\\\n\\",\\n    \\"highlighted\\": [\\n        {\\n            \\"language\\": \\"vdt\\",\\n            \\"content\\": \\"<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">pre</span>&gt;</span><span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">code</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs</span> <span class=\\"hljs-attr\\">jsx</span>\\\\\\"&gt;</span><span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-keyword</span>\\\\\\"&gt;</span>import<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span> Button <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-keyword</span>\\\\\\"&gt;</span>from<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span> <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-string</span>\\\\\\"&gt;</span>\'kpc/components/button\'<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>;\\\\n\\\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">xml</span>\\\\\\"&gt;</span><span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-tag</span>\\\\\\"&gt;</span>&amp;lt;<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-name</span>\\\\\\"&gt;</span>div<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>&amp;gt;<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>\\\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-tag</span>\\\\\\"&gt;</span>&amp;lt;<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-name</span>\\\\\\"&gt;</span>Button<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>&amp;gt;<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>default<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-tag</span>\\\\\\"&gt;</span>&amp;lt;/<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-name</span>\\\\\\"&gt;</span>Button<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>&amp;gt;<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>\\\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-tag</span>\\\\\\"&gt;</span>&amp;lt;<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-name</span>\\\\\\"&gt;</span>Button<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span> <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-attr</span>\\\\\\"&gt;</span>type<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>=<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-string</span>\\\\\\"&gt;</span>\\\\\\"primary\\\\\\"<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>&amp;gt;<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>primay<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-tag</span>\\\\\\"&gt;</span>&amp;lt;/<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-name</span>\\\\\\"&gt;</span>Button<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>&amp;gt;<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>\\\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-tag</span>\\\\\\"&gt;</span>&amp;lt;<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-name</span>\\\\\\"&gt;</span>Button<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span> <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-attr</span>\\\\\\"&gt;</span>type<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>=<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-string</span>\\\\\\"&gt;</span>\\\\\\"warning\\\\\\"<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>&amp;gt;<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>warning<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-tag</span>\\\\\\"&gt;</span>&amp;lt;/<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-name</span>\\\\\\"&gt;</span>Button<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>&amp;gt;<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>\\\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-tag</span>\\\\\\"&gt;</span>&amp;lt;<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-name</span>\\\\\\"&gt;</span>Button<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span> <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-attr</span>\\\\\\"&gt;</span>type<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>=<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-string</span>\\\\\\"&gt;</span>\\\\\\"danger\\\\\\"<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>&amp;gt;<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>danger<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-tag</span>\\\\\\"&gt;</span>&amp;lt;/<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-name</span>\\\\\\"&gt;</span>Button<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>&amp;gt;<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>\\\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-tag</span>\\\\\\"&gt;</span>&amp;lt;<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-name</span>\\\\\\"&gt;</span>Button<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span> <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-attr</span>\\\\\\"&gt;</span>type<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>=<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-string</span>\\\\\\"&gt;</span>\\\\\\"none\\\\\\"<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>&amp;gt;<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>none<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-tag</span>\\\\\\"&gt;</span>&amp;lt;/<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-name</span>\\\\\\"&gt;</span>Button<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>&amp;gt;<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>\\\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-tag</span>\\\\\\"&gt;</span>&amp;lt;/<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-name</span>\\\\\\"&gt;</span>div<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>&amp;gt;<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">code</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">pre</span>&gt;</span>\\"\\n        },\\n        {\\n            \\"language\\": \\"styl\\",\\n            \\"content\\": \\"<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">pre</span>&gt;</span><span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">code</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs</span> <span class=\\"hljs-attr\\">styl</span>\\\\\\"&gt;</span><span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-selector-class</span>\\\\\\"&gt;</span>.k-btn<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>\\\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-attribute</span>\\\\\\"&gt;</span>margin-right<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span> <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-number</span>\\\\\\"&gt;</span>20px<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">code</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">pre</span>&gt;</span>\\"\\n        },\\n        {\\n            \\"language\\": \\"js\\",\\n            \\"content\\": \\"<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">pre</span>&gt;</span><span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">code</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs</span> <span class=\\"hljs-attr\\">js</span>\\\\\\"&gt;</span><span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-keyword</span>\\\\\\"&gt;</span>import<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span> Intact <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-keyword</span>\\\\\\"&gt;</span>from<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span> <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-string</span>\\\\\\"&gt;</span>\'intact\'<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>;\\\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-keyword</span>\\\\\\"&gt;</span>import<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span> template <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-keyword</span>\\\\\\"&gt;</span>from<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span> <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-string</span>\\\\\\"&gt;</span>\'./index.vdt\'<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>;\\\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-keyword</span>\\\\\\"&gt;</span>import<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span> <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-string</span>\\\\\\"&gt;</span>\'./index.styl\'<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>; \\\\n\\\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-keyword</span>\\\\\\"&gt;</span>export<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span> <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-keyword</span>\\\\\\"&gt;</span>default<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span> <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-class</span>\\\\\\"&gt;</span><span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-keyword</span>\\\\\\"&gt;</span>class<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span> <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-keyword</span>\\\\\\"&gt;</span>extends<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span> <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-title</span>\\\\\\"&gt;</span>Intact<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span> <span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span>{\\\\n    @Intact.template()\\\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">span</span> <span class=\\"hljs-attr\\">class</span>=<span class=\\"hljs-string\\">\\\\</span>\\"<span class=\\"hljs-attr\\">hljs-keyword</span>\\\\\\"&gt;</span>static<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">span</span>&gt;</span> template = template;\\\\n}<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">code</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">pre</span>&gt;</span>\\"\\n        }\\n    ]\\n}\\n</code></pre>\\n<p>有了上述编译结果，便可以组织成网页了</p>\\n<h2 id=\'header-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95\'>单元测试</h2><p>单元测试分为两部分</p>\\n<ol>\\n<li>通过文档生成工具生成的demo示例，可以直接使用，完成初步测试，这部分能够达到50%的覆盖率</li>\\n<li>利用demo，完成交互测试</li>\\n</ol>\\n<h3 id=\'header-%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7\'>测试工具</h3><p>kpc使用的测试工具如下：</p>\\n<ol>\\n<li><code>karma</code>：测试平台</li>\\n<li><code>mocha</code>：测试框架</li>\\n<li><code>sinon-chai</code>：断言</li>\\n<li><code>snapshot</code>：快照断言</li>\\n<li><code>istanbul</code>：测试覆盖率统计</li>\\n</ol>\\n<h3 id=\'header-demo%E6%B5%8B%E8%AF%95\'>demo测试</h3><p>测试程序首先会全量加载所有文档生成的示例组件，逐个渲染，第一次通过<code>snapshot</code>生成快照，以后则使用快照与渲染结果进行比较</p>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-keyword\\">import</span> {render} <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'./utils\'</span>;\\n\\n<span class=\\"hljs-comment\\">// 加载所有示例组件</span>\\n<span class=\\"hljs-keyword\\">const</span> req = <span class=\\"hljs-built_in\\">require</span>.context(<span class=\\"hljs-string\\">\'../site/dist/components/\'</span>, <span class=\\"hljs-literal\\">true</span>, <span class=\\"hljs-regexp\\">/demos\\\\/.*index\\\\.js$/</span>);\\n\\ndescribe(<span class=\\"hljs-string\\">\'Demos\'</span>, <span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span> =&gt;</span> {\\n    <span class=\\"hljs-keyword\\">let</span> demo;\\n\\n    afterEach(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span> =&gt;</span> {\\n        demo.destroy();\\n    });\\n\\n    req.keys().forEach(<span class=\\"hljs-function\\"><span class=\\"hljs-params\\">item</span> =&gt;</span> {\\n        <span class=\\"hljs-keyword\\">const</span> paths = item.split(<span class=\\"hljs-string\\">\'/\'</span>);\\n        <span class=\\"hljs-keyword\\">const</span> name = paths[<span class=\\"hljs-number\\">1</span>];\\n        <span class=\\"hljs-keyword\\">const</span> <span class=\\"hljs-keyword\\">type</span> = paths[<span class=\\"hljs-number\\">3</span>];\\n        <span class=\\"hljs-keyword\\">const</span> Demo = req(item).default;\\n\\n        it(<span class=\\"hljs-string\\">`<span class=\\"hljs-subst\\">${name[<span class=\\"hljs-number\\">0</span>].toUpperCase()}</span><span class=\\"hljs-subst\\">${name.substring(<span class=\\"hljs-number\\">1</span>)}</span> <span class=\\"hljs-subst\\">${<span class=\\"hljs-keyword\\">type</span>}</span>`</span>, <span class=\\"hljs-function\\"><span class=\\"hljs-params\\">()</span> =&gt;</span> {\\n            demo = render(Demo);\\n            <span class=\\"hljs-comment\\">// 比较快照和渲染结果</span>\\n            expect(demo.element.outerHTML).to.matchSnapshot();\\n        });\\n    });\\n});\\n</code></pre>\\n<h3 id=\'header-%E4%BA%A4%E4%BA%92%E6%B5%8B%E8%AF%95\'>交互测试</h3><p>demo测试仅仅能够测试首次渲染的结果，不能测试交互后组件的表现。所以需要单独为每个组件编写测试代码，来测试交互逻辑。这里我们依然可以利用示例组件这一现成的组件来进行测试。</p>\\n<p>例如：<code>ButtonGroup</code>的交互逻辑时</p>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-keyword\\">import</span> {dispatchEvent, mount} from <span class=\\"hljs-string\\">\'test/utils\'</span>;\\n// 利用示例组件\\n<span class=\\"hljs-keyword\\">import</span> GroupDemo from <span class=\\"hljs-string\\">\'~/components/button/demos/group\'</span>;\\n\\ndescribe(<span class=\\"hljs-string\\">\'Button\'</span>, () =&gt; {\\n    <span class=\\"hljs-keyword\\">let</span> <span class=\\"hljs-keyword\\">instance</span>;\\n\\n    afterEach(() =&gt; {\\n        <span class=\\"hljs-keyword\\">instance</span>.destroy();\\n       <span class=\\"hljs-built_in\\"> document</span>.body.removeChild(<span class=\\"hljs-keyword\\">instance</span>.<span class=\\"hljs-type\\">element</span>);\\n    });\\n\\n    it(<span class=\\"hljs-string\\">\'should change value when click radio buttons\'</span>, () =&gt; {\\n        <span class=\\"hljs-keyword\\">instance</span> = mount(GroupDemo);\\n\\n        dispatchEvent(<span class=\\"hljs-keyword\\">instance</span>.refs.__radioShanghai.<span class=\\"hljs-type\\">element</span>, <span class=\\"hljs-string\\">\'click\'</span>);\\n        expect(<span class=\\"hljs-keyword\\">instance</span>.get(<span class=\\"hljs-string\\">\'city\'</span>)).<span class=\\"hljs-keyword\\">to</span>.eql(<span class=\\"hljs-string\\">\'shanghai\'</span>);\\n        dispatchEvent(<span class=\\"hljs-keyword\\">instance</span>.refs.__checkboxShanghai.<span class=\\"hljs-type\\">element</span>, <span class=\\"hljs-string\\">\'click\'</span>);\\n        expect(<span class=\\"hljs-keyword\\">instance</span>.get(<span class=\\"hljs-string\\">\'cities\'</span>)).<span class=\\"hljs-keyword\\">to</span>.eql([<span class=\\"hljs-string\\">\'shanghai\'</span>]);\\n        dispatchEvent(<span class=\\"hljs-keyword\\">instance</span>.refs.__checkboxShanghai.<span class=\\"hljs-type\\">element</span>, <span class=\\"hljs-string\\">\'click\'</span>);\\n        expect(<span class=\\"hljs-keyword\\">instance</span>.get(<span class=\\"hljs-string\\">\'cities\'</span>)).<span class=\\"hljs-keyword\\">to</span>.eql([]);\\n    });\\n});\\n</code></pre>\\n<blockquote>\\n<p>所以demo示例中，可能存在<code>ref=&quot;__test&quot;</code>这样的代码，它们是为单元测试服务的</p>\\n</blockquote>\\n","index":18}')},"./site/dist/docs/blogs/diagram sync recursive demos.*(index|demo).js$":function(s,e){function n(s){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,s.exports=n,n.id="./site/dist/docs/blogs/diagram sync recursive demos.*(index|demo).js$"},"./site/dist/docs/blogs/diagram/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/blogs/diagram/index.json")),p=n("./site/dist/docs/blogs/diagram sync recursive demos.*(index|demo).js$"),i=p.keys(),r=[],h=0;h<i.length;h++){var m=i[h];/demo.js$/.test(m)&&h++,r.push(p(m))}var j=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:r})},e}(l.default);e.default=j,(0,o.default)(j,"data",d.default)},"./site/dist/docs/blogs/diagram/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"基于mxGraph的组件化开发思想","order":1},"catalogs":[{"text":"图形","level":2,"id":"header-%E5%9B%BE%E5%BD%A2","content":"<h2 id=\'header-%E5%9B%BE%E5%BD%A2\'>图形</h2>"},{"text":"mxCell","level":3,"id":"header-mxCell","content":"<h3 id=\'header-mxCell\'>mxCell</h3>"},{"text":"画布","level":2,"id":"header-%E7%94%BB%E5%B8%83","content":"<h2 id=\'header-%E7%94%BB%E5%B8%83\'>画布</h2>"}],"contents":"<p>最近在往KPC组件库添加绘图组件，用于绘制网络拓扑图或者流程图等，在调研了一些绘图工具库之后，发现mxGraph非常强大，可以满足各种图形绘制需求，官方还提供了一个基于它的在线图形编辑器。</p>\\n<p>在基于mxGraph开发组件之前，我们需要先了解一下它的一些基本概念和使用方法。</p>\\n<h2 id=\'header-%E5%9B%BE%E5%BD%A2\'>图形</h2><p>mxGraph将图形分为两类：<code>vertex</code>（点：指的各种图形，如：矩形，三角形等）和<code>edge</code>（边：指连线，包括带箭头和不带箭头的各种线条），这两类图形统称为<code>cell</code>，分别通过<code>vertex</code>和<code>edge</code>属性标示</p>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-comment\\">// vertex</span>\\ncell.<span class=\\"hljs-built_in\\">vertex</span> = <span class=\\"hljs-keyword\\">true</span>;\\n\\n<span class=\\"hljs-comment\\">// edge</span>\\ncell.edge = <span class=\\"hljs-keyword\\">true</span>;\\n</code></pre>\\n<h3 id=\'header-mxCell\'>mxCell</h3><p>mxGraph将所有元素统称为<code>cell</code>，该元素通过类<code>mxCell</code>创建，该类包含3个重要信息：</p>\\n<ol>\\n<li><code>value</code> 元素的标签<code>label</code>，对于图形<code>vertex</code>一般显示在图形中央的文案，对于线<code>edge</code>便是线条\\n上的标签，该属性支持<code>html</code>字符串</li>\\n<li><code>geometry</code> 通过<code>mxGeometry</code>创建，用来定义图形的位置和大小；对线条<code>edge</code>而言，可以用来定义\\n线条的起始点和控制点</li>\\n<li><code>style</code> 一个类似<code>dom</code>上<code>style</code>属性的样式字符串，只不过它支持的样式是针对<code>svg</code>的，跟<code>css</code>有\\n差别</li>\\n</ol>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-keyword\\">const</span> <span class=\\"hljs-keyword\\">value</span> = <span class=\\"hljs-string\\">\'label\'</span>;\\n<span class=\\"hljs-keyword\\">const</span> geo = <span class=\\"hljs-keyword\\">new</span> mxGeometry(<span class=\\"hljs-number\\">10</span>, <span class=\\"hljs-number\\">10</span>, <span class=\\"hljs-number\\">100</span>, <span class=\\"hljs-number\\">100</span>); <span class=\\"hljs-comment\\">// 坐标(10, 10)，大小 100 * 100</span>\\n<span class=\\"hljs-keyword\\">const</span> style = <span class=\\"hljs-string\\">\'rounded=1;whiteSpace=wrap;html=1;arcSize=10\'</span>; <span class=\\"hljs-comment\\">// 默认图形为矩形rectangle，rounded：圆角，圆角大小为arcSize：10</span>\\n<span class=\\"hljs-keyword\\">const</span> cell = <span class=\\"hljs-keyword\\">new</span> mxCell(<span class=\\"hljs-keyword\\">value</span>, geo, style);\\n</code></pre>\\n<h2 id=\'header-%E7%94%BB%E5%B8%83\'>画布</h2><p>有了图形，我们需要画布，以便将这些图形添加到画布上。mxGraph提供了<code>mxGraph</code>类来创建画布。</p>\\n","index":102}')},"./site/dist/docs/changelog sync recursive demos.*(index|demo).js$":function(s,e){function n(s){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,s.exports=n,n.id="./site/dist/docs/changelog sync recursive demos.*(index|demo).js$"},"./site/dist/docs/changelog/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/changelog/index.json")),p=a(n("./site/dist/doc.json")),i=n("./site/dist/docs/changelog sync recursive demos.*(index|demo).js$"),r=i.keys(),h=[],m=0;m<r.length;m++){var j=r[m];/demo.js$/.test(j)&&m++,h.push(i(j))}var u=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:h})},e}(l.default);e.default=u,(0,o.default)(u,"sidebar",p.default),(0,o.default)(u,"data",d.default)},"./site/dist/docs/changelog/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"更新日志","order":99,"sidebar":"doc"},"catalogs":[],"contents":"<h2 id=\'header-v1.3.6\'>v1.3.6</h2><ol>\\n<li><code>Add</code> <code>Spinner</code> <code>Radio</code> <code>Checkbox</code>新增<code>change</code>事件，该事件只会通过用户点击或输入行为触发，有别于<code>$change:value</code> <a href=\\"https://github.com/ksc-fe/kpc/issues/441\\">#441</a> <a href=\\"https://github.com/ksc-fe/kpc/issues/448\\">#448</a></li>\\n<li><code>Add</code> <code>Colorpicker</code>支持<code>disabled</code>状态 <a href=\\"https://github.com/ksc-fe/kpc/issues/442\\">#442</a></li>\\n<li><code>Add</code> <code>Tabs</code>支持<code>beforeChange</code>属性，以便在切换标签时定义拦截逻辑 <a href=\\"https://github.com/ksc-fe/kpc/issues/440\\">#440</a></li>\\n<li><code>Add</code> <code>Table</code>支持<code>scrollToRowByIndex</code>和<code>scrollToRowByKey</code>方法，可以通过索引和<code>key</code>滚动到指定的行 <a href=\\"https://github.com/ksc-fe/kpc/issues/447\\">#447</a></li>\\n<li><code>Fix</code> 修复<code>Slider</code>在验证错误状态下边框样式问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/439\\">#439</a></li>\\n<li><code>Fix</code> 修复<code>TreeSelect</code>筛选时，点击展开收起箭头会清空关键字的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/438\\">#438</a></li>\\n<li><code>Fix</code> 修复<code>TreeSelect</code>当<code>FormItem</code>必填时，点击箭头会立即触发不必要的验证的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/449\\">#449</a></li>\\n<li><code>Fix</code> 修复<code>Tooltip</code> ssr渲染作用于<code>Table</code>的<code>tr</code>标签上，导致<code>html</code>不合法然后页面错乱的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/431\\">#431</a></li>\\n<li><code>Fix</code> 修复<code>Tooltip</code>当<code>disabled</code>状态变更导致弹层关闭，可能会在下次更新重新打开弹层的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/443\\">#443</a></li>\\n</ol>\\n<p><strong>Vue</strong></p>\\n<ol>\\n<li><code>Add</code> <code>Dialog</code>组件全局安装KPC时，会添加到原型链，以便支持<code>this.$dialog</code>方式调用静态方法 <a href=\\"https://github.com/ksc-fe/kpc/issues/444\\">#444</a></li>\\n</ol>\\n<h2 id=\'header-v1.3.5\'>v1.3.5</h2><ol>\\n<li><code>Add</code> <code>Spinner</code>支持<code>width</code>属性，方便设置宽度 <a href=\\"https://github.com/ksc-fe/kpc/issues/422\\">#422</a></li>\\n<li><code>Add</code> <code>Select</code>支持自定义<code>value</code>的展示内容 <a href=\\"https://github.com/ksc-fe/kpc/issues/421\\">#421</a></li>\\n<li><code>Add</code> <code>Tree</code>支持关闭选中功能 <a href=\\"https://github.com/ksc-fe/kpc/issues/432\\">#432</a></li>\\n<li><code>Add</code> <code>Tree</code>新增<code>defaultExpandAll</code>属性，可以默认展开所有节点 <a href=\\"https://github.com/ksc-fe/kpc/issues/430\\">#430</a></li>\\n<li><code>Add</code> 新增下拉树选择组件<code>TreeSelect</code> <a href=\\"https://github.com/ksc-fe/kpc/issues/423\\">#423</a></li>\\n<li><code>Fix</code> 修复<code>Tree</code> <code>disabled</code>状态的节点依然可以选中的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/429\\">#429</a></li>\\n<li><code>Fix</code> 修复<code>Tree</code>调用<code>Node</code>的方法修改节点，原始数据没有修改的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/434\\">#434</a></li>\\n<li><code>Fix</code> 修复<code>Datepicker</code>在英文下的样式问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/435\\">#435</a></li>\\n<li><code>Fix</code> 修复<code>Table</code> <code>disabled</code>的行，依然会被全选/反全选修改选中状态的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/437\\">#437</a></li>\\n<li><code>Fix</code> 修复<code>Datepicker</code>在<code>datetime</code>模式下，设置<code>value</code>为空不能清除日期的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/436\\">#436</a></li>\\n<li><code>Fix</code> 部分文案没有国际化的问题</li>\\n</ol>\\n<p><strong>Vue</strong></p>\\n<ol>\\n<li><code>Add</code> 内置动画样式支持在<code>Vue</code>下使用</li>\\n<li><code>Fix</code> 修复<code>Dropdown</code>在<code>Vue</code>模板编译没有去掉空白字符时<code>{preserveWhitespace: false}</code>，报错的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/425\\">#425</a></li>\\n<li><code>Fix</code> 修复<code>Checkbox/Radio</code>的<code>trueValue</code>使用连字符风格<code>true-value</code>失效的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/433\\">#433</a></li>\\n<li><code>Fix</code> 修复<code>.sync</code>和<code>$change</code>类型事件同时作用于同一属性时报错的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/428\\">#428</a></li>\\n</ol>\\n<h2 id=\'header-v1.3.4\'>v1.3.4</h2><ol>\\n<li><code>Fix</code> 修复<code>Icon</code>不能通过字符串设置<code>style</code>属性的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/416\\">#416</a></li>\\n<li><code>Fix</code> 修复<code>Diagram</code> <code>import</code>了某个没有<code>export</code>的变量的报错 <a href=\\"https://github.com/ksc-fe/kpc/issues/418\\">#418</a> </li>\\n<li><code>Fix</code> 修复<code>Datepicker</code>选择了时间时，便不能清除<code>value</code>的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/419\\">#419</a></li>\\n<li><code>Doc</code> 发布静态资源到金山云<code>KS3</code>，提高文档网站访问速度 <a href=\\"https://github.com/ksc-fe/kpc/issues/417\\">#417</a></li>\\n</ol>\\n<p><strong>Vue</strong></p>\\n<ol>\\n<li><code>Fix</code> 修复组件属性名和事件名为驼峰形式时，便不能在<code>html</code>模板中使用的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/420\\">#420</a></li>\\n</ol>\\n<h2 id=\'header-v1.3.3\'>v1.3.3</h2><ol>\\n<li><code>Refactor</code> 优化<code>Table</code>更新性能，去掉不必要的渲染，hover和check性能提升47到64倍 <a href=\\"https://github.com/ksc-fe/kpc/issues/414\\">#414</a></li>\\n<li><code>Fix</code> 修复<code>Slider</code>在设置了步长<code>step</code>不为<code>1</code>的情况下，<code>marks</code>展示位置不对的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/415\\">#415</a></li>\\n</ol>\\n<h2 id=\'header-v1.3.2\'>v1.3.2</h2><ol>\\n<li><code>Fix</code> 修复<code>Tree</code>在非关联状态下<code>uncorrelated</code>，初始化<code>checkedKeys</code>依然会选中子元素的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/412\\">#412</a></li>\\n</ol>\\n<h2 id=\'header-v1.3.1\'>v1.3.1</h2><ol>\\n<li><code>Fix</code> 修复<code>Diagram</code>服务器端渲染(SSR)报错的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/409\\">#409</a></li>\\n</ol>\\n<p><strong>Vue</strong></p>\\n<ol>\\n<li><code>Fix</code> 修复<code>Table</code>在数据清空后，选中状态依然会保留的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/411\\">#411</a></li>\\n</ol>\\n<p><strong>Angular</strong></p>\\n<ol>\\n<li><code>Fix</code> 修复<code>Table</code>在销毁时报错的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/410\\">#410</a></li>\\n</ol>\\n<h2 id=\'header-v1.3.0\'>v1.3.0</h2><ol>\\n<li><code>Add</code> 新增绘图组件<code>Diagram</code>，用于绘制流程图，拓扑图等 <a href=\\"https://github.com/ksc-fe/kpc/issues/397\\">#397</a></li>\\n<li><code>Add</code> <code>Colorpicker</code>新增<code>hsv</code>颜色模式 <a href=\\"https://github.com/ksc-fe/kpc/issues/396\\">#396</a></li>\\n<li><code>Add</code> 拆分<code>React/Vue</code>下的包单独(<code>kpc-react/kpc-vue</code>)发布，原有使用方式依然有效 <a href=\\"https://github.com/ksc-fe/kpc/issues/378\\">#378</a></li>\\n<li><code>Change</code> 将<code>Code</code>组件从索引文件<code>index.js</code>中剔除，因为它比较庞大，影响开发编译速度 <a href=\\"https://github.com/ksc-fe/kpc/issues/376\\">#376</a></li>\\n<li><code>Fix</code> 修复<code>Table</code>在<code>stickHeader</code>的情况下，传入自定义数据来导出表格会报错的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/394\\">#394</a></li>\\n<li><code>Fix</code> 修复<code>Colorpicker</code>当<code>r === g === b</code>时，调整色相然后选择颜色，会回到上一个色相的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/395\\">#395</a></li>\\n<li><code>Fix</code> 修复<code>Pagination</code>存在跳转页码时，文字不能垂直居中对齐的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/398\\">#398</a></li>\\n<li><code>Fix</code> 修复<code>BreadcrumbItem</code>等组件<code>to</code>属性，针对<code>Object</code>类型验证错误的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/401\\">#401</a></li>\\n<li><code>Fix</code> 修复<code>Spinner</code>替换成<code>ButtonGroup</code>组件，<code>checkType</code>失效的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/402\\">#402</a></li>\\n<li><code>Fix</code> 修复<code>Message</code>展示的文案，会将英文单词截断换行的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/403\\">#403</a></li>\\n<li><code>Fix</code> 修复<code>Radio/Checkbox</code>定义<code>title</code>属性时，<code>title</code>属性没有添加到正确的元素上的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/404\\">#404</a> </li>\\n<li><code>Fix</code> 修复<code>Button</code>在<code>type=&quot;link&quot;</code>的情况下，<code>disabled</code>样式不对的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/400\\">#400</a></li>\\n<li><code>Fix</code> 修复<code>Datepicker</code>在<code>datetime</code>模式下，设置了<code>minDate</code>但时间依然会选择到比<code>minDate</code>小的值的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/406\\">#406</a></li>\\n<li><code>Fix</code> 修复<code>Table</code>在全选了情况下，清空数据<code>data</code>，会触发多次<code>$change:checked</code>事件的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/407\\">#407</a></li>\\n<li><code>Fix</code> 修复<code>Table</code>在选择了某些行的情况，<code>Table</code>被销毁掉时，依然会触发<code>$change:checked</code>事件的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/129\\">#129</a></li>\\n</ol>\\n<h3 id=\'header-Vue\'>Vue</h3><ol>\\n<li><code>Fix</code> 修复<code>Tooltip</code>作用与<code>Radio</code>上时，无法切换<code>Radio</code>的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/408\\">#408</a></li>\\n<li><code>Fix</code> 修复<code>Drawer</code>中存在<code>Select</code>，当在<code>mounted</code>生命周期中更新<code>Select</code>数据时，菜单无法弹出的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/405\\">#405</a></li>\\n</ol>\\n<h2 id=\'header-v1.2.1\'>v1.2.1</h2><ol>\\n<li><code>Add</code> <code>Select</code>支持<code>position</code>属性来定义弹出菜单的位置 <a href=\\"https://github.com/ksc-fe/kpc/issues/383\\">#383</a> </li>\\n<li><code>Add</code> <code>Spinner</code>支持格式化<code>value</code>，来展示前后缀，如：展示单位 <a href=\\"https://github.com/ksc-fe/kpc/issues/385\\">#385</a></li>\\n<li><code>Add</code> <code>Slider</code>支持<code>step</code>设为<code>0</code>，来取消<code>step</code>的步长限制 <a href=\\"https://github.com/ksc-fe/kpc/issues/388\\">#388</a></li>\\n<li><code>Add</code> <code>Input</code>支持<code>frozenOnInput</code>属性，用来在输入过程中冻结<code>value</code>值的变化，适用于需要纠正输入的情况，当输入完毕才更新<code>value</code> <a href=\\"https://github.com/ksc-fe/kpc/issues/389\\">#389</a></li>\\n<li><code>Add</code> 新增拾色器组件<code>Colorpicker</code> <a href=\\"https://github.com/ksc-fe/kpc/issues/386\\">#386</a></li>\\n<li><code>Add</code> <code>Datepicker</code>选择日期范围时，支持选择同一天 <a href=\\"https://github.com/ksc-fe/kpc/issues/390\\">#390</a></li>\\n<li><code>Add</code> <code>Timepicker</code>在范围选择并且设置了步长的情况下，始终将最大值（默认：23:59:59）作为最后一项 <a href=\\"https://github.com/ksc-fe/kpc/issues/391\\">#391</a></li>\\n<li><code>Add</code> <code>Slider</code>新增<code>change</code>事件，该事件不会在拖动的过程中触发，而是拖动结束后触发 <a href=\\"https://github.com/ksc-fe/kpc/issues/387\\">#387</a></li>\\n<li><code>Add</code> <code>Dropdown/Tooltip</code>弹出组件，当鼠标点击弹层内容，然后拖动到弹层之外，不会关闭弹层了，这样可以在弹层之中展示<code>Slider</code>等拖动组件时，不会拖动调整取值时意外关闭弹层 <a href=\\"https://github.com/ksc-fe/kpc/issues/392\\">#392</a></li>\\n<li><code>Add</code> <code>Upload</code>在<code>Error</code>对象中新增<code>response</code>字段，用来获取接口的报错信息 <a href=\\"https://github.com/ksc-fe/kpc/issues/393\\">#393</a></li>\\n<li><code>Change</code> <code>Message</code> <code>ksyun</code>主题样式调整 <a href=\\"https://github.com/ksc-fe/kpc/issues/380\\">#380</a></li>\\n<li><code>Fix</code> 修复<code>Slider</code>在开始值和结束值相等的情况下，滑块会处于中心位置的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/377\\">#377</a></li>\\n<li><code>Fix</code> 修复<code>Spinner</code>在<code>Input</code>存在<code>border-radius</code>下的样式问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/384\\">#384</a></li>\\n<li><code>Fix</code> 修复kpc组件存在过渡动画时，如果该元素处于隐藏状态，元素不能正确添加/删除的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/362\\">#362</a></li>\\n</ol>\\n<h3 id=\'header-Vue%20%2F%20React%20%2F%20Angular\'>Vue / React / Angular</h3><ol>\\n<li><code>Fix</code> 修复父元素阻止了<code>click</code>事件的冒泡，kpc组件的<code>click</code>便无法触发的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/353\\">#353</a></li>\\n</ol>\\n<h2 id=\'header-v1.2.0\'>v1.2.0</h2><ol>\\n<li><h4 id=\'header-Add%20%E6%94%AF%E6%8C%81Angular%E6%A1%86%E6%9E%B6\'><code>Add</code> 支持<code>Angular</code>框架</h4></li>\\n<li><code>Add</code> <code>Input</code>在设置了<code>suffix</code>图标，同时支持清除<code>clearable</code>时，可以通过<code>stackClearIcon</code>属性来堆叠清除按钮在<code>suffix</code>图标上，而非并排展示，以此节省空间 <a href=\\"https://github.com/ksc-fe/kpc/issues/366\\">#366</a> </li>\\n<li><code>Add</code> <code>Tabs</code>在卡片模式下，新增切换动画 <a href=\\"https://github.com/ksc-fe/kpc/issues/369\\">#369</a></li>\\n<li><code>Add</code> <code>Dialog</code>新增<code>width</code>属性，来自定义弹窗宽度 <a href=\\"https://github.com/ksc-fe/kpc/issues/372\\">#372</a></li>\\n<li><code>Add</code> <code>Datepicker</code>在范围选择下，在选择了第一个值时，会触发事件<code>selectStart</code>，开发者可以通过该事件动态改变组件的取值范围 <a href=\\"https://github.com/ksc-fe/kpc/issues/371\\">#371</a></li>\\n<li><code>Add</code> <code>Tooltip</code>支持<code>always</code>属性，可以使弹层内容保持常开或常闭状态 <a href=\\"https://github.com/ksc-fe/kpc/issues/373\\">#373</a></li>\\n<li><code>Add</code> <code>Slider</code>支持展示气泡提示，默认提示内容为当前取值，可以通过<code>tooltip</code>改变该内容；同时支持<code>always</code>属性，使气泡一直展示 <a href=\\"https://github.com/ksc-fe/kpc/issues/367\\">#367</a></li>\\n<li><code>Add</code> <code>Dialog</code>新增<code>mode</code>属性，当该值为<code>hide</code>时，组件关闭不会销毁主体内容，而仅仅只是隐藏它 <a href=\\"https://github.com/ksc-fe/kpc/issues/374\\">#374</a></li>\\n<li><code>Add</code> <code>TableColumn</code>的<code>minWidth</code>属性目前可以在渲染时就保证列宽不能小于<code>minWidth</code>指定的值，而非只是拖拽的时候 <a href=\\"https://github.com/ksc-fe/kpc/issues/375\\">#375</a></li>\\n</ol>\\n<h3 id=\'header-Vue\'>Vue</h3><ol>\\n<li><code>Fix</code> 修复<code>Tooltip</code>在指定<code>v-show=&quot;false&quot;</code>时不能隐藏的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/363\\">#363</a></li>\\n<li><code>Fix</code> 修复<code>DropdownItem</code>嵌套<code>Checkbox</code>时，没有去掉<code>padding</code>的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/357\\">#357</a></li>\\n</ol>\\n<h3 id=\'header-React\'>React</h3><ol>\\n<li><code>Fix</code> 修复某些情况下移除元素会报错的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/364\\">#364</a></li>\\n<li><code>Fix</code> 修复<code>Tooltip</code>在<code>Redux Provider</code>下会报错的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/365\\">#365</a></li>\\n</ol>\\n<h2 id=\'header-v1.1.5\'>v1.1.5</h2><ol>\\n<li><code>Change</code> <code>Form</code>表单验证规则<code>required</code>针对空白字符会当做空字符处理 <a href=\\"https://github.com/ksc-fe/kpc/issues/355\\">#355</a></li>\\n<li><code>Fix</code> 修复<code>Upload</code>在IE下，当<code>beforeUpload</code>返回<code>false</code>时，<code>gallery</code>上传类型图片会闪动的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/361\\">#361</a></li>\\n<li><code>Fix</code> 修复<code>Dialog</code>在继承的使用情况下，<code>mount</code>生命周期拿不到<code>refs</code>的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/356\\">#356</a></li>\\n<li><code>Fix</code> 修复<code>Checkbox/Radio</code>在IE11下，文案展示问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/350\\">#350</a></li>\\n<li><code>Doc</code> 修复<code>Tabs</code>文档示例报错的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/354\\">#354</a></li>\\n</ol>\\n<h2 id=\'header-v1.1.4\'>v1.1.4</h2><ol>\\n<li><code>Fix</code> 修复<code>Datepicker</code>不能通过<code>Date</code>对象设置最大/小(<code>maxDate/minDate</code>)日期的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/352\\">#352</a></li>\\n<li><code>Fix</code> 修复<code>Checkbox</code>文本过长时，折行没有对齐的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/350\\">#350</a></li>\\n<li><code>Refactor</code> 优化级联选择<code>Cascader</code>在大数据下的性能 <a href=\\"https://github.com/ksc-fe/kpc/issues/351\\">#351</a></li>\\n</ol>\\n<h2 id=\'header-v1.1.3\'>v1.1.3</h2><ol>\\n<li><code>Fix</code> 修复<code>Datepicker</code>点击清空按钮，<code>value</code>被清空，但是依然会展示原始日期的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/349\\">#349</a></li>\\n</ol>\\n<h2 id=\'header-v1.1.2\'>v1.1.2</h2><ol>\\n<li><code>Add</code> <code>Dialog</code>新增强制关闭事件<code>terminate</code>和回调方法<code>terminate</code>属性 <a href=\\"https://github.com/ksc-fe/kpc/issues/347\\">#347</a></li>\\n<li><code>Add</code> <code>Dialog</code>新增<code>escClosable</code>属性，用于指定是否可以按ESC键关闭弹窗，非<code>confirm</code>类型的快捷弹窗现在不允许ESC关闭</li>\\n<li><code>Change</code> 在多<code>Dialog</code>情况下，按ESC键一个一个地关闭弹窗，而非一次性全部关闭 <a href=\\"https://github.com/ksc-fe/kpc/issues/348\\">#348</a></li>\\n<li><code>Fix</code> 修复<code>Checkbox/Radio</code>在Mac版Firefox下，文本不对齐的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/343\\">#343</a></li>\\n<li><code>Fix</code> 修复宽度<code>100%</code>的<code>Table</code>，宽度由大变小时，会展示横向滚动条的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/342\\">#342</a></li>\\n<li><code>Fix</code> 修复<code>Pagination</code>某些情况下，会触发两次<code>change</code>事件的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/341\\">#341</a></li>\\n<li><code>Fix</code> 修复<code>Upload</code>文件类型检测有可能会误报的问题，如：<code>tar</code>文件 <a href=\\"https://github.com/ksc-fe/kpc/issues/340\\">#340</a></li>\\n</ol>\\n<h3 id=\'header-React\'>React</h3><ol>\\n<li><code>Add</code> 新增React 16 New Context Api的支持，同时支持React-Router V5 <a href=\\"https://github.com/ksc-fe/kpc/issues/344\\">#344</a></li>\\n<li><code>Fix</code> 修复<code>Table</code>单元格中使用<code>Tooltip</code>，插入新行时会报错的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/345\\">#345</a></li>\\n</ol>\\n<h2 id=\'header-v1.1.1\'>v1.1.1</h2><ol>\\n<li><code>Fix</code> 修复<code>Datepicker</code>一处报错<code>self is undefined</code></li>\\n</ol>\\n<h2 id=\'header-v1.1.0\'>v1.1.0</h2><ol>\\n<li><code>Add</code> <code>Code</code>代码编辑器worker支持跨域加载 <a href=\\"https://github.com/ksc-fe/kpc/issues/312\\">#312</a></li>\\n<li><code>Add</code> <code>Tooltip</code>支持<code>disabled</code>禁用提示 <a href=\\"https://github.com/ksc-fe/kpc/issues/337\\">#337</a></li>\\n<li><code>Add</code> <code>Table</code>支持行提示 <a href=\\"https://github.com/ksc-fe/kpc/issues/335\\">#335</a></li>\\n<li><code>Add</code> <code>Table</code>支持树形表格展示 <a href=\\"https://github.com/ksc-fe/kpc/issues/260\\">#260</a></li>\\n<li><code>Add</code> <code>Datepicker</code>和<code>Timepicker</code>支持格式化日期字符串 <a href=\\"https://github.com/ksc-fe/kpc/issues/336\\">#336</a></li>\\n<li><code>Fix</code> 修复<code>Form</code>在webpack tree-shaking下样式丢失的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/338\\">#338</a></li>\\n</ol>\\n<h2 id=\'header-v1.0.1\'>v1.0.1</h2><ol>\\n<li><code>Fix</code> 修复<code>Table</code>在表头吸顶<code>stickHeader</code>的情况下，调整列宽<code>resizable</code>报错的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/330\\">#330</a></li>\\n<li><code>Fix</code> 修复<code>Tooltip</code>作用于<code>Select</code>上面，点击空白处，弹出菜单只能依次消失的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/331\\">#331</a></li>\\n<li><code>Fix</code> 修复<code>Grid</code>响应式情况下，断点都变成了<code>1600px</code>的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/332\\">#332</a></li>\\n</ol>\\n<h1 id=\'header-v1.0.0\'>v1.0.0</h1><h3 id=\'header-%E6%96%B0%E5%A2%9E%E7%BB%84%E4%BB%B6\'>新增组件</h3><ol>\\n<li><code>Add</code> 新增图钉组件<code>Affix</code>，用于滚动页面固定某些内容 <a href=\\"https://github.com/ksc-fe/kpc/issues/300\\">#300</a></li>\\n<li><code>Add</code> 新增走马灯（轮播图）组件<code>Carousel</code> <a href=\\"https://github.com/ksc-fe/kpc/issues/299\\">#299</a></li>\\n<li><code>Add</code> 新增代码编辑器组件<code>Code</code>，基于<code>Monaco Editor</code>(VSCode)封装而来 <a href=\\"https://github.com/ksc-fe/kpc/issues/288\\">#288</a></li>\\n<li><code>Add</code> 新增卡片组件<code>Card</code> <a href=\\"https://github.com/ksc-fe/kpc/issues/241\\">#241</a></li>\\n</ol>\\n<h3 id=\'header-%E6%96%B0%E5%A2%9E%E7%89%B9%E6%80%A7\'>新增特性</h3><ol>\\n<li><code>Add</code> 新增全局配置方法<code>configure</code>，使用<code>configure({useWrapper: true})</code>可以开启<code>Dropdown/Tooltip</code>兼容模式 <a href=\\"https://github.com/ksc-fe/kpc/issues/291\\">#291</a></li>\\n<li><code>Add</code> <code>Tree</code>如果初始化数据中包含<code>children</code>，当异步加载时，不会再次调用<code>loadData</code>函数去加载数据 <a href=\\"https://github.com/ksc-fe/kpc/issues/290\\">#290</a></li>\\n<li><code>Add</code> <code>Table</code>支持保存调整列宽后的列宽信息 <a href=\\"https://github.com/ksc-fe/kpc/issues/292\\">#292</a></li>\\n<li><code>Add</code> <code>Table</code>新增表头分组功能 <a href=\\"https://github.com/ksc-fe/kpc/issues/265\\">#265</a></li>\\n<li><code>Add</code> <code>Table</code>新增合并单元格功能 <a href=\\"https://github.com/ksc-fe/kpc/issues/265\\">#265</a></li>\\n<li><code>Add</code> <code>Upload</code>支持文件类型强检测，不合法是抛出<code>error</code>事件，因为浏览器<code>accept</code>属性仅仅只是建议类型，并不能限制类型 <a href=\\"https://github.com/ksc-fe/kpc/issues/271\\">#271</a></li>\\n<li><code>Add</code> <code>Progress</code>新增<code>warning</code>状态 <a href=\\"https://github.com/ksc-fe/kpc/issues/301\\">#301</a></li>\\n<li><code>Add</code> <code>Tree</code>支持父子<code>Checkbox</code>非关联模式，该模式下父子的选中状态单独控制，互不影响 <a href=\\"https://github.com/ksc-fe/kpc/issues/302\\">#302</a></li>\\n<li><code>Add</code> <code>FormItem</code>新增<code>fluid</code>属性，展示<code>100%</code>宽度的表单项 <a href=\\"https://github.com/ksc-fe/kpc/issues/303\\">#303</a></li>\\n<li><code>Add</code> 新增<code>Vue/React</code>编译包，减少<code>webpack</code> <code>alias</code>配置项 <a href=\\"https://github.com/ksc-fe/kpc/issues/308\\">#308</a></li>\\n<li><code>Add</code> <code>Button</code>组件新增<code>secondary</code>和<code>link</code>类型 <a href=\\"https://github.com/ksc-fe/kpc/issues/320\\">#320</a></li>\\n<li><code>Add</code> <code>Dialog</code>支持点击遮罩层关闭弹窗 <a href=\\"https://github.com/ksc-fe/kpc/issues/324\\">#324</a></li>\\n<li><code>Add</code> <code>Dialog</code>静态方法支持展示带标题<code>title</code>的弹窗 <a href=\\"https://github.com/ksc-fe/kpc/issues/324\\">#324</a></li>\\n<li><code>Add</code> <code>Select</code>和<code>Cascader</code>在无内容时，展示“无内容”的提示层 <a href=\\"https://github.com/ksc-fe/kpc/issues/321\\">#321</a></li>\\n<li><code>Add</code> <code>Datepicker</code>和<code>Timepicker</code>新增“确定”按钮，以方便用户关闭弹层 <a href=\\"https://github.com/ksc-fe/kpc/issues/322\\">#322</a></li>\\n<li><code>Add</code> <code>Timepicker</code>支持设置<code>step</code>时，隐藏“分钟”或/和“秒钟”的展示 <a href=\\"https://github.com/ksc-fe/kpc/issues/323\\">#323</a></li>\\n<li><code>Add</code> <code>Tooltip</code>新增主题支持，默认展示为<code>dark</code>主题 <a href=\\"https://github.com/ksc-fe/kpc/issues/326\\">#326</a></li>\\n<li><code>Add</code> <code>Transfer</code>新增<code>list</code> <code>header</code>扩展点，以及左右箭头按钮的控制，使之可以更灵活地定义穿梭框逻辑 <a href=\\"https://github.com/ksc-fe/kpc/issues/314\\">#314</a></li>\\n<li><code>Add</code> 当<code>Table</code> <code>fixHeader</code>设为<code>true</code>时，表格高度自动设为<code>100%</code>，然后根据父容器高度确定表格体的高度来展示滚动条 <a href=\\"https://github.com/ksc-fe/kpc/issues/310\\">#310</a></li>\\n</ol>\\n<h3 id=\'header-%E7%BB%84%E4%BB%B6%E4%BC%98%E5%8C%96\'>组件优化</h3><ol>\\n<li><code>Refactor</code> 优化<code>Table</code> <code>hover</code>以及滚动的性能 <a href=\\"https://github.com/ksc-fe/kpc/issues/310\\">#310</a> </li>\\n<li><code>Refactor</code> 优化<code>Slider</code>滚动条热区，更容易点击 <a href=\\"https://github.com/ksc-fe/kpc/issues/307\\">#307</a></li>\\n<li><code>Refactor</code> 优化弹出元素动画，使用<code>show/hide</code>动画替代<code>create/remove</code>动画，使动画更流畅 <a href=\\"https://github.com/ksc-fe/kpc/issues/278\\">#278</a></li>\\n</ol>\\n<h3 id=\'header-Bug%E4%BF%AE%E5%A4%8D\'>Bug修复</h3><ol>\\n<li><code>Fix</code> 修复错误地引入<code>babel-types</code>导致可能不存在该模块而编译报错的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/283\\">#283</a></li>\\n<li><code>Fix</code> 修复<code>Pagination</code>当页码过长时溢出的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/286\\">#286</a></li>\\n<li><code>Fix</code> 修复<code>Timepicker</code>范围选择时，首次弹出如果先选择结束时间，时间取值不对的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/289\\">#289</a></li>\\n<li><code>Fix</code> 修复<code>Table</code>调整列宽后，如果表格容器宽度变大，会出现表格宽度小于容器宽度的情况 <a href=\\"https://github.com/ksc-fe/kpc/issues/293\\">#293</a></li>\\n<li><code>Fix</code> 修复<code>Slider</code>有<code>Spinner</code>输入框时，在设置了<code>step</code>的情况下，输入的过程中也会修正值，导致无法输入想要的值的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/294\\">#294</a></li>\\n<li><code>Fix</code> 修复<code>webpack</code>配置可能禁用了<code>require.ensure</code>（如：新版Create React App）导致有些异步加载的模块报错的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/304\\">#304</a></li>\\n<li><code>Fix</code> 修复<code>Switch</code>点击滑块，由于<code>click</code>事件被<code>stopPropagation</code>而在外部监听不到<code>click</code>事件的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/309\\">#309</a></li>\\n<li><code>Fix</code> 修复<code>Table</code>当表格高度固定时，<code>data</code>改变导致出现滚动条，固定表头和表格体没对齐的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/310\\">#310</a></li>\\n<li><code>Fix</code> 修复默认主题下<code>Message</code> icon颜色丢失的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/317\\">#317</a></li>\\n</ol>\\n<h3 id=\'header-%E7%A0%B4%E5%9D%8F%E6%80%A7%E5%8F%98%E6%9B%B4\'>破坏性变更</h3><ol>\\n<li><code>Change</code> <code>Drawer</code>由之前的点击抽屉外任何区域关闭抽屉，改为点击遮罩层才关闭</li>\\n<li><code>Change</code> <code>Datepicker</code>在选择时间时，去掉无用的年月展示信息</li>\\n<li><code>Change</code> 使用<code>es6 module</code>进行构建，例如代码编译优化 <a href=\\"https://github.com/ksc-fe/kpc/issues/297\\">#297</a></li>\\n</ol>\\n<h3 id=\'header-%E6%96%87%E6%A1%A3\'>文档</h3><ol>\\n<li><code>Add</code> 支持<code>Vue/React</code>示例代码，在CodeSandbox中打开 <a href=\\"https://github.com/ksc-fe/kpc/issues/267\\">#267</a></li>\\n<li><code>Vue/React</code>开始文档补充CDN用法</li>\\n</ol>\\n<h2 id=\'header-v0.8.11\'>v0.8.11</h2><ol>\\n<li><code>Add</code> <code>Table</code>调整列宽后，支持持久化保存列宽信息 <a href=\\"https://github.com/ksc-fe/kpc/issues/292\\">#292</a></li>\\n</ol>\\n<h2 id=\'header-v0.8.10\'>v0.8.10</h2><h3 id=\'header-Core\'>Core</h3><ol>\\n<li><code>Add</code> 对<code>Slider/Spinner</code>在<code>min/max/step</code>等属性加入更多的验证和错误提示，以便排查问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/270\\">#270</a></li>\\n<li><code>Add</code> <code>Table</code>的<code>TableColumn</code>新增<code>align</code>属性，用于定义单元格和表头对齐方式 <a href=\\"https://github.com/ksc-fe/kpc/issues/263\\">#263</a></li>\\n<li><code>Add</code> <code>Input</code>新增<code>nativeProps</code>属性，用来直接定义原生<code>input</code>上的属性，如：<code>maxlength</code> <a href=\\"https://github.com/ksc-fe/kpc/issues/272\\">#272</a></li>\\n<li><code>Add</code> 所有组件如果定义的属性不在组件声明的样式中，则默认添加到组件返回的元素上 <a href=\\"https://github.com/ksc-fe/kpc/issues/269\\">#269</a></li>\\n<li><code>Change</code> <code>Dropdown</code>及其它派生的弹层类型，将<code>z-index</code>设为<code>999</code> <a href=\\"https://github.com/ksc-fe/kpc/issues/273\\">#273</a></li>\\n<li><code>Change</code> 修改<code>root</code> <code>font-size</code>为默认的<code>16px</code>，以便与其它样式库（bootstrap）结合使用 <a href=\\"https://github.com/ksc-fe/kpc/issues/266\\">#266</a></li>\\n<li><code>Fix</code> 修复一些webpack 1.0的兼容性问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/280\\">#280</a></li>\\n<li><code>Fix</code> 修复<code>Drawer</code>内容过长，没有展示滚动条的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/275\\">#275</a></li>\\n</ol>\\n<h3 id=\'header-Vue\'>Vue</h3><ol>\\n<li><code>Fix</code> 修复<code>Form</code>无法验证父组件传入的<code>props</code>里的数据，只能验证<code>data</code>上的数据的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/261\\">#261</a></li>\\n<li><code>Change</code> <code>Dropdown</code>及其它派生的弹层类型，都不会再用另外一个元素包裹，这样它们不会影响到触发器的样式 <a href=\\"https://github.com/ksc-fe/kpc/issues/147\\">#147</a></li>\\n</ol>\\n<h2 id=\'header-React\'>React</h2><ol>\\n<li><code>Change</code> <code>Dropdown</code>及其它派生的弹层类型，都不会再用另外一个元素包裹，这样它们不会影响到触发器的样式 <a href=\\"https://github.com/ksc-fe/kpc/issues/147\\">#147</a></li>\\n</ol>\\n<h2 id=\'header-v0.8.9\'>v0.8.9</h2><h3 id=\'header-Core\'>Core</h3><ol>\\n<li><code>Add</code> 新增分割面板组件<code>Split</code> <a href=\\"https://github.com/ksc-fe/kpc/issues/93\\">#93</a></li>\\n<li><code>Add</code> <code>Table</code>支持选中行并高亮，不同与<code>checked</code>状态 <a href=\\"https://github.com/ksc-fe/kpc/issues/257\\">#257</a></li>\\n<li><code>Fix</code> 修复<code>Drawer</code>下面嵌套使用<code>Dialog</code>，<code>Dialog</code>的样式会收到<code>Drawer</code>影响的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/252\\">#252</a></li>\\n<li><code>Fix</code> 修复<code>Slider</code> <code>Spinner</code>在<code>max/min/step</code>为<code>undefined</code>时，会导致死循环的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/255]\\">#255</a> <a href=\\"https://github.com/ksc-fe/kpc/issues/216\\">#216</a></li>\\n<li><code>Fix</code> 修复<code>Menu</code>在手风琴<code>accordion</code>模式下，如果存在嵌套菜单，嵌套菜单不能展开的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/251\\">#251</a></li>\\n<li><code>Fix</code> 修复<code>Table</code>在固定表头，并且表格体高度自适应的情况，改变表格高度，导致出现滚动条时，表头不能自动对齐的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/258\\">#258</a></li>\\n<li><code>Fix</code> 修复<code>Datepicker</code>在范围选择情况下，当只选择一个值即触发<code>$change:value</code>事件的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/259\\">#259</a></li>\\n<li><code>Fix</code> 修复<code>Tooltip</code>作用于不支持<code>click</code>或者<code>mouseenter/mouseleave</code>的组件上，提示失效的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/269\\">#269</a></li>\\n<li><code>Fix</code> 修复<code>Cascader</code>首次点击子菜单，不能展开的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/253\\">#253</a></li>\\n</ol>\\n<h3 id=\'header-React\'>React</h3><ol>\\n<li><code>Fix</code> 修复在kpc组件前插入dom时报错的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/256\\">#256</a></li>\\n</ol>\\n<h3 id=\'header-Vue\'>Vue</h3><ol>\\n<li><code>Fix</code> 修复<code>Editable</code>嵌套使用<code>router-link</code>某些情况下会造成<code>$router</code>丢失的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/254\\">#254</a></li>\\n</ol>\\n<h2 id=\'header-v0.8.8\'>v0.8.8</h2><h3 id=\'header-Core\'>Core</h3><ol>\\n<li><code>Add</code> <code>Dialog / Drawer</code>支持指定插入的容器 <a href=\\"https://github.com/ksc-fe/kpc/issues/250\\">#250</a></li>\\n<li><code>Add</code> <code>Dialog</code>支持隐藏关闭按钮 <a href=\\"https://github.com/ksc-fe/kpc/issues/248\\">#248</a></li>\\n<li><code>Add</code> <code>Message</code>静态方法会返回<code>Message</code>实例，以便外部操作<code>Message</code> <a href=\\"https://github.com/ksc-fe/kpc/issues/247\\">#247</a></li>\\n<li><code>Add</code> <code>Pagination</code>支持隐藏每页条数选择框 <a href=\\"https://github.com/ksc-fe/kpc/issues/246\\">#246</a></li>\\n<li><code>Add</code> <code>Table</code>支持内边框的栅格样式 <a href=\\"https://github.com/ksc-fe/kpc/issues/110\\">#110</a></li>\\n<li><code>Fix</code> 修复<code>Message</code>在<code>ksyun</code>主题下，文本内容超长时，展示不友好的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/245\\">#245</a></li>\\n</ol>\\n<h2 id=\'header-v0.8.7\'>v0.8.7</h2><h3 id=\'header-Core\'>Core</h3><ol>\\n<li><code>Add</code> <code>Transfer</code>支持自定义过滤内容 <a href=\\"https://github.com/ksc-fe/kpc/issues/233\\">#233</a></li>\\n<li><code>Add</code> <code>Transfer</code>改用<code>key</code>跟踪数据，以支持动态数据，并且右侧已选数据可以不存在全部数据中 <a href=\\"https://github.com/ksc-fe/kpc/issues/235\\">#235</a></li>\\n<li><code>Fix</code> 修复<code>Tree</code>拖拽节点到不能够放置的节点上时，不应该触发<code>dragend</code>事件的问题</li>\\n<li><code>Fix</code> 修复<code>Tooltip</code>当单词过长，会超出内容区域的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/240\\">#240</a></li>\\n<li><code>Fix</code> 修复<code>Drawer</code>，点击抽屉内的元素，然后该元素立即消失，导致抽屉被关闭的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/243\\">#243</a></li>\\n<li><code>Fix</code> 修复<code>Steps</code>在简洁模式<code>simple</code>下，描述文案过长会消失的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/242\\">#242</a></li>\\n<li><code>Doc</code> 新增默认事件说明文档 <a href=\\"https://github.com/ksc-fe/kpc/issues/244\\">#244</a></li>\\n</ol>\\n<h3 id=\'header-Vue\'>Vue</h3><ol>\\n<li><code>Add</code> 优化<code>vue-devtool</code>下的调试体验</li>\\n<li><code>Fix</code> 修复在kpc组件上同时使用<code>v-for</code>和<code>ref</code>可能会到时<code>ref</code>数组顺序错乱的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/239\\">#239</a></li>\\n</ol>\\n<h3 id=\'header-React\'>React</h3><ol>\\n<li><code>Fix</code> 修复某些情况下动画元素不能被正确删除的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/238\\">#238</a></li>\\n</ol>\\n<h2 id=\'header-v0.8.6\'>v0.8.6</h2><h3 id=\'header-Core\'>Core</h3><ol>\\n<li><code>Fix</code> 修复<code>Tree</code>在Firefox下无法拖动的问题</li>\\n<li><code>Fix</code> 修复<code>Tree</code>在某些浏览器下，由于<code>dragover</code>事件触发太快，导致不能释放的问题</li>\\n</ol>\\n<h2 id=\'header-v0.8.5\'>v0.8.5</h2><h3 id=\'header-Core\'>Core</h3><ol>\\n<li><code>Add</code> <code>Dialog</code>提供<code>success</code> <code>warning</code> <code>error</code> <code>confirm</code>4种快捷弹窗 <a href=\\"https://github.com/ksc-fe/kpc/issues/230\\">#230</a></li>\\n<li><code>Add</code> <code>Table</code>新增<code>stripe</code>属性，来展示奇偶行交替色样式 <a href=\\"https://github.com/ksc-fe/kpc/issues/228\\">#228</a></li>\\n<li><code>Add</code> <code>Dropdown</code>在展开状态下会自动添加<code>k-dropdown-open</code>样式名，以便定义展开状态样式 <a href=\\"https://github.com/ksc-fe/kpc/issues/229\\">#229</a></li>\\n<li><code>Add</code> <code>Button</code>支持<code>ghost</code>属性，用来定义透明背景的按钮，用于底色为深色的场景 <a href=\\"https://github.com/ksc-fe/kpc/issues/231\\">#231</a></li>\\n<li><code>Add</code> 新增<code>Search</code>组件，该组件默认为收起状态，点击后展开搜索框 <a href=\\"https://github.com/ksc-fe/kpc/issues/227\\">#227</a></li>\\n<li><code>Add</code> <code>Tree</code>新增<code>draggable</code>属性，支持节点拖拽功能 <a href=\\"https://github.com/ksc-fe/kpc/issues/234\\">#234</a> </li>\\n<li><code>Style</code> 一些样式调整 <a href=\\"https://github.com/ksc-fe/kpc/issues/228\\">#228</a></li>\\n<li><code>Fix</code> 修复<code>Collapse</code>在Firefox下没有收起动画的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/228\\">#228</a></li>\\n</ol>\\n<h2 id=\'header-v0.8.4\'>v0.8.4</h2><h3 id=\'header-Core\'>Core</h3><ol>\\n<li><code>Add</code> 新增评分组件<code>Rate</code> <a href=\\"https://github.com/ksc-fe/kpc/issues/218\\">#218</a></li>\\n<li><code>Add</code> <code>Form</code>支持<code>vertical</code>和<code>inline</code>布局方式 <a href=\\"https://github.com/ksc-fe/kpc/issues/219\\">#219</a></li>\\n<li><code>Add</code> <code>Select</code>支持<code>loading</code>状态 <a href=\\"https://github.com/ksc-fe/kpc/issues/220\\">#220</a></li>\\n<li><code>Add</code> <code>Datepicker</code>新增<code>getDateString</code>和<code>createDate</code>方法，用于日期字符串和日期对象之间进行转换</li>\\n<li><code>Fix</code> 修复<code>Icon</code>不能通过<code>style</code>属性定义图标颜色的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/217\\">#217</a></li>\\n<li><code>Fix</code> 修复<code>Slider</code>属性<code>max/min</code>取值为<code>undefined</code>时会报错的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/216\\">#216</a></li>\\n<li><code>Fix</code> 修复<code>Table</code>在边框模式下，吸顶的表头宽度会超出<code>2px</code>的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/222\\">#222</a></li>\\n<li><code>Fix</code> 修复<code>Dropdown</code>及该类型的组件，在菜单弹出后，点击另一个组件，上一个菜单不会自动隐藏的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/221\\">#221</a></li>\\n<li><code>Fix</code> 修复<code>Datepicker</code>被禁用的日期<code>hover</code>时依然有背景色的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/223\\">#223</a></li>\\n</ol>\\n<h2 id=\'header-v0.8.3\'>v0.8.3</h2><h3 id=\'header-Core\'>Core</h3><ol>\\n<li><code>Add</code> 新增布局组件<code>Layout</code> <a href=\\"https://github.com/ksc-fe/kpc/issues/210\\">#210</a></li>\\n<li><code>Fix</code> 修复<code>ScrollSelect</code>当虚拟元素个数<code>count</code>为偶数时，选中项不能居中的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/211\\">#211</a></li>\\n<li><code>Fix</code> 修复<code>Spinner</code>当输入值合法<code>value</code>不能立即变更，而必须失去焦点才能变更的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/213\\">#213</a></li>\\n</ol>\\n<h3 id=\'header-Vue\'>Vue</h3><ol>\\n<li><code>Fix</code> 修复<code>Tooltip</code>在<code>click</code>触发方式下，当触发元素为vue元素时，弹层会立即消失的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/209\\">#209</a></li>\\n<li><code>Fix</code> 修复<code>MenuItem</code>等支持<code>to</code>属性的组件，当<code>to</code>指向外部链接时不能正确跳转的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/212\\">#212</a> </li>\\n</ol>\\n<h2 id=\'header-v0.8.2\'>v0.8.2</h2><h4 id=\'header-Core\'>Core</h4><ol>\\n<li><code>Add</code> 内置主题<code>ksyun</code>支持再次继承，不会再因为重新定义了<code>$theme-dir</code>而导致部分样式丢失 <a href=\\"https://github.com/ksc-fe/kpc/issues/193\\">#193</a></li>\\n<li><code>Change</code> <code>Dialog</code>弹出位置优化，以前为垂直居中弹出，现在弹出位置向上偏移 <a href=\\"https://github.com/ksc-fe/kpc/issues/207\\">#207</a></li>\\n<li><code>Fix</code> 修复<code>Spinner</code>当父元素设置了<code>line-height</code>后，布局错位的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/206\\">#206</a></li>\\n<li><code>Fix</code> 修复<code>Table</code>当固定了列时，<code>loading</code>状态不能遮住固定列的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/208\\">#208</a></li>\\n</ol>\\n<h4 id=\'header-Vue\'>Vue</h4><ol>\\n<li><code>Add</code> <code>BreadcrumbItem</code> <code>MenuItem</code>等组件的<code>to</code>属性支持<code>vue-router</code>的<code>router-link</code>写法 <a href=\\"https://github.com/ksc-fe/kpc/issues/166\\">#166</a></li>\\n</ol>\\n<h4 id=\'header-React\'>React</h4><ol>\\n<li><code>Add</code> <code>BreadcrumbItem</code> <code>MenuItem</code>等组件的<code>to</code>属性支持<code>react-router</code>的<code>Link</code>写法 <a href=\\"https://github.com/ksc-fe/kpc/issues/166\\">#166</a></li>\\n</ol>\\n<h2 id=\'header-v0.8.1\'>v0.8.1</h2><h5 id=\'header-Core\'>Core</h5><ol>\\n<li><code>Add</code> <code>Spinner</code>支持<code>precision</code>属性，用于控制数值精度 <a href=\\"https://github.com/ksc-fe/kpc/issues/195\\">#195</a></li>\\n<li><code>Fix</code> 修复<code>Collapse</code>折叠一项，另一项会抖动的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/180\\">#180</a></li>\\n<li><code>Fix</code> 修复<code>Icon</code>在默认主题下<code>color</code>无效的问题</li>\\n<li><code>Fix</code> 修复<code>Slider</code>不能展示间隔点的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/189\\">#189</a></li>\\n<li><code>Fix</code> 修复<code>Timepicker</code>在时间面板展开的情况下，点击清空按钮报错的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/192\\">#192</a></li>\\n<li><code>Fix</code> 修复<code>Pagination</code>在默认主题下，无边框模式高亮按钮文字消失的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/199\\">#199</a></li>\\n<li><code>Fix</code> 修复<code>Select</code>在默认主题下，<code>size</code>属性无效的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/181\\">#181</a></li>\\n<li><code>Fix</code> 修复<code>Datepicker</code>时间范围选择，年份会出现负数的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/186\\">#186</a></li>\\n<li><code>Fix</code> 修复<code>Table</code>在默认主题下，排序按钮消失的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/191\\">#191</a></li>\\n<li><code>Fix</code> 修复<code>Table</code>在MacOS下，固定列不能展示阴影的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/201\\">#201</a></li>\\n<li><code>Fix</code> 修复<code>Drawer</code>关闭后，<code>document</code>上绑定的<code>click</code>事件没有被解绑，可能引起报错的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/203\\">#203</a></li>\\n<li><code>Fix</code> 修复<code>Dialog</code>渲染的同时进行展示，弹窗不能居中和进行动画的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/185\\">#185</a></li>\\n<li><code>Fix</code> 修复<code>Dialog</code>中展示<code>Spin</code>，由于<code>k-overlay</code>样式冲突，导致蒙层不能被删除的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/205\\">#205</a></li>\\n</ol>\\n<h5 id=\'header-Vue\'>Vue</h5><ol>\\n<li><code>Fix</code> 修复<code>Table</code>，当一个<code>TableColumn</code>存在<code>title</code>扩展点，另一个<code>TableColumn</code>固定列时，头部渲染丢失的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/202\\">#202</a></li>\\n<li><code>Doc</code> 补充<code>Vue CLI</code>创建的项目使用KPC组件库的文档</li>\\n</ol>\\n<h5 id=\'header-React\'>React</h5><ol>\\n<li><code>Fix</code> 修复<code>Table</code>使用自定义数据导出报错的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/190\\">#190</a></li>\\n<li><code>Fix</code> 修复<code>Grid</code>在响应式<code>gutter</code>属性下，渲染报错的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/196\\">#196</a></li>\\n<li><code>Fix</code> 修复<code>Tree</code> <code>rightclick:node</code>事件对应<code>React</code>下写法<code>onRightclick-node</code>不能被正确触发的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/194\\">#194</a></li>\\n<li><code>Fix</code> 修复<code>Switch</code> <code>on</code>属性被错误地当做事件处理的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/188\\">#188</a></li>\\n<li><code>Fix</code> 修复<code>Input</code>不能根据<code>append</code>扩展点传入的字符串节点进行判断，自动添加<code>padding</code>的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/187\\">#187</a></li>\\n<li><code>Fix</code> 修复<code>Dropdown</code>和<code>Tooltip</code>嵌套使用时，存在找不到定位元素的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/184\\">#184</a></li>\\n<li><code>Fix</code> 修复<code>Dropdown</code>自身嵌套使用渲染报错的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/183\\">#183</a></li>\\n<li><code>Fix</code> 修复通过<code>React.Fragment</code>传入文本节点无法渲染的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/182\\">#182</a></li>\\n<li><code>Doc</code> 完善React使用文档和单元测试</li>\\n</ol>\\n<h2 id=\'header-v0.8.0\'>v0.8.0</h2><h5 id=\'header-Core\'>Core</h5><ol>\\n<li><code>Add</code> <code>TableColumn</code>支持<code>className</code>属性，用于给当前列所有单元格添加<code>class</code>来控制列样式 <a href=\\"https://github.com/ksc-fe/kpc/issues/164\\">#164</a></li>\\n<li><code>Add</code> <code>Table</code>支持导出表格内容成<code>csv</code>格式并下载，而且支持自定义表格数据进行全量导出 <a href=\\"https://github.com/ksc-fe/kpc/issues/171\\">#171</a></li>\\n<li><code>Add</code> 新增<code>Icon</code>组件，统一字体图标使用方式 <a href=\\"https://github.com/ksc-fe/kpc/issues/169\\">#169</a></li>\\n<li><code>Add</code> <code>Upload</code>支持上传文件夹 <a href=\\"https://caniuse.com/#feat=input-file-directory\\">caniuse</a> <a href=\\"https://github.com/ksc-fe/kpc/issues/168\\">#168</a></li>\\n<li><code>Add</code> <code>Tree</code>支持选中节点功能，通过<code>selectedKeys</code>控制，默认选中会高亮 <a href=\\"https://github.com/ksc-fe/kpc/issues/167\\">#167</a></li>\\n<li><code>Add</code> <code>Pagination</code>支持简洁样式 <a href=\\"https://github.com/ksc-fe/kpc/issues/177\\">#177</a></li>\\n<li><code>Fix</code> 修复babel@7不支持commonjs和es6 module混用，导致组件库入口文件<code>index.js</code>调用全量安装方法报错的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/172\\">#172</a></li>\\n<li><code>Fix</code> 修复<code>Input</code>在自动宽度<code>autoWidth</code>情况下，去除<code>autoWidth</code>不能还原<code>Input</code>宽度的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/178\\">#178</a></li>\\n<li><code>Fix</code> 修复<code>Select</code>内联模式<code>inline</code>情况下，存在背景色的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/179\\">#179</a></li>\\n<li><code>Change</code> <code>Breadcrumb</code>废弃掉<code>separator</code>属性，改用<code>separator</code>扩展点代替，分隔符定制更灵活 <a href=\\"https://github.com/ksc-fe/kpc/issues/165\\">#165</a></li>\\n<li><code>Change</code> 将<code>peerDependencies</code>依赖改为直接依赖<code>dependencies</code>，方便版本更新管理 <a href=\\"https://github.com/ksc-fe/kpc/issues/174\\">#174</a></li>\\n</ol>\\n<h5 id=\'header-React\'>React</h5><ol>\\n<li><code>Fix</code> <code>Select</code>修复不能展示已选<code>Option</code>文案的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/170\\">#170</a></li>\\n</ol>\\n<h5 id=\'header-Vue\'>Vue</h5><ol>\\n<li><code>Fix</code> <code>FormItem</code>在某些情况下不能进行表单验证的问题</li>\\n</ol>\\n<h2 id=\'header-v0.7.9\'>v0.7.9</h2><ol>\\n<li><code>Refactor</code> 升级babel@7进行构建，自动引入实例方法polyfill，提高兼容性 <a href=\\"https://github.com/ksc-fe/kpc/issues/157\\">#157</a></li>\\n<li><code>Add</code> 新增React开始文档</li>\\n<li><code>Add</code> Tree在过滤时，默认展开匹配的节点 <a href=\\"https://github.com/ksc-fe/kpc/issues/156\\">#156</a></li>\\n<li><code>Fix</code> 修复Collapse默认主题下没有折叠展开动画的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/153\\">#153</a></li>\\n<li><code>Fix</code> 修复Collapse在没有内容导致高度为0时，动画不执行结束回调的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/150\\">#150</a> <a href=\\"https://github.com/ksc-fe/kpc/issues/162\\">#162</a></li>\\n<li><code>Fix</code> 修复IE下多处兼容性问题，目前支持IE10及以上 <a href=\\"https://github.com/ksc-fe/kpc/issues/155\\">#155</a></li>\\n</ol>\\n<h2 id=\'header-v0.7.6\'>v0.7.6</h2><ol>\\n<li><code>Add</code> <code>Collapse</code>使用<code>display: none</code>代替删除折叠起来的元素 <a href=\\"https://github.com/ksc-fe/kpc/issues/149\\">#149</a></li>\\n<li><code>Fix</code> <code>Datepicker</code> <code>disabledSeconds</code>无效的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/148\\">#148</a></li>\\n</ol>\\n<h2 id=\'header-v0.7.4\'>v0.7.4</h2><ol>\\n<li><code>Add</code> <code>FormItem</code>支持单独使用，不用一定要嵌入<code>Form</code>组件下，以便可以复用它的样式 <a href=\\"https://github.com/ksc-fe/kpc/issues/145\\">#145</a></li>\\n<li><code>Add</code> <code>Menu</code>渲染时自动展开已选择的菜单项 <a href=\\"https://github.com/ksc-fe/kpc/issues/144\\">#144</a></li>\\n<li><code>Add</code> <code>Select</code>支持无边框的内联样式 <a href=\\"https://github.com/ksc-fe/kpc/issues/146\\">#146</a></li>\\n<li><code>Add</code> <code>Tabs</code>标签页支持关闭功能</li>\\n<li><code>Add</code> <code>Tabs</code>当标签页过多时自动展示翻页按钮 <a href=\\"https://github.com/ksc-fe/kpc/issues/142\\">#142</a></li>\\n<li><code>Add</code> <code>Tree</code>支持节点过滤功能 <a href=\\"https://github.com/ksc-fe/kpc/issues/137\\">#137</a></li>\\n</ol>\\n<h2 id=\'header-v0.7.1\'>v0.7.1</h2><ol>\\n<li><code>Add</code> <code>Dropdown</code>及所有包含弹出菜单元素的组件支持<code>container</code>属性，以便自定义弹出菜单插入的位置 <a href=\\"https://github.com/ksc-fe/kpc/issues/138\\">#138</a></li>\\n<li><code>Add</code> <code>Dialog</code>和<code>Drawer</code>弹层中的<code>Dropdown</code>，默认append到<code>k-dialog</code>元素下 <a href=\\"https://github.com/ksc-fe/kpc/issues/138\\">#138</a><blockquote>\\n<p>vue需要升级<code>intact-vue</code>到<code>v0.4.0</code>才能完美支持该功能，否则会出现部分情况下依然append到<code>body</code>的情况</p>\\n</blockquote>\\n</li>\\n<li><code>Add</code> <code>Menu</code>支持<code>dot</code>属性，以便往菜单项前面添加圆点 <a href=\\"https://github.com/ksc-fe/kpc/issues/143\\">#143</a></li>\\n<li><code>Add</code> <code>Menu</code>支持<code>block</code>扩展点，以便自定义菜单头部 <a href=\\"https://github.com/ksc-fe/kpc/issues/143\\">#143</a></li>\\n<li><code>Change</code> <code>Menu</code>菜单样式调整 <a href=\\"https://github.com/ksc-fe/kpc/issues/135\\">#135</a></li>\\n<li><code>Fix</code> 修复<code>Dropdown</code>右键菜单模式在Vue下报错的问题，该bug不会影响功能 <a href=\\"https://github.com/ksc-fe/kpc/issues/141\\">#141</a></li>\\n<li><code>Fix</code> 修复将<code>Event</code>作为属性类型检测，但是在NodeJs下不存在该构造函数导致的报错问题</li>\\n</ol>\\n<h2 id=\'header-v0.7.0\'>v0.7.0</h2><blockquote>\\n<p><code>@since v0.7.0</code>版本需要<code><a href=\\"mailto:intact@2.4.1\\">intact@2.4.1</a></code><code><a href=\\"mailto:intact-vue@0.3.9\\">intact-vue@0.3.9</a></code>支持</p>\\n</blockquote>\\n<ol>\\n<li><code>Add</code> <code>Table</code>支持<code>loading</code>状态 <a href=\\"https://github.com/ksc-fe/kpc/issues/128\\">#128</a></li>\\n<li><code>Add</code> <code>Spin</code>支持遮罩层动画<code>overlay</code> <a href=\\"https://github.com/ksc-fe/kpc/issues/139\\">#139</a></li>\\n<li><code>Add</code> <code>Form</code>新增<code>labelWidth</code>属性，用于定义所有<code>FormItem</code>的<code>label</code>宽度 <a href=\\"https://github.com/ksc-fe/kpc/issues/127\\">#127</a></li>\\n<li><code>Fix</code> 修复<code>Tree</code> <code>class</code>和<code>style</code>属性丢失的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/136\\">#136</a> </li>\\n<li><code>Fix</code> 修复<code>Dropdown</code>的<code>of</code>属性在Vue下传入事件对象会报属性类型不匹配的问题</li>\\n<li><code>Fix</code> 修复<code>Timepicker</code>隐藏弹层会<code>focus</code>输入框导致页面滚动的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/126\\">#126</a></li>\\n<li><code>Fix</code> 修复<code>Drawer</code>在Vue下，点击触发按钮弹出弹层，弹层又会立即消失的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/140\\">#140</a></li>\\n<li><code>Fix</code> 修复<code>Drawer</code>默认主题动画不协调的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/134\\">#134</a></li>\\n</ol>\\n<h2 id=\'header-v0.6.1\'>v0.6.1</h2><ol>\\n<li><code>Fix</code> 修复<code>v0.6.0</code>引入的<code>@css</code>编译版字体文件丢失的问题</li>\\n<li><code>Fix</code> 修复当<code>Dialog</code>的<code>footer</code>只存在一个<code>Button</code>时，样式展示问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/132\\">#132</a></li>\\n<li><code>Fix</code> 修复<code>Tooltip</code>没有加载<code>Dropdown</code>样式的问题，这个问题当只使用<code>Tooltip</code>而不使用<code>Dropdown</code>组件时复现 <a href=\\"https://github.com/ksc-fe/kpc/issues/133\\">#133</a></li>\\n</ol>\\n<h2 id=\'header-v0.6.0\'>v0.6.0</h2><ol>\\n<li><code>Add</code> 新增<code>Drawer</code>抽屉组件 <a href=\\"https://github.com/ksc-fe/kpc/issues/112\\">#112</a></li>\\n<li><p><code>Change</code> 调整字体加载路径，兼容parcel <a href=\\"https://github.com/ksc-fe/kpc/issues/131\\">#131</a></p>\\n<p> webpack.config.js配置文件需要更改如下所示：</p>\\n<pre><code class=\\"hljs js\\"> {\\n     <span class=\\"hljs-symbol\\">test:</span> /\\\\.styl<span class=\\"hljs-variable\\">$/</span>,\\n     <span class=\\"hljs-symbol\\">loader:</span> <span class=\\"hljs-string\\">\'stylus-loader\'</span>, \\n     <span class=\\"hljs-symbol\\">options:</span> {\\n         <span class=\\"hljs-string\\">\'include css\'</span>: <span class=\\"hljs-keyword\\">true</span>,\\n         <span class=\\"hljs-string\\">\'resolve url\'</span>: <span class=\\"hljs-keyword\\">true</span>,\\n         <span class=\\"hljs-symbol\\">sourceMap:</span> <span class=\\"hljs-keyword\\">false</span>,\\n         <span class=\\"hljs-regexp\\">//</span> <span class=\\"hljs-string\\">\'import\'</span>: <span class=\\"hljs-string\\">\'~kpc/styles/themes/ksyun/index.styl\'</span>,\\n     }\\n }\\n</code></pre>\\n</li>\\n<li><code>Change</code> 调整package.json <code>module</code>字段指向 <a href=\\"https://github.com/ksc-fe/kpc/issues/130\\">#130</a></li>\\n<li><code>Fix</code> 修复<code>Datepicker</code>disableSeconds等参数禁用无效 <a href=\\"https://github.com/ksc-fe/kpc/issues/124\\">#124</a></li>\\n<li><code>Fix</code> 修复<code>App</code>loading动画没有在最上层的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/120\\">#120</a></li>\\n<li><code>Fix</code> convert Number to String to validate length <a href=\\"https://github.com/ksc-fe/kpc/issues/125\\">#125</a></li>\\n<li><code>Fix</code> 修复<code>Datepicker</code>can not set width with style <a href=\\"https://github.com/ksc-fe/kpc/issues/122\\">#122</a></li>\\n<li><code>Fix</code> 修复<code>Timepicker</code>step状态下class和style不能自定义 <a href=\\"https://github.com/ksc-fe/kpc/issues/121\\">#121</a></li>\\n</ol>\\n<h2 id=\'header-v0.5.15\'>v0.5.15</h2><ol>\\n<li><code>Fix</code> <code>Button</code>样式声明中<code>success</code>类型变量丢失的问题</li>\\n<li><code>Fix</code> <code>Transfer</code>当<code>data</code>数据变更时，不能更新全选状态的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/109\\">#109</a></li>\\n<li><code>Fix</code> <code>Cascader</code>当级联菜单碰撞反转，3级以下菜单存在错误的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/111\\">#111</a></li>\\n<li><code>Fix</code> <code>App</code>加载动画会被挡住的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/120\\">#120</a></li>\\n<li><code>Fix</code> <code>Timepicker</code>传入初始时间字符串会当做数组处理的问题</li>\\n<li><code>Add</code> <code>Tree</code>新增左击(<code>click:node</code>)和右击(<code>rightclick:node</code>)节点事件 <a href=\\"https://github.com/ksc-fe/kpc/issues/117\\">#117</a></li>\\n<li><code>Add</code> <code>Dropdown</code>支持右键菜单 <a href=\\"https://github.com/ksc-fe/kpc/issues/118\\">#118</a></li>\\n<li><code>Add</code> <code>Transfer</code>优化<code>shift</code>多选逻辑</li>\\n<li><code>Add</code> <code>package.json</code>中添加<code>sideEffects</code>字段，以便支持webpack <code>tree-shaking</code> </li>\\n</ol>\\n<h2 id=\'header-v0.5.14\'>v0.5.14</h2><ol>\\n<li><code>Fix</code> <code>Tree</code>删除节点没有更新选中状态 <a href=\\"https://github.com/ksc-fe/kpc/issues/102\\">#102</a></li>\\n<li><code>Fix</code> <code>Cascader</code>支持<code>data</code>属性一开始就传入<code>undefined</code>，以便数据完全动态加载 <a href=\\"https://github.com/ksc-fe/kpc/issues/103\\">#103</a></li>\\n<li><code>Fix</code> <code>Grid</code>响应式取值不能重置为<code>0</code> <a href=\\"https://github.com/ksc-fe/kpc/issues/104\\">#104</a></li>\\n<li><code>Fix</code> <code>Datepicker</code>范围选择成功后，再次取消已选值，重新选择会出现<code>null</code> <a href=\\"https://github.com/ksc-fe/kpc/issues/105\\">#105</a></li>\\n<li><code>Fix</code> <code>Editable</code>没有传入<code>value</code>，不能展示子元素的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/106\\">#106</a></li>\\n<li><code>Fix</code> <code>package.json</code> <code>browser</code>字段指向错误的问题</li>\\n</ol>\\n<h2 id=\'header-v0.5.13\'>v0.5.13</h2><ol>\\n<li><code>Fix</code> 修复<code>Steps</code>在宽度不够的情况下，索引不展示；以及在<code>vue</code>下<code>Step</code>宽度不等分的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/100\\">#100</a></li>\\n<li><code>Fix</code> 修复<code>Table</code>在Firefox下，<code>word-break: break-all</code>不支持的问题</li>\\n<li><code>Fix</code> 修复<code>Tooltip</code>在应该隐藏箭头的情况下，没有隐藏的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/101\\">#101</a></li>\\n</ol>\\n<h2 id=\'header-v0.5.12\'>v0.5.12</h2><ol>\\n<li><code>Add</code> 新增<code>Menu</code>菜单组件 <a href=\\"https://github.com/ksc-fe/kpc/issues/90\\">#90</a></li>\\n<li><code>Fix</code> 修复Fixfox下，<code>Spin</code>不能展示的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/97\\">#97</a></li>\\n<li><code>Fix</code> 修复Fixfox下，<code>Table</code>在固定右侧列并出现纵向滚动条的情况下，左侧单元格宽度不正确导致出现空白间隙的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/98\\">#98</a></li>\\n<li><code>Fix</code> 修复<code>Timeline</code>文字与图标没对齐的问题</li>\\n<li><code>Fix</code> 修复<code>Collapse</code>手风琴模式下，无法全部收起的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/99\\">#99</a></li>\\n</ol>\\n<h2 id=\'header-v0.5.11\'>v0.5.11</h2><blockquote>\\n<p>要使用<code>Table</code>新特性，需要更新<code>Intact</code>至<code>v2.3.5</code>及以上</p>\\n</blockquote>\\n<ol>\\n<li><code>Add</code> <code>Table</code>支持列固定 <a href=\\"https://github.com/ksc-fe/kpc/issues/86\\">#86</a></li>\\n<li><code>Add</code> <code>Table</code>支持横向滚动条吸底 <a href=\\"https://github.com/ksc-fe/kpc/issues/96\\">#96</a></li>\\n<li><code>Fix</code> 修复<code>Table</code>固定表头横向滚动的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/89\\">#89</a></li>\\n</ol>\\n<h2 id=\'header-v0.5.10\'>v0.5.10</h2><ol>\\n<li><code>Fix</code> 修复<code>Select</code>将<code>0</code>当做空值处理的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/94\\">#94</a></li>\\n<li><code>Fix</code> 修复<code>Transfer</code>不能取消全选的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/95\\">#95</a></li>\\n</ol>\\n<h2 id=\'header-v0.5.9\'>v0.5.9</h2><ol>\\n<li><code>Add</code> 新增<code>xxl</code>响应式宽度<code>≥1600px</code></li>\\n<li><code>Change</code> 改变全局字体行高<code>1.5</code></li>\\n<li><code>Fix</code> Firefox下<code>Datepicker</code>快速切换年月按钮错位的问题</li>\\n</ol>\\n<h2 id=\'header-v0.5.7\'>v0.5.7</h2><ol>\\n<li><code>Add</code> <code>Grid</code>改进，支持响应式，以及<code>pull</code> <code>push</code> <code>order</code>等属性 <a href=\\"https://github.com/ksc-fe/kpc/issues/87\\">#87</a></li>\\n<li><code>Add</code> 新增时间轴组件<code>Timeline</code> <a href=\\"https://github.com/ksc-fe/kpc/issues/77\\">#77</a></li>\\n<li><code>Add</code> <code>Message</code>在Vue全局安装的情况下，支持<code>this.$message.success()</code>的调用方式 <a href=\\"https://github.com/ksc-fe/kpc/issues/88\\">#88</a></li>\\n</ol>\\n<h2 id=\'header-v0.5.6\'>v0.5.6</h2><ol>\\n<li><code>Add</code> 新增时间选择组件<code>Timepicker</code></li>\\n<li><code>Add</code> 新增树形控件<code>Tree</code></li>\\n<li><code>Add</code> <code>Datepicker</code>支持只选择年/月 <a href=\\"https://github.com/ksc-fe/kpc/issues/84\\">#84</a></li>\\n<li><code>Add</code> <code>Datepicker</code>可选择范围，支持控制到秒的精度 <a href=\\"https://github.com/ksc-fe/kpc/issues/81\\">#81</a></li>\\n<li><code>Add</code> <code>Table</code>组件支持表头吸顶功能 <a href=\\"https://github.com/ksc-fe/kpc/issues/85\\">#85</a></li>\\n<li><code>Change</code> <code>Datepicker</code>交互变更，支持快速切换时间选择</li>\\n<li><code>Change</code> <code>Checkbox</code>将<code>click</code> <code>mouseenter</code> <code>mouseleave</code>事件绑定在最外层元素上，而不是<code>input</code>上</li>\\n<li><code>Fix</code> 修复<code>Cascader</code>无法获取完整取值的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/78\\">#78</a></li>\\n<li><code>Fix</code> 修复<code>Table</code> <code>expand</code>属性不兼容<a href=\\"mailto:intact-vue@v0.3\\">intact-vue@v0.3</a>的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/82\\">#82</a></li>\\n<li><code>Fix</code> 修复<code>Button</code> <code>showLoading</code>后<code>hideLoading</code>，在某些情况下子元素渲染出错的问题</li>\\n</ol>\\n<h2 id=\'header-v0.5.4\'>v0.5.4</h2><ol>\\n<li><code>Add</code> 新增<code>Spin</code>加载动画组件 <a href=\\"https://github.com/ksc-fe/kpc/issues/74\\">#74</a></li>\\n<li><code>Add</code> <code>Form</code>新增<code>getFirstInvalidFormItem</code>方法，用于获取第一个出错的<code>FormItem</code> <a href=\\"https://github.com/ksc-fe/kpc/issues/73\\">#73</a></li>\\n<li><code>Fix</code> <code>Datepicker</code>月份切换问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/62\\">#62</a></li>\\n<li><code>Fix</code> 修复<code>FormItem</code>错误信息某些情况下的样式问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/75\\">#75</a> </li>\\n<li><code>Refactor</code> 改变内置动画className命名，避免冲突 <a href=\\"https://github.com/ksc-fe/kpc/issues/76\\">#76</a></li>\\n</ol>\\n<h2 id=\'header-v0.5.3\'>v0.5.3</h2><ol>\\n<li><code>Add</code> <code>Tag</code>组件支持<code>size</code>属性 <a href=\\"https://github.com/ksc-fe/kpc/issues/68\\">#68</a></li>\\n<li><code>Add</code> 新增<code>Tip</code>组件，用于展示警告提示信息 <a href=\\"https://github.com/ksc-fe/kpc/issues/69\\">#69</a></li>\\n<li><code>Add</code> <code>Tabs</code>新增一种无边框的卡片样式，适用于具有背景的场景 <a href=\\"https://github.com/ksc-fe/kpc/issues/70\\">#70</a></li>\\n<li><code>Add</code> <code>Steps</code>新增一种简洁样式<code>simple</code> <a href=\\"https://github.com/ksc-fe/kpc/issues/71\\">#71</a></li>\\n<li><code>Add</code> <code>Steps</code>支持<code>clickable</code>属性，用于快速切换已完成的步骤 <a href=\\"https://github.com/ksc-fe/kpc/issues/72\\">#72</a></li>\\n<li><code>Change</code> 部分组件样式调整 <a href=\\"https://github.com/ksc-fe/kpc/issues/67\\">#67</a></li>\\n</ol>\\n<h2 id=\'header-v0.5.0\'>v0.5.0</h2><p><code>0.5.0</code>版本需要<code><a href=\\"mailto:vdt@1.3.0\\">vdt@1.3.0</a></code><code><a href=\\"mailto:intact@2.3.0\\">intact@2.3.0</a></code><code><a href=\\"mailto:intact-vue@0.3.0\\">intact-vue@0.3.0</a></code>支持</p>\\n<ol>\\n<li><code>Add</code> 支持组件属性类型检查</li>\\n<li><code>Add</code> 支持带参数的<code>block</code></li>\\n<li><code>Add</code> 支持通过<code>v-model</code>绑定任意属性值</li>\\n<li><code>Add</code> 支持同一事件绑定多次回调函数</li>\\n<li><code>Refactor</code> <code>App</code>组件重构，减少依赖 <a href=\\"https://github.com/ksc-fe/kpc/issues/65\\">#65</a></li>\\n<li><code>Fix</code> 在<code>Vue</code>下<code>Vue.use(Kpc)</code>全量使用的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/63\\">#63</a> <a href=\\"https://github.com/ksc-fe/kpc/issues/64\\">#64</a></li>\\n</ol>\\n<h2 id=\'header-v0.4.0\'>v0.4.0</h2><ol>\\n<li><code>Add</code> 新增级联选择组件<code>Cascader</code></li>\\n<li><code>Add</code> 新增标签组件<code>Tag</code></li>\\n<li><code>Add</code> 新增徽标组件<code>Badge</code></li>\\n<li><code>Add</code> 新增折叠面板组件<code>Collapse</code></li>\\n<li><code>Add</code> <code>Pagination</code>支持无边框样式，<a href=\\"https://github.com/ksc-fe/kpc/issues/33\\">#33</a></li>\\n<li><code>Add</code> 嵌套<code>Dropdown</code>支持子菜单相对父菜单定位</li>\\n<li><code>Change</code> 更新ksyun主题<code>Message</code>样式</li>\\n<li><code>Change</code> 优化<code>Dropdown</code>键盘操作</li>\\n<li><code>Change</code> 更新ksyun主题<code>Progress</code>样式</li>\\n<li><code>Fix</code> 修复<code>Datepicker</code>在点击年份等区域导致input失焦，然后<code>FormItem</code>立即验证的问题，<a href=\\"https://github.com/ksc-fe/kpc/issues/46\\">#46</a></li>\\n<li><code>Fix</code> 修复<code>Tooltip</code> <code>hover</code>触发方式下，有时不能消失的问题，<a href=\\"https://github.com/ksc-fe/kpc/issues/52\\">#52</a></li>\\n<li><code>Fix</code> 修复<code>Pagination</code>当传入的<code>limit</code>不是可选项时，页码错误的问题， <a href=\\"https://github.com/ksc-fe/kpc/issues/48\\">#48</a></li>\\n<li><code>Fix</code> 修复<code>Select</code>键盘选中某项然后搜索导致该项不存在，此时按回车会报错的问题，<a href=\\"https://github.com/ksc-fe/kpc/issues/50\\">#50</a></li>\\n</ol>\\n<h2 id=\'header-v0.3.12\'>v0.3.12</h2><ol>\\n<li><code>Add</code> <code>TableColumn</code>支持<code>title</code>扩展点，<a href=\\"https://github.com/ksc-fe/kpc/issues/19\\">#19</a></li>\\n<li><code>Add</code> <code>Transfer</code>支持全选和清空操作，<a href=\\"https://github.com/ksc-fe/kpc/issues/18\\">#18</a></li>\\n<li><code>Fix</code> 修复<code>Editable</code>在invalid的状态下，父组件更新也会触发<code>$changed:value</code>事件的问题，<a href=\\"https://github.com/ksc-fe/kpc/issues/51\\">#51</a></li>\\n<li><code>Fix</code> 修复<code>FormItem</code>在<code>model</code>不存在时，依然会验证导致报错的问题，<a href=\\"https://github.com/ksc-fe/kpc/issues/47\\">#47</a></li>\\n<li><code>Fix</code> 修复<code>value</code>不存在options中时的问题，<a href=\\"https://github.com/ksc-fe/kpc/issues/41\\">#41</a> <a href=\\"https://github.com/ksc-fe/kpc/issues/40\\">#40</a></li>\\n<li><code>Fix</code> <code>FormItem</code>延迟100ms去验证，来规避某些弹出型组件在失焦瞬间，可能闪现<code>required</code>错误信息的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/4\\">#4</a></li>\\n<li><code>Fix</code> 修复<code>Dropdown</code>在vue下，子元素事件丢失的问题</li>\\n<li><code>Fix</code> 修复<code>Tooltip</code>箭头位置问题，<a href=\\"https://github.com/ksc-fe/kpc/issues/17\\">#17</a></li>\\n</ol>\\n<h2 id=\'header-v0.2.0\'>v0.2.0</h2><ol>\\n<li><code>Add</code> 表单元素(<code>Select</code> <code>Datepicker</code>等)支持键盘操作 <a href=\\"https://github.com/ksc-fe/kpc/issues/7\\">#7</a></li>\\n<li><code>Add</code> <code>FormItem</code>支持强制验证 <a href=\\"https://github.com/ksc-fe/kpc/issues/6\\">#6</a></li>\\n<li><code>Add</code> <code>Select</code>支持输入不存在的条目，此时它将作为最终值 <a href=\\"https://github.com/ksc-fe/kpc/issues/5\\">#5</a></li>\\n<li><code>Fix</code> 修复<code>Table</code>在MacOS下<code>Checkbox</code>选不中的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/8\\">#8</a></li>\\n<li><code>Fix</code> 修复<code>Slider</code>中的<code>Input</code>不能输入中间过程值的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/9\\">#9</a></li>\\n<li><code>Fix</code> 修复<code>Form</code>表单验证<code>Select</code>选择时，闪现<code>required</code>错误信息的问题 <a href=\\"https://github.com/ksc-fe/kpc/issues/4\\">#4</a></li>\\n</ol>\\n<h2 id=\'header-v0.1.0\'>v0.1.0</h2><ol>\\n<li><code>Add</code> Datepicker支持日期范围选择, <a href=\\"https://github.com/ksc-fe/kpc/issues/1\\">#1</a></li>\\n<li><code>Add</code> Datepicker选择日期和时间时，支持多选</li>\\n<li><code>Add</code> 弹出菜单支持边界碰撞反转弹出弹出方向，<a href=\\"https://github.com/ksc-fe/kpc/issues/2\\">#2</a></li>\\n<li><code>Fix</code> Vue中Tab不能切换的问题，<a href=\\"https://github.com/ksc-fe/kpc/issues/3\\">#3</a></li>\\n<li><code>Fix</code> Slider在设置了步长后，拖动会闪动的问题</li>\\n</ol>\\n","index":337}')},"./site/dist/docs/design/8point sync recursive demos.*(index|demo).js$":function(s,e){function n(s){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,s.exports=n,n.id="./site/dist/docs/design/8point sync recursive demos.*(index|demo).js$"},"./site/dist/docs/design/8point/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/design/8point/index.json")),p=a(n("./site/dist/design.json")),i=n("./site/dist/docs/design/8point sync recursive demos.*(index|demo).js$"),r=i.keys(),h=[],m=0;m<r.length;m++){var j=r[m];/demo.js$/.test(j)&&m++,h.push(i(j))}var u=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:h})},e}(l.default);e.default=u,(0,o.default)(u,"sidebar",p.default),(0,o.default)(u,"data",d.default)},"./site/dist/docs/design/8point/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"8-Point Grid System","order":0.1,"sidebar":"design","disabled":true},"catalogs":[],"contents":"<h2 id=\'header-8%E5%83%8F%E7%B4%A0%E8%A7%84%E5%88%99\'>8像素规则</h2><p>建立一个以8pt为单位的网格系统，利用8的倍数来规定页面中元素(按钮、输入框、图片等)的尺寸及各自间距的大小。即任何需要自定义的长、宽，marging和padding都应该是8的倍数。</p>\\n<p><img src=\\"/imgs/design/8xiangsu01.png\\" alt=\\"设计原则\\"></p>\\n<p>目前主流的屏幕尺寸大部分都是8的整数倍数。即使某些屏幕边长像素不是8的倍数，在设计中仍然可以尽量做到自定义元素的长、宽、marging，以及padding都是8的倍数来维持设计的一致性。</p>\\n","index":60}')},"./site/dist/docs/design/button sync recursive demos.*(index|demo).js$":function(s,e){function n(s){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,s.exports=n,n.id="./site/dist/docs/design/button sync recursive demos.*(index|demo).js$"},"./site/dist/docs/design/button/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/design/button/index.json")),p=a(n("./site/dist/design.json")),i=n("./site/dist/docs/design/button sync recursive demos.*(index|demo).js$"),r=i.keys(),h=[],m=0;m<r.length;m++){var j=r[m];/demo.js$/.test(j)&&m++,h.push(i(j))}var u=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:h})},e}(l.default);e.default=u,(0,o.default)(u,"sidebar",p.default),(0,o.default)(u,"data",d.default)},"./site/dist/docs/design/button/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"按钮","order":0,"category":"组件","sidebar":"design","disabled":true},"catalogs":[],"contents":"<h2 id=\'header-%E5%BA%94%E7%94%A8%E8%A7%84%E5%88%99\'>应用规则</h2><p><strong>实体按钮</strong></p>\\n<p>点击按钮后，触发的业务逻辑出现在当前页面时，使用实体按钮。</p>\\n<p><img src=\\"/imgs/design/shitianniu.png\\" alt=\\"shitianniu\\"></p>\\n<p><strong>文字按钮</strong></p>\\n<p>点击按钮后，触发的业务逻辑需要跳转到其他页面时，使用文字按钮。</p>\\n<p><img src=\\"/imgs/design/wenzianniu.png\\" alt=\\"wenzianniu\\"></p>\\n<p><strong>文字链接</strong></p>\\n<p>仅表达路径跳转时，使用文字连接。通常使用在文本中。鼠标hover文字链接时显示下划线。</p>\\n<p><img src=\\"/imgs/design/wenzilianjie.png\\" alt=\\"wenzilianjie\\"></p>\\n<p><strong>幽灵按钮</strong></p>\\n<p>仅有描边的实体按钮，通常应用在有填充的背景上</p>\\n<p><img src=\\"/imgs/design/youlinganniu.png\\" alt=\\"youlinganniu\\"></p>\\n<h2 id=\'header-%E6%8C%89%E9%92%AE%E7%8A%B6%E6%80%81\'>按钮状态</h2><p><img src=\\"/imgs/design/anniuzhuangtai.png\\" alt=\\"anniuzhuangtai\\"></p>\\n<h2 id=\'header-%E6%8C%89%E9%92%AE%E7%B1%BB%E5%9E%8B\'>按钮类型</h2><p>主按钮、次按钮</p>\\n<p>主按钮在同一区域只可以应用一次</p>\\n<h2 id=\'header-%E6%8C%89%E9%92%AE%E7%94%9F%E6%88%90%E5%99%A8\'>按钮生成器</h2><p>在确定按钮交互状态样式时，仅需确定长长状态下按钮颜色，即可通过工具自动生成按钮全部状态样式，设计者和前端编码无需记住每个状态的具体样式。</p>\\n<p><img src=\\"/imgs/design/anniushengchengqi.png\\" alt=\\"anniushengchengqi\\"></p>\\n","index":12}')},"./site/dist/docs/design/color sync recursive demos.*(index|demo).js$":function(s,e,n){var a={"./demos/demo0/index.js":"./site/dist/docs/design/color/demos/demo0/index.js"};function t(s){var e=c(s);return n(e)}function c(s){if(!n.o(a,s)){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}return a[s]}t.keys=function(){return Object.keys(a)},t.resolve=c,s.exports=t,t.id="./site/dist/docs/design/color sync recursive demos.*(index|demo).js$"},"./site/dist/docs/design/color/demos/demo0/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.example=e.default=void 0;var t=a(n("./site/src/components/palette/index.js")).default;e.default=t;e.example=!0},"./site/dist/docs/design/color/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/design/color/index.json")),p=a(n("./site/dist/design.json")),i=n("./site/dist/docs/design/color sync recursive demos.*(index|demo).js$"),r=i.keys(),h=[],m=0;m<r.length;m++){var j=r[m];/demo.js$/.test(j)&&m++,h.push(i(j))}var u=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:h})},e}(l.default);e.default=u,(0,o.default)(u,"sidebar",p.default),(0,o.default)(u,"data",d.default)},"./site/dist/docs/design/color/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"颜色","order":1,"sidebar":"design"},"catalogs":[],"contents":"<p>颜色作为一种感知性的设计语言，在表达设计目标时起到强化作用。因此在定义一系列色值的同时，更重要的是对他们在实际页面和情景中的使用方法进行标准化定义。通过颜色可实现如下功能：</p>\\n<p><strong>体现内容类型与层级关系</strong></p>\\n<p>标题、正文、帮助内容</p>\\n<p><strong>强化行动召唤</strong></p>\\n<p>主按钮、次按钮、链接</p>\\n<p><strong>引起关注</strong></p>\\n<p>红色的错误提示，绿色的成功提示，橙色的警告提示。</p>\\n<p><strong>区隔内容</strong></p>\\n<p>背景色，前景色</p>\\n<h2 id=\'header-%E5%93%81%E7%89%8C%E8%89%B2\'>品牌色</h2><p>品牌色贯穿整体设计的主要颜色风格。品牌色主要体现在关键行动点及操作状态、重要信息高亮等场景。</p>\\n\x3c!-- example --\x3e<p><img src=\\"/imgs/design/pinpaise.jpg\\" alt=\\"品牌色\\"></p>\\n<p><strong>主色：</strong></p>\\n<p>主色为产品中应用最频繁，且能代表品牌基调的颜色。</p>\\n<p>在确定主色的同时选择主色的深色和浅色变体用于创造界面元素的对比。如，按钮、模块标题、交互状态等。</p>\\n<p><strong>辅助色：</strong></p>\\n<p>用于强调界面中的特殊元素。辅助色应慎重使用，仅作为强调和突出。</p>\\n<p>辅助色也可以选择深色和浅色变体用于界面元素对比。如滑块与滑动条、按钮交互状态等。</p>\\n<p><strong>文本和图标色：</strong></p>\\n<p>当文本与图标应用于主色和辅助色之上时，应使文本和图标颜色明显区别于颜色背景，保证内容清晰可辨。</p>\\n","index":109}')},"./site/dist/docs/design/dialog sync recursive demos.*(index|demo).js$":function(s,e){function n(s){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,s.exports=n,n.id="./site/dist/docs/design/dialog sync recursive demos.*(index|demo).js$"},"./site/dist/docs/design/dialog/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/design/dialog/index.json")),p=a(n("./site/dist/design.json")),i=n("./site/dist/docs/design/dialog sync recursive demos.*(index|demo).js$"),r=i.keys(),h=[],m=0;m<r.length;m++){var j=r[m];/demo.js$/.test(j)&&m++,h.push(i(j))}var u=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:h})},e}(l.default);e.default=u,(0,o.default)(u,"sidebar",p.default),(0,o.default)(u,"data",d.default)},"./site/dist/docs/design/dialog/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"对话框","order":2,"category":"组件","sidebar":"design","disabled":true},"catalogs":[],"contents":"<h3 id=\'header-%E6%97%A0%E6%A0%87%E9%A2%98%E5%AF%B9%E8%AF%9D%E6%A1%86\'>无标题对话框</h3><p>适用于操作确认场景，且当前页面只存在一个对话框时使用。</p>\\n<p><img src=\\"/imgs/design/wubiaotiduihuakuang.png\\" alt=\\"wubiaotiduihuakuang\\"></p>\\n<h3 id=\'header-%E5%B8%A6%E6%A0%87%E9%A2%98%E5%AF%B9%E8%AF%9D%E6%A1%86\'>带标题对话框</h3><p>当同一页面中存在多个对话框时使用，标题可以提示用户当前操作所属，另通过详细说明，指明操作相关事项。</p>\\n<p><img src=\\"/imgs/design/biaotiduihuakuang.png\\" alt=\\"biaotiduihuakuang\\"></p>\\n<h3 id=\'header-%E5%A4%8D%E6%9D%82%E6%93%8D%E4%BD%9C%E5%AF%B9%E8%AF%9D%E6%A1%86\'>复杂操作对话框</h3><p>对话框内包含表单内容时使用。提交表单时提交按钮需显示loading状态，并禁用提交按钮，确保无法反复提交。待提交成功后隐藏对话框。</p>\\n<p><img src=\\"/imgs/design/fuzaduihuakuang.png\\" alt=\\"fuzaduihuakuang\\"></p>\\n<h3 id=\'header-%E9%95%BF%E5%86%85%E5%AE%B9%E5%AF%B9%E8%AF%9D%E6%A1%86\'>长内容对话框</h3><p>当弹窗内容超过500px时，使用长内容弹窗。长内容弹窗由浏览器右侧弹出，靠浏览器右侧显示，高度为窗口高度。</p>\\n<p><img src=\\"/imgs/design/changduihuakuang.png\\" alt=\\"changduihuakuang\\"></p>\\n","index":152}')},"./site/dist/docs/design/font sync recursive demos.*(index|demo).js$":function(s,e){function n(s){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,s.exports=n,n.id="./site/dist/docs/design/font sync recursive demos.*(index|demo).js$"},"./site/dist/docs/design/font/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/design/font/index.json")),p=a(n("./site/dist/design.json")),i=n("./site/dist/docs/design/font sync recursive demos.*(index|demo).js$"),r=i.keys(),h=[],m=0;m<r.length;m++){var j=r[m];/demo.js$/.test(j)&&m++,h.push(i(j))}var u=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:h})},e}(l.default);e.default=u,(0,o.default)(u,"sidebar",p.default),(0,o.default)(u,"data",d.default)},"./site/dist/docs/design/font/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"字体","order":2,"sidebar":"design","disabled":true},"catalogs":[],"contents":"<h2 id=\'header-%E5%AD%97%E4%BD%93%E5%AE%B6%E6%97%8F\'>字体家族</h2><p>优先使用系统默认的界面字体，同时提供了一套利于屏显的备用字体库，来维护在不同平台以及浏览器的显示下字体始终保持良好的易读性和可读性。</p>\\n<p><code>font-family :PingFangSC,helvetica neue,hiragino sans gb,arial,microsoft yahei ui,microsoft yahei,simsun,&quot;sans-serif&quot;</code></p>\\n<h2 id=\'header-%E5%AD%97%E4%BD%93%E5%A4%A7%E5%B0%8F\'>字体大小</h2><p>字体大依据具体应用场景制定相关标准，并通过透明度定义字体显示显著程度。</p>\\n<p><img src=\\"/imgs/design/zitidaxiao.png\\" alt=\\"zitidaxiao\\"></p>\\n<h2 id=\'header-%E5%AD%97%E4%BD%93%E8%A1%8C%E9%AB%98\'>字体行高</h2><p>在确定字体行高时我们使用黄金比例来计算字体行高。即行高为字体的1.618倍。并对计算结果取整，</p>\\n<p>计算公式为：</p>\\n<p><strong>字体行高=Int(字体大小*1.618)</strong></p>\\n<blockquote>\\n<p>如：字体大小我14px时，字体行高为：Int（14*0.618+14）=22px</p>\\n</blockquote>\\n<p><img src=\\"/imgs/design/zitihanggao.png\\" alt=\\"zitihanggao\\"></p>\\n<h2 id=\'header-%E5%AF%B9%E6%AF%94%E5%BA%A6\'>对比度</h2><p>在确定字体颜色时，字体颜色与背景色的对比度应符合WCAG相关规则，以为视觉障碍人士保障足够的视觉对比度。</p>\\n<blockquote>\\n<p>WCAG 1.4.3</p>\\n<p>对比度（最小）: 文本的视觉呈现以及文本图像至少要有4.5:1的对比度，以下部分除外：（AA级）</p>\\n<p>大文本: 大号文本(18px左右大号加粗字体)以及大文本图像至少有3:1的对比度;</p>\\n<p>对比度检测工具：<a href=\\"\\">https://contrast-ratio.com/</a></p>\\n</blockquote>\\n","index":150}')},"./site/dist/docs/design/format sync recursive demos.*(index|demo).js$":function(s,e){function n(s){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,s.exports=n,n.id="./site/dist/docs/design/format sync recursive demos.*(index|demo).js$"},"./site/dist/docs/design/format/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/design/format/index.json")),p=a(n("./site/dist/design.json")),i=n("./site/dist/docs/design/format sync recursive demos.*(index|demo).js$"),r=i.keys(),h=[],m=0;m<r.length;m++){var j=r[m];/demo.js$/.test(j)&&m++,h.push(i(j))}var u=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:h})},e}(l.default);e.default=u,(0,o.default)(u,"sidebar",p.default),(0,o.default)(u,"data",d.default)},"./site/dist/docs/design/format/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"格式","order":3,"sidebar":"design","disabled":true},"catalogs":[],"contents":"<h2 id=\'header-%E8%B4%B9%E7%94%A8%E9%87%91%E9%A2%9D\'>费用金额</h2><p>金额费用一律精确到小数点后2位。</p>\\n<p>书写费用金额时如果使用货币符号（¥），就不在金额后面写“元” 。</p>\\n<p>如果需要在金额后面写元，就不能使用货币符号（¥），同时，数字与“元”字间加半角空格。</p>\\n<h2 id=\'header-%E6%97%A5%E6%9C%9F\'>日期</h2><p>日期书写格式为：年-月-日。其中日期数字使用阿拉伯数字。</p>\\n<p>完整格式：2018年5月29日，带单位，完整格式通常使用在段落文本中。</p>\\n<p>缩写：2018-05-29，缩写日期时如年、月不足2位，则用0补位，以保证对齐时格式统一。缩写格式不带单位，年、月、日用斜杠隔开。</p>\\n<p>日期范围：2018-05-01 ~ 2018-05-30。表示日期范围时，日期中间用“~”隔开，同时“~”两侧加空格。</p>\\n<h2 id=\'header-%E6%97%B6%E9%97%B4\'>时间</h2><p>时间使用24小时制。其中时间数字使用阿拉伯数字。</p>\\n<p>完整格式：15点30分0秒。完整格式通常使用在段落文本中。</p>\\n<p>缩写：15:30:00。缩写格式，单位不足2位时用0补位，保证对齐时格式统一。</p>\\n<p>时间范围：15:30:00 ~ 18:05:00。表示时间范围时，时间点中间用“~”隔开，同时“~”两侧加空格。</p>\\n<p>带日期的时间：2018-05-01 15:30:00。日期与时间中间用空格隔开。</p>\\n","index":185}')},"./site/dist/docs/design/gutter sync recursive demos.*(index|demo).js$":function(s,e){function n(s){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,s.exports=n,n.id="./site/dist/docs/design/gutter sync recursive demos.*(index|demo).js$"},"./site/dist/docs/design/gutter/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/design/gutter/index.json")),p=a(n("./site/dist/design.json")),i=n("./site/dist/docs/design/gutter sync recursive demos.*(index|demo).js$"),r=i.keys(),h=[],m=0;m<r.length;m++){var j=r[m];/demo.js$/.test(j)&&m++,h.push(i(j))}var u=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:h})},e}(l.default);e.default=u,(0,o.default)(u,"sidebar",p.default),(0,o.default)(u,"data",d.default)},"./site/dist/docs/design/gutter/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"间距","order":2,"sidebar":"design","disabled":true},"catalogs":[],"contents":"<p>依据格式塔原理所述：“单个视觉元素之间无限接近，视觉上会形成一个较大的整体。距离近的单个视觉元素会溶为一个整体”。通过控制元素间距离表达元素间的关联度，关联度高即距相对距离更近，反之则较远。</p>\\n<h2 id=\'header-%E9%81%B5%E5%BE%AA8%E5%83%8F%E7%B4%A0%E8%A7%84%E5%88%99\'>遵循8像素规则</h2><p>以8px作为基础间距，再根据内容关系紧密程度，以8px的倍数定义内容间距。</p>\\n<p>常用间距为8px、16px、24px、32px四种。</p>\\n<h2 id=\'header-%E7%BA%B5%E5%90%91%E9%97%B4%E8%B7%9D\'>纵向间距</h2><p><img src=\\"/imgs/design/zongxiangjianju.png\\" alt=\\"设计原则\\"></p>\\n<h2 id=\'header-%E6%A8%AA%E5%90%91%E9%97%B4%E8%B7%9D\'>横向间距</h2><p>横向信息也应使用不同间距表达相关度</p>\\n<p><img src=\\"/imgs/design/hengxiangjianju.png\\" alt=\\"设计原则\\"></p>\\n","index":145}')},"./site/dist/docs/design/hierarchy sync recursive demos.*(index|demo).js$":function(s,e){function n(s){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,s.exports=n,n.id="./site/dist/docs/design/hierarchy sync recursive demos.*(index|demo).js$"},"./site/dist/docs/design/hierarchy/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/design/hierarchy/index.json")),p=a(n("./site/dist/design.json")),i=n("./site/dist/docs/design/hierarchy sync recursive demos.*(index|demo).js$"),r=i.keys(),h=[],m=0;m<r.length;m++){var j=r[m];/demo.js$/.test(j)&&m++,h.push(i(j))}var u=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:h})},e}(l.default);e.default=u,(0,o.default)(u,"sidebar",p.default),(0,o.default)(u,"data",d.default)},"./site/dist/docs/design/hierarchy/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"层级关系","order":4,"sidebar":"design","disabled":true},"catalogs":[],"contents":"<h2 id=\'header-%E5%B1%82%E7%BA%A7%E9%98%B4%E5%BD%B1\'>层级阴影</h2><p>当内容需要突出显示时，可以使用层级阴影，帮助用户提高对相关内容的注意力。</p>\\n<p><img src=\\"/imgs/design/cengji01.png\\" alt=\\"cengji01\\"></p>\\n<p>阴影层级还可以表达页面关系，帮助用户理解页面间的逻辑结构。</p>\\n<p><img src=\\"/imgs/design/cengji02.png\\" alt=\\"cengji02\\"></p>\\n","index":237}')},"./site/dist/docs/design/language sync recursive demos.*(index|demo).js$":function(s,e){function n(s){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,s.exports=n,n.id="./site/dist/docs/design/language sync recursive demos.*(index|demo).js$"},"./site/dist/docs/design/language/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/design/language/index.json")),p=a(n("./site/dist/design.json")),i=n("./site/dist/docs/design/language sync recursive demos.*(index|demo).js$"),r=i.keys(),h=[],m=0;m<r.length;m++){var j=r[m];/demo.js$/.test(j)&&m++,h.push(i(j))}var u=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:h})},e}(l.default);e.default=u,(0,o.default)(u,"sidebar",p.default),(0,o.default)(u,"data",d.default)},"./site/dist/docs/design/language/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"设计语言","order":0,"sidebar":"design"},"catalogs":[],"contents":"<h2 id=\'header-%E9%80%9A%E7%94%A8%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80King%20Design\'>通用设计语言King Design</h2><p>语言是合作的基础。在团队中工作，没有共同的语言，一群人不能共同有效地合作。同理，因为每个人都会有不同的心智模式去达成各自的目的，如果没有共同的设计语言，对界面元素的共同理解，那么我们很难通过协作输出协调一致并具备高可用性的产品。</p>\\n<p>拥有通用语言意味着我们有相同的方法来命名界面元素和定义设计模式，或者在设计文件和前端框架中使用相同的名称。通用设计语言让团队成员达成了相互理解，基于共同的理解，参与产品创建的每个人都知道这个元素是什么: 它的名称和目的, 为什么这样设计, 以及如何及何时使用它。</p>\\n<p>当设计语言是通用知识时，它就成为一个强大的设计和协作工具，产品创建过程中便可停止专注于界面样式本身，而更多地关注用户。</p>\\n<h2 id=\'header-King%20Design%E7%9A%84%E4%BB%B7%E5%80%BC\'>King Design的价值</h2><p>① 节省设计和构建模块的时间；</p>\\n<p>② 网站变更时节省时间，复用的模式更新时将在任何使用的地方自动更新，重复工作浪费的时间越少，就有更多时间做有价值的事；</p>\\n<p>③ 更快的发布产品，现成的模式库缩短了新功能设计研发上线时间；</p>\\n<p>④ 品牌统一性、视觉一致性、提升团队协作效率，不用每次重新创造。</p>\\n<h2 id=\'header-%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99\'>设计原则</h2><p>设计由设计者的选择而决定，设计原则为设计者提供了选择依据，从众多存在矛盾或价值冲突的设计决策中找到平衡。</p>\\n<blockquote>\\n<p>引用自 LIGHTNING DESIGN SYSTEM</p>\\n<p><img src=\\"/imgs/design/shejiyuanze.png\\" alt=\\"设计原则\\"></p>\\n<p>原则顺序必须按照给定的顺序执行。也就是说，美不可以建立在明晰和效率之上，效率也不可以妥协于一致性之下，明晰永远都是第一优先级。在制定任何设计决策时都应按照设计原则，考虑优先级。</p>\\n<p>消除歧义，让用户能够更加自信的使用</p>\\n<p><strong>明晰 CLARITY</strong></p>\\n<p>简化工作流程，帮助用户更好、更智能、更快的完成工作</p>\\n<p><strong>效率 EFFICIENCY</strong></p>\\n<p>相同的问题使用相同的方案，增强产品的直观与熟悉程度</p>\\n<p><strong>一致 CONSISTENCY</strong></p>\\n<p>通过贴心且优雅的设计工艺，表达对用户付出时间与关注的尊重</p>\\n</blockquote>\\n","index":5}')},"./site/dist/docs/design/navigator sync recursive demos.*(index|demo).js$":function(s,e){function n(s){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,s.exports=n,n.id="./site/dist/docs/design/navigator sync recursive demos.*(index|demo).js$"},"./site/dist/docs/design/navigator/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/design/navigator/index.json")),p=a(n("./site/dist/design.json")),i=n("./site/dist/docs/design/navigator sync recursive demos.*(index|demo).js$"),r=i.keys(),h=[],m=0;m<r.length;m++){var j=r[m];/demo.js$/.test(j)&&m++,h.push(i(j))}var u=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:h})},e}(l.default);e.default=u,(0,o.default)(u,"sidebar",p.default),(0,o.default)(u,"data",d.default)},"./site/dist/docs/design/navigator/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"导航","order":2,"category":"组件","sidebar":"design","disabled":true},"catalogs":[],"contents":"<h2 id=\'header-%E9%9D%A2%E5%8C%85%E5%B1%91%E5%AF%BC%E8%88%AA\'>面包屑导航</h2><p>标识当前页面层级位置。面包屑导航层级结构必须与网站页面层级结构一致，每一个层级都可以进行跳转操作，并有相关页面。控制台面包屑导航最多4级。</p>\\n<p><img src=\\"/imgs/design/mianbaoxie.png\\" alt=\\"mianbaoxie\\"></p>\\n<p><strong>并不是任何产品和任何页面都需要使用面包屑导航：</strong></p>\\n<p>什么时候用：网站结构是严格的线性结构或者是预先分好组（类）的层级结构。比如官网结构就是层级结构，包含了按类别分好组的大量产品页面。</p>\\n<p>什么时候别用：网站结构是单层或者不是分好组（类）的层级结构。</p>\\n<h2 id=\'header-%E9%A1%B5%E7%AD%BE\'>页签</h2><h4 id=\'header-%E6%A0%87%E7%AD%BE%E9%A1%B5\'>标签页</h4><p>用于页面中整页信息的分类。标签页做多3级，更多层级建议使用更多操作</p>\\n<p><img src=\\"/imgs/design/biaoqianye.png\\" alt=\\"biaoqianye\\"></p>\\n<h4 id=\'header-%E9%80%89%E9%A1%B9%E5%8D%A1\'>选项卡</h4><p>用于局部模块的分类</p>\\n<p><img src=\\"/imgs/design/xuanxiangka.png\\" alt=\\"xuanxiangka\\"></p>\\n<h4 id=\'header-%E5%AF%BC%E8%88%AA%E6%8C%89%E9%92%AE\'>导航按钮</h4><p>用于模块内内容的切换。</p>\\n<p><img src=\\"/imgs/design/daohanganniu.png\\" alt=\\"daohanganniu\\"></p>\\n","index":141}')},"./site/dist/docs/design/text sync recursive demos.*(index|demo).js$":function(s,e){function n(s){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,s.exports=n,n.id="./site/dist/docs/design/text sync recursive demos.*(index|demo).js$"},"./site/dist/docs/design/text/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/design/text/index.json")),p=a(n("./site/dist/design.json")),i=n("./site/dist/docs/design/text sync recursive demos.*(index|demo).js$"),r=i.keys(),h=[],m=0;m<r.length;m++){var j=r[m];/demo.js$/.test(j)&&m++,h.push(i(j))}var u=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:h})},e}(l.default);e.default=u,(0,o.default)(u,"sidebar",p.default),(0,o.default)(u,"data",d.default)},"./site/dist/docs/design/text/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"文案","order":6,"sidebar":"design","disabled":true},"catalogs":[],"contents":"<h2 id=\'header-%E8%AF%AD%E8%A8%80\'>语言</h2><p>在界面设计中，文案作为与用户沟通的媒介也应作为设计的一部分，受到足够重视。在文案设计时应注意一下几点：</p>\\n<p><strong>• 用户视角</strong></p>\\n<p><strong>• 动宾短语</strong></p>\\n<p><strong>• 简单直接，大白话</strong></p>\\n<p><strong>• 切中要害，可感知</strong></p>\\n<h2 id=\'header-%E7%94%A8%E6%88%B7%E8%A7%86%E8%A7%92\'>用户视角</h2><p>文案作为界面要素，其存在目的是帮助用户完成特定的操作行为。文案的设计应将用户为主体，以用户关注点为设计依据。</p>\\n<h2 id=\'header-CTA(call%20to%20action)%E6%93%8D%E4%BD%9C%E5%91%BD%E5%90%8D\'>CTA(call to action)操作命名</h2><p>针对引导用户操作，触发相应业务逻辑的操作，命名时采用“动宾短语”。即，动词+名词的格式，以表达支配影响与被支配被影响的关系。</p>\\n<p><img src=\\"/imgs/design/anniumingming.png\\" alt=\\"anniumingming\\"></p>\\n<h2 id=\'header-%E7%AE%80%E5%8D%95%E7%9B%B4%E6%8E%A5%EF%BC%8C%E5%A4%A7%E7%99%BD%E8%AF%9D\'>简单直接，大白话</h2><p>使用简单，通俗，用户容易理解的表达方式。降低用户认知成本。</p>\\n<h2 id=\'header-%E5%88%87%E4%B8%AD%E8%A6%81%E5%AE%B3%EF%BC%8C%E5%8F%AF%E6%84%9F%E7%9F%A5\'>切中要害，可感知</h2><p>针对提示说明性文案，应将操作结果、目标、影响详细告知用户，使用户能够获取清晰的判断。</p>\\n","index":268}')},"./site/dist/docs/design/tip sync recursive demos.*(index|demo).js$":function(s,e){function n(s){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,s.exports=n,n.id="./site/dist/docs/design/tip sync recursive demos.*(index|demo).js$"},"./site/dist/docs/design/tip/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/design/tip/index.json")),p=a(n("./site/dist/design.json")),i=n("./site/dist/docs/design/tip sync recursive demos.*(index|demo).js$"),r=i.keys(),h=[],m=0;m<r.length;m++){var j=r[m];/demo.js$/.test(j)&&m++,h.push(i(j))}var u=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:h})},e}(l.default);e.default=u,(0,o.default)(u,"sidebar",p.default),(0,o.default)(u,"data",d.default)},"./site/dist/docs/design/tip/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"提示","order":3,"category":"组件","sidebar":"design","disabled":true},"catalogs":[],"contents":"<h3 id=\'header-%E8%AD%A6%E5%91%8A%E6%8F%90%E7%A4%BA\'>警告提示</h3><p>提示信息常驻与页面中，不能关闭，不会自动消失。</p>\\n<p><strong>操作警告</strong></p>\\n<p>单段文本，进行重要操作提示，或操作会造成负面影响时使用。</p>\\n<p><img src=\\"/imgs/design/caozuojinggao.png\\" alt=\\"caozuojinggao\\"></p>\\n<p><strong>公告提示</strong></p>\\n<p>单段文本，提示内容不影响用户，或不造成重大影响时使用。</p>\\n<p><img src=\\"/imgs/design/gonggaotishi.png\\" alt=\\"gonggaotishi\\"></p>\\n<p><strong>帮助说明</strong></p>\\n<p>多段说明性内容，可以添加文字链接。</p>\\n<p><img src=\\"/imgs/design/bangzhushuoming.png\\" alt=\\"bangzhushuoming\\"></p>\\n<h3 id=\'header-%E5%85%A8%E5%B1%80%E6%8F%90%E7%A4%BA\'>全局提示</h3><p>匀速移动并逐渐显示与页面最高层级，吸引用户注意。用于页面级操作的反馈。可以点击关闭，如不关闭会在出现后5秒后自动消失。</p>\\n<p><img src=\\"/imgs/design/quanjutishi.png\\" alt=\\"quanjutishi\\"></p>\\n<h3 id=\'header-%E5%B8%AE%E5%8A%A9%E6%B0%94%E6%B3%A1\'>帮助气泡</h3><p>在目标获取焦点时，显示相关帮助提示，对当前内容进行说明，帮助用户完成当前操作。帮助提示不应遮挡操作内容。失去焦点后会自动消失。</p>\\n<p><img src=\\"/imgs/design/bangzhuqipao.png\\" alt=\\"bangzhuqipao\\"></p>\\n<h3 id=\'header-%E6%96%87%E5%AD%97%E6%8F%90%E7%A4%BA\'>文字提示</h3><p>单行文字提示，内容不得超过20个中文字符。替换默认title提示，不遮挡内容主体，当有其他弹出内容提示时，不使用文字提示。</p>\\n<p><img src=\\"/imgs/design/wenzitishi.png\\" alt=\\"wenzitishi\\"></p>\\n","index":206}')},"./site/dist/docs/event sync recursive demos.*(index|demo).js$":function(s,e){function n(s){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,s.exports=n,n.id="./site/dist/docs/event sync recursive demos.*(index|demo).js$"},"./site/dist/docs/event/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/event/index.json")),p=a(n("./site/dist/doc.json")),i=n("./site/dist/docs/event sync recursive demos.*(index|demo).js$"),r=i.keys(),h=[],m=0;m<r.length;m++){var j=r[m];/demo.js$/.test(j)&&m++,h.push(i(j))}var u=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:h})},e}(l.default);e.default=u,(0,o.default)(u,"sidebar",p.default),(0,o.default)(u,"data",d.default)},"./site/dist/docs/event/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"默认事件","order":3,"sidebar":"doc"},"catalogs":[],"contents":"<p>组件除了自定义事件外，还存在一类默认事件，文档中并没有提到，该事件是框架底层自动触发的。</p>\\n<h1 id=\'header-%24change%3A*\'><code>$change:*</code></h1><p>该事件会在组件内部属性变更时触发，此时组件视图并没有更新。组件会将当前组件实例、变更后的值以及变更之前的值传给组件回调函数</p>\\n<h2 id=\'header-%E4%BA%8B%E4%BB%B6%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0\'>事件回调函数</h2><p><code>function(instance, newValue, oldValue)</code></p>\\n<ol>\\n<li><code>instance</code> 触发相应事件的组件实例对象</li>\\n<li><code>newValue</code> 变更后的值</li>\\n<li><code>oldValue</code> 变更之前的值</li>\\n</ol>\\n<p>例如：我们如下这样可以监听<code>Select</code>值变化事件，值对应的属性名为<code>value</code></p>\\n<ol>\\n<li><p>Intact</p>\\n<pre><code class=\\"hljs vdt\\"> &lt;<span class=\\"hljs-keyword\\">Select</span> ev-$change:<span class=\\"hljs-keyword\\">value</span>={{ <span class=\\"hljs-keyword\\">self</span>.onChange }}&gt;\\n     &lt;<span class=\\"hljs-keyword\\">Option</span> <span class=\\"hljs-keyword\\">value</span>=<span class=\\"hljs-string\\">\\"1\\"</span>&gt;<span class=\\"hljs-number\\">1</span>&lt;/<span class=\\"hljs-keyword\\">Option</span>&gt;\\n     &lt;<span class=\\"hljs-keyword\\">Option</span> <span class=\\"hljs-keyword\\">value</span>=<span class=\\"hljs-string\\">\\"2\\"</span>&gt;<span class=\\"hljs-number\\">2</span>&lt;/<span class=\\"hljs-keyword\\">Option</span>&gt;\\n &lt;/<span class=\\"hljs-keyword\\">Select</span>&gt;\\n</code></pre>\\n</li>\\n<li><p>Vue</p>\\n<pre><code class=\\"hljs vue\\"> &lt;<span class=\\"hljs-keyword\\">Select</span> @$change:<span class=\\"hljs-keyword\\">value</span>=\\"onChange\\"&gt;\\n     &lt;<span class=\\"hljs-keyword\\">Option</span> <span class=\\"hljs-keyword\\">value</span>=\\"1\\"&gt;<span class=\\"hljs-number\\">1</span>&lt;/<span class=\\"hljs-keyword\\">Option</span>&gt;\\n     &lt;<span class=\\"hljs-keyword\\">Option</span> <span class=\\"hljs-keyword\\">value</span>=\\"2\\"&gt;<span class=\\"hljs-number\\">2</span>&lt;/<span class=\\"hljs-keyword\\">Option</span>&gt;\\n &lt;/<span class=\\"hljs-keyword\\">Select</span>&gt;\\n</code></pre>\\n<blockquote>\\n<p>vue支持<code>sync</code>修饰符，借用该默认事件，我们可以实现任意属性的<code>.sync</code>修饰进行双向绑定，所以我们甚至可以使用<code>.sync</code>实现<code>v-model</code>的功能</p>\\n<pre><code class=\\"hljs vue\\"> &lt;<span class=\\"hljs-keyword\\">Select</span> <span class=\\"hljs-keyword\\">value</span>.sync=\\"value\\"&gt;\\n     &lt;<span class=\\"hljs-keyword\\">Option</span> <span class=\\"hljs-keyword\\">value</span>=\\"1\\"&gt;<span class=\\"hljs-number\\">1</span>&lt;/<span class=\\"hljs-keyword\\">Option</span>&gt;\\n     &lt;<span class=\\"hljs-keyword\\">Option</span> <span class=\\"hljs-keyword\\">value</span>=\\"2\\"&gt;<span class=\\"hljs-number\\">2</span>&lt;/<span class=\\"hljs-keyword\\">Option</span>&gt;\\n &lt;/<span class=\\"hljs-keyword\\">Select</span>&gt;\\n</code></pre>\\n</blockquote>\\n<p> 如果要实现回调函数传参，可以借助vue的<code>arguments</code>写法</p>\\n<pre><code class=\\"hljs vue\\"> &lt;<span class=\\"hljs-keyword\\">Select</span> @$change:<span class=\\"hljs-keyword\\">value</span>=\\"onChange(\'test\', ...arguments)\\"&gt;\\n     &lt;<span class=\\"hljs-keyword\\">Option</span> <span class=\\"hljs-keyword\\">value</span>=\\"1\\"&gt;<span class=\\"hljs-number\\">1</span>&lt;/<span class=\\"hljs-keyword\\">Option</span>&gt;\\n     &lt;<span class=\\"hljs-keyword\\">Option</span> <span class=\\"hljs-keyword\\">value</span>=\\"2\\"&gt;<span class=\\"hljs-number\\">2</span>&lt;/<span class=\\"hljs-keyword\\">Option</span>&gt;\\n &lt;/<span class=\\"hljs-keyword\\">Select</span>&gt;\\n</code></pre>\\n</li>\\n<li><p>React React支持使用<code>:</code>当做属性名，所以将<code>:</code>改为<code>-</code>即可</p>\\n<pre><code class=\\"hljs jsx\\"> &lt;<span class=\\"hljs-keyword\\">Select</span> <span class=\\"hljs-keyword\\">on</span>$change-<span class=\\"hljs-keyword\\">value</span>={this.onChange.bind(this)}&gt;\\n     &lt;<span class=\\"hljs-keyword\\">Option</span> <span class=\\"hljs-keyword\\">value</span>=\\"1\\"&gt;<span class=\\"hljs-number\\">1</span>&lt;/<span class=\\"hljs-keyword\\">Option</span>&gt;\\n     &lt;<span class=\\"hljs-keyword\\">Option</span> <span class=\\"hljs-keyword\\">value</span>=\\"2\\"&gt;<span class=\\"hljs-number\\">2</span>&lt;/<span class=\\"hljs-keyword\\">Option</span>&gt;\\n &lt;/<span class=\\"hljs-keyword\\">Select</span>&gt;\\n</code></pre>\\n</li>\\n</ol>\\n<h1 id=\'header-%24changed%3A*\'><code>$changed:*</code></h1><p>与<code>$change:*</code>事件类似，组件在属性变更时还会触发<code>$changed:*</code>事件，唯一的区别是，该事件发生在<code>$change:*</code>事件之后，它会在视图更新后触发。</p>\\n","index":182}')},"./site/dist/docs/getting-started sync recursive demos.*(index|demo).js$":function(s,e){function n(s){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,s.exports=n,n.id="./site/dist/docs/getting-started sync recursive demos.*(index|demo).js$"},"./site/dist/docs/getting-started/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/getting-started/index.json")),p=a(n("./site/dist/doc.json")),i=n("./site/dist/docs/getting-started sync recursive demos.*(index|demo).js$"),r=i.keys(),h=[],m=0;m<r.length;m++){var j=r[m];/demo.js$/.test(j)&&m++,h.push(i(j))}var u=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:h})},e}(l.default);e.default=u,(0,o.default)(u,"sidebar",p.default),(0,o.default)(u,"data",d.default)},"./site/dist/docs/getting-started/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"Intact中使用","order":0,"sidebar":"doc"},"catalogs":[],"contents":"<h1 id=\'header-%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\'>准备工作</h1><p>在学习使用kpc之前，假设你已经掌握了以下知识：</p>\\n<ol>\\n<li><a href=\\"https://webpack.js.org/\\">webpack</a> + <a href=\\"https://babeljs.io/\\">babel</a></li>\\n<li><a href=\\"http://javey.github.io/intact/\\">intact</a></li>\\n</ol>\\n<h1 id=\'header-%E6%89%8B%E5%8A%A8%E5%BC%95%E5%85%A5\'>手动引入</h1><h2 id=\'header-%E5%AE%89%E8%A3%85\'>安装</h2><pre><code class=\\"hljs js\\">npm <span class=\\"hljs-keyword\\">install</span> kpc -S\\n</code></pre>\\n<h2 id=\'header-%E5%8D%95%E6%96%87%E4%BB%B6%E5%BC%95%E5%85%A5\'>单文件引入</h2><p>如果你的项目没有使用webpack来构建，可以引入单文件构建版。将<code>kpc.css</code>和<code>kpc.js</code>在html文件中引入。此时所有组件都在<code>Kpc</code>命名空间下，例如<code>Kpc.Button</code> <code>Kpc.Table</code>等。</p>\\n<p>另外你也可以调用<code>Kpc.install()</code>方法将组件放到全局空间下，此时为了避免命名冲突，所有组件名前加上<code>K</code>作为前缀，例如<code>KButton</code> <code>KTable</code>等</p>\\n<h3 id=\'header-CDN\'>CDN</h3><p>通过<a href=\\"https://cdn.jsdelivr.net/npm/kpc/dist/\\">cdn.jsdelivr.net/npm/kpc/dist/</a>可以直接引入最新版kpc，建议使用锁定版本地址，例如：<a href=\\"https://cdn.jsdelivr.net/npm/kpc@0.5.14/dist/\\">cdn.jsdelivr.net/npm/kpc@0.5.14/dist/</a></p>\\n<pre><code class=\\"hljs html\\"><span class=\\"hljs-meta\\">&lt;!DOCTYPE html&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">html</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">head</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">meta</span> <span class=\\"hljs-attr\\">charset</span>=<span class=\\"hljs-string\\">\\"utf-8\\"</span> /&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">title</span>&gt;</span>kpc-demo<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">title</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">meta</span> <span class=\\"hljs-attr\\">http-equiv</span>=<span class=\\"hljs-string\\">\\"X-UA-Compatible\\"</span> <span class=\\"hljs-attr\\">content</span>=<span class=\\"hljs-string\\">\\"IE=edge, chrome=1\\"</span> /&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">meta</span> <span class=\\"hljs-attr\\">http-equiv</span>=<span class=\\"hljs-string\\">\\"Cache-Control\\"</span> <span class=\\"hljs-attr\\">content</span>=<span class=\\"hljs-string\\">\\"no-siteapp\\"</span> /&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">meta</span> <span class=\\"hljs-attr\\">name</span>=<span class=\\"hljs-string\\">\\"viewport\\"</span> <span class=\\"hljs-attr\\">content</span>=<span class=\\"hljs-string\\">\\"initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no\\"</span> /&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">link</span> <span class=\\"hljs-attr\\">rel</span>=<span class=\\"hljs-string\\">\\"stylesheet\\"</span> <span class=\\"hljs-attr\\">type</span>=<span class=\\"hljs-string\\">\\"text/css\\"</span> <span class=\\"hljs-attr\\">href</span>=<span class=\\"hljs-string\\">\\"//cdn.jsdelivr.net/npm/kpc/dist/kpc.css\\"</span> /&gt;</span>\\n    <span class=\\"hljs-comment\\">&lt;!-- 将上述kpc.css替换成ksyun.css，可以使用ksyun主题 --&gt;</span>\\n    <span class=\\"hljs-comment\\">&lt;!-- &lt;link rel=\\"stylesheet\\" type=\\"text/css\\" href=\\"//cdn.jsdelivr.net/npm/kpc/dist/ksyun.css\\" /&gt; --&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">head</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">body</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">div</span> <span class=\\"hljs-attr\\">id</span>=<span class=\\"hljs-string\\">\\"app\\"</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">div</span>&gt;</span>\\n\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span> <span class=\\"hljs-attr\\">type</span>=<span class=\\"hljs-string\\">\\"text/javascript\\"</span> <span class=\\"hljs-attr\\">src</span>=<span class=\\"hljs-string\\">\\"//cdn.jsdelivr.net/npm/intact/dist/intact.min.js\\"</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span> <span class=\\"hljs-attr\\">type</span>=<span class=\\"hljs-string\\">\\"text/javascript\\"</span> <span class=\\"hljs-attr\\">src</span>=<span class=\\"hljs-string\\">\\"//cdn.jsdelivr.net/npm/kpc/dist/kpc.min.js\\"</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span> <span class=\\"hljs-attr\\">type</span>=<span class=\\"hljs-string\\">\\"text/javascript\\"</span>&gt;</span><span class=\\"javascript\\">\\n        Kpc.install();\\n        <span class=\\"hljs-keyword\\">var</span> Page = Intact.extend({\\n            <span class=\\"hljs-attr\\">template</span>: <span class=\\"hljs-string\\">\'&lt;KButton ev-click={self.hello}&gt;Hello World&lt;/KButton&gt;\'</span>,\\n            <span class=\\"hljs-attr\\">hello</span>: <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\"></span>) </span>{\\n                KMessage.success(<span class=\\"hljs-string\\">\'Welcome to kpc world!\'</span>);\\n            }\\n        });\\n        Intact.mount(Page, <span class=\\"hljs-built_in\\">document</span>.getElementById(<span class=\\"hljs-string\\">\'app\'</span>));\\n    </span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">body</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">html</span>&gt;</span>\\n</code></pre>\\n<h2 id=\'header-%E5%A4%9A%E6%96%87%E4%BB%B6css%E6%9E%84%E5%BB%BA%E7%89%88\'>多文件css构建版</h2><p>当项目使用webpack构建时，可以使用kpc的多文件css构建版，此时可以做到按需加载，而非单文件全量引入。多文件构建版样式css和字体，需要通过<code>css-loader &amp; style-loader</code>和<code>file-loader</code>来引入</p>\\n<blockquote>\\n<p>此版本放在<code>@css</code>文件夹下，该文件名的意思是：所有的样式<code>stylus</code>文件都被编译成了<code>css</code>文件，并非只是放置css文件的目录。ES6语法的<code>js</code>和<code>vdt</code>文件也都被编译成了ES5语法的<code>js</code>文件，所以你无需<code>babel-loader</code>和<code>vdt-loader</code>来处理它们，仅仅只需<code>css-loader</code>和<code>style-loader</code>处理<code>css</code>文件即可。另外<code>file-loader</code>处理字体还是需要的。</p>\\n</blockquote>\\n<ol>\\n<li>安装依赖</li>\\n</ol>\\n<pre><code class=\\"hljs shell\\">npm <span class=\\"hljs-keyword\\">install</span> kpc <span class=\\"hljs-comment\\">--save</span>\\n\\nnpm <span class=\\"hljs-keyword\\">install</span> css-loader <span class=\\"hljs-keyword\\">style</span>-loader <span class=\\"hljs-keyword\\">file</span>-loader <span class=\\"hljs-comment\\">--save-dev</span>\\n</code></pre>\\n<ol start=\\"2\\">\\n<li>配置<code>webpack.config.js</code></li>\\n</ol>\\n<p>为了统一组件加载路径，我们可以加入<code>alias</code>设置。例如：<code>kpc/components/button</code>会指向<code>kpc/@css/components/button</code></p>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-string\\">module.exports</span> <span class=\\"hljs-string\\">=</span> <span class=\\"hljs-string\\">{</span>\\n    <span class=\\"hljs-string\\">...</span>\\n<span class=\\"hljs-attr\\">    resolve:</span> <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">        alias:</span> <span class=\\"hljs-string\\">{</span>\\n            <span class=\\"hljs-string\\">//</span> <span class=\\"hljs-string\\">让kpc组件指向多文件构建版本，可以统一组件加载路径</span>\\n<span class=\\"hljs-attr\\">            \'kpc\':</span> <span class=\\"hljs-string\\">\'kpc/@css\'</span>\\n        <span class=\\"hljs-string\\">}</span>\\n    <span class=\\"hljs-string\\">},</span>\\n<span class=\\"hljs-attr\\">    module:</span> <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">        rules:</span> <span class=\\"hljs-string\\">[</span>\\n            <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">                test:</span> <span class=\\"hljs-string\\">/\\\\.css$/,</span>\\n<span class=\\"hljs-attr\\">                use:</span> <span class=\\"hljs-string\\">[</span>\\n                    <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">                        loader:</span> <span class=\\"hljs-string\\">\'style-loader\'</span><span class=\\"hljs-string\\">,</span>\\n                    <span class=\\"hljs-string\\">},</span>\\n                    <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">                        loader:</span> <span class=\\"hljs-string\\">\'css-loader\'</span><span class=\\"hljs-string\\">,</span>\\n<span class=\\"hljs-attr\\">                        options:</span> <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">                            url:</span> <span class=\\"hljs-literal\\">true</span>\\n                        <span class=\\"hljs-string\\">}</span>\\n                    <span class=\\"hljs-string\\">}</span>\\n                <span class=\\"hljs-string\\">]</span>\\n            <span class=\\"hljs-string\\">},</span>\\n            <span class=\\"hljs-string\\">//</span> <span class=\\"hljs-string\\">引入字体文件</span>\\n            <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">                test:</span> <span class=\\"hljs-string\\">/\\\\.(woff2?|eot|ttf|otf|svg)(\\\\?.*)?$/,</span>\\n<span class=\\"hljs-attr\\">                use:</span> <span class=\\"hljs-string\\">[</span>\\n                    <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">                        loader:</span> <span class=\\"hljs-string\\">\'file-loader\'</span><span class=\\"hljs-string\\">,</span>\\n<span class=\\"hljs-attr\\">                        options:</span> <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">                            outputPath:</span> <span class=\\"hljs-string\\">\'fonts/\'</span><span class=\\"hljs-string\\">,</span>\\n                        <span class=\\"hljs-string\\">}</span>\\n                    <span class=\\"hljs-string\\">}</span>\\n                <span class=\\"hljs-string\\">]</span>\\n            <span class=\\"hljs-string\\">},</span>\\n        <span class=\\"hljs-string\\">]</span>\\n    <span class=\\"hljs-string\\">}</span>\\n<span class=\\"hljs-string\\">}</span>\\n</code></pre>\\n<ol start=\\"3\\">\\n<li>按需引入组件</li>\\n</ol>\\n<p>在需要使用组件的地方，引入组件</p>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-keyword\\">import</span> {Button, ButtonGroup} <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'kpc/components/button\'</span>;\\n\\n<span class=\\"xml\\"><span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">ButtonGroup</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">Button</span>&gt;</span>button1<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">Button</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">Button</span>&gt;</span>button2<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">Button</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">ButtonGroup</span>&gt;</span></span>\\n</code></pre>\\n<h2 id=\'header-%E5%A4%9A%E6%96%87%E4%BB%B6stylus%E6%9E%84%E5%BB%BA%E7%89%88\'>多文件stylus构建版</h2><p>所谓stylus构建版与css构建版的区别是，样式使用的<code>stylus</code>而非编译后的css。当我们需要修改或者引入新主题时，通过该版本，可以很方便地实现。详见<a href=\\"../theme/\\">定制主题</a></p>\\n<p>由于使用<code>stylus</code>，所以与构建版在使用上唯一的区别是需要引入<code>stylus-loader</code></p>\\n<blockquote>\\n<p>与多文件css构建版类似，此版本放在<code>@stylus</code>目录下</p>\\n</blockquote>\\n<ol>\\n<li>新增依赖</li>\\n</ol>\\n<p>为了提供css兼容性，这里加入<code>autoprefixer</code></p>\\n<pre><code class=\\"hljs shell\\">npm install postcss-loader autoprefixer stylus-loader --<span class=\\"hljs-built_in\\">save</span>-<span class=\\"hljs-built_in\\">dev</span>\\n</code></pre>\\n<ol start=\\"2\\">\\n<li>修改<code>webpack.config.js</code></li>\\n</ol>\\n<p>将css加载配置修改为（通过<code>stylus-loader</code>的<code>import</code>配置，我们可以引入主题文件）：</p>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-string\\">const</span> <span class=\\"hljs-string\\">autoprefixer</span> <span class=\\"hljs-string\\">=</span> <span class=\\"hljs-string\\">require(\'autoprefixer\');</span>\\n\\n<span class=\\"hljs-string\\">module.export</span> <span class=\\"hljs-string\\">=</span> <span class=\\"hljs-string\\">{</span>\\n    <span class=\\"hljs-string\\">...</span>\\n<span class=\\"hljs-attr\\">    resolve:</span> <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">        alias:</span> <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">            \'kpc\':</span> <span class=\\"hljs-string\\">\'kpc/@stylus\'</span>\\n        <span class=\\"hljs-string\\">}</span>\\n    <span class=\\"hljs-string\\">},</span>\\n<span class=\\"hljs-attr\\">    module:</span> <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">        rules:</span> <span class=\\"hljs-string\\">[</span>\\n            <span class=\\"hljs-string\\">...</span>\\n            <span class=\\"hljs-string\\">//</span> <span class=\\"hljs-string\\">编译stylus</span>\\n            <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">                test:</span> <span class=\\"hljs-string\\">/\\\\.styl$/,</span>\\n<span class=\\"hljs-attr\\">                use:</span> <span class=\\"hljs-string\\">[</span>\\n                    <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">                        loader:</span> <span class=\\"hljs-string\\">\'style-loader\'</span>\\n                    <span class=\\"hljs-string\\">},</span>\\n                    <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">                        loader:</span> <span class=\\"hljs-string\\">\'css-loader\'</span><span class=\\"hljs-string\\">,</span> \\n<span class=\\"hljs-attr\\">                        options:</span> <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">                            url:</span> <span class=\\"hljs-literal\\">true</span><span class=\\"hljs-string\\">,</span>\\n                        <span class=\\"hljs-string\\">}</span>\\n                    <span class=\\"hljs-string\\">},</span>\\n                    <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">                        loader:</span> <span class=\\"hljs-string\\">\'postcss-loader\'</span><span class=\\"hljs-string\\">,</span>\\n<span class=\\"hljs-attr\\">                        options:</span> <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">                            plugins:</span> <span class=\\"hljs-string\\">[</span>\\n                                <span class=\\"hljs-string\\">autoprefixer({</span>\\n<span class=\\"hljs-attr\\">                                    browsers:</span> <span class=\\"hljs-string\\">[</span>\\n                                        <span class=\\"hljs-string\\">\'last 2 versions\'</span><span class=\\"hljs-string\\">,</span>\\n                                        <span class=\\"hljs-string\\">\'ie &gt;= 9\'</span><span class=\\"hljs-string\\">,</span>\\n                                    <span class=\\"hljs-string\\">],</span>\\n                                <span class=\\"hljs-string\\">})</span>\\n                            <span class=\\"hljs-string\\">],</span>\\n                        <span class=\\"hljs-string\\">}</span>\\n                    <span class=\\"hljs-string\\">},</span>\\n                    <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">                        loader:</span> <span class=\\"hljs-string\\">\'stylus-loader\'</span><span class=\\"hljs-string\\">,</span> \\n<span class=\\"hljs-attr\\">                        options:</span> <span class=\\"hljs-string\\">{</span>\\n                            <span class=\\"hljs-string\\">\'include css\'</span><span class=\\"hljs-string\\">:</span> <span class=\\"hljs-literal\\">true</span><span class=\\"hljs-string\\">,</span>\\n                            <span class=\\"hljs-string\\">\'resolve url\'</span><span class=\\"hljs-string\\">:</span> <span class=\\"hljs-literal\\">true</span><span class=\\"hljs-string\\">,</span> <span class=\\"hljs-string\\">//</span> <span class=\\"hljs-string\\">@since</span> <span class=\\"hljs-string\\">v0.6.0</span>\\n<span class=\\"hljs-attr\\">                            sourceMap:</span> <span class=\\"hljs-literal\\">false</span><span class=\\"hljs-string\\">,</span>\\n                            <span class=\\"hljs-string\\">//</span> <span class=\\"hljs-string\\">使用import引入主题文件，详见定制主题</span>\\n                            <span class=\\"hljs-string\\">//</span> <span class=\\"hljs-string\\">\'import\'</span><span class=\\"hljs-string\\">:</span> <span class=\\"hljs-string\\">path.resolve(__dirname,</span> <span class=\\"hljs-string\\">\'styles/themes/ksyun/index.styl\'</span><span class=\\"hljs-string\\">),</span>\\n                        <span class=\\"hljs-string\\">}</span>\\n                    <span class=\\"hljs-string\\">}</span>\\n                <span class=\\"hljs-string\\">]</span>\\n            <span class=\\"hljs-string\\">},</span>\\n            <span class=\\"hljs-string\\">//</span> <span class=\\"hljs-string\\">引入字体文件</span>\\n            <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">                test:</span> <span class=\\"hljs-string\\">/\\\\.(woff2?|eot|ttf|otf|svg)(\\\\?.*)?$/,</span>\\n<span class=\\"hljs-attr\\">                use:</span> <span class=\\"hljs-string\\">[</span>\\n                    <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">                        loader:</span> <span class=\\"hljs-string\\">\'file-loader\'</span><span class=\\"hljs-string\\">,</span>\\n<span class=\\"hljs-attr\\">                        options:</span> <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">                            outputPath:</span> <span class=\\"hljs-string\\">\'fonts/\'</span><span class=\\"hljs-string\\">,</span>\\n                        <span class=\\"hljs-string\\">}</span>\\n                    <span class=\\"hljs-string\\">}</span>\\n                <span class=\\"hljs-string\\">]</span>\\n            <span class=\\"hljs-string\\">},</span>\\n        <span class=\\"hljs-string\\">]</span>\\n    <span class=\\"hljs-string\\">}</span>\\n<span class=\\"hljs-string\\">}</span>\\n</code></pre>\\n","index":51}')},"./site/dist/docs/i18n sync recursive demos.*(index|demo).js$":function(s,e){function n(s){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,s.exports=n,n.id="./site/dist/docs/i18n sync recursive demos.*(index|demo).js$"},"./site/dist/docs/i18n/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/i18n/index.json")),p=a(n("./site/dist/doc.json")),i=n("./site/dist/docs/i18n sync recursive demos.*(index|demo).js$"),r=i.keys(),h=[],m=0;m<r.length;m++){var j=r[m];/demo.js$/.test(j)&&m++,h.push(i(j))}var u=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:h})},e}(l.default);e.default=u,(0,o.default)(u,"sidebar",p.default),(0,o.default)(u,"data",d.default)},"./site/dist/docs/i18n/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"国际化","order":2,"sidebar":"doc"},"catalogs":[],"contents":"<h1 id=\'header-%E5%8D%95%E6%96%87%E4%BB%B6%E6%9E%84%E5%BB%BA%E7%89%88\'>单文件构建版</h1><p>通过<code>&lt;script&gt;</code>直接引入对应的语言包文件，此时会自动注册相应的语言包。</p>\\n<pre><code class=\\"hljs html\\"><span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span> <span class=\\"hljs-attr\\">type</span>=<span class=\\"hljs-string\\">\\"text/javascript\\"</span> <span class=\\"hljs-attr\\">src</span>=<span class=\\"hljs-string\\">\\"//cdn.jsdelivr.net/npm/intact/dist/intact.min.js\\"</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span> <span class=\\"hljs-attr\\">type</span>=<span class=\\"hljs-string\\">\\"text/javascript\\"</span> <span class=\\"hljs-attr\\">src</span>=<span class=\\"hljs-string\\">\\"//cdn.jsdelivr.net/npm/kpc/dist/kpc.min.js\\"</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span> <span class=\\"hljs-attr\\">type</span>=<span class=\\"hljs-string\\">\\"text/javascript\\"</span> <span class=\\"hljs-attr\\">src</span>=<span class=\\"hljs-string\\">\\"//cdn.jsdelivr.net/npm/kpc/dist/i18n/en-US.min.js\\"</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>\\n</code></pre>\\n<h1 id=\'header-%E9%80%9A%E8%BF%87webpack%E5%BC%95%E5%85%A5\'>通过webpack引入</h1><p>如果你使用多文件构建版本，可以像下面这样，在入口文件中引入相应语言包，然后通过<code>localize</code>函数注册</p>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-keyword\\">import</span> {localize} <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'kpc\'</span>;\\n<span class=\\"hljs-keyword\\">import</span> i18n <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'kpc/i18n/en-US\'</span>;\\n\\nlocalize(i18n);\\n</code></pre>\\n<h1 id=\'header-_%24(key%2C%20%5Bdata%5D)%E5%87%BD%E6%95%B0\'><code>_$(key, [data])</code>函数</h1><p>kpc提供了一个<code>_$(key, [data])</code>函数，可以用来实现非kpc组件的国际化。首先我们使用上面提到的<code>localize(data)</code>函数来注册所有翻译字典</p>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-keyword\\">import</span> {localize} <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'kpc\'</span>;\\n<span class=\\"hljs-keyword\\">import</span> i18n <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'kpc/i18n/en-US\'</span>;\\n\\n<span class=\\"hljs-keyword\\">const</span> dict = {\\n    <span class=\\"hljs-string\\">\'测试\'</span>: <span class=\\"hljs-string\\">\'test\'</span>\\n};\\n\\n<span class=\\"hljs-comment\\">// 将kpc提供的字典和自定义自定合并传给localize</span>\\nlocalize({...dict, ...i18n});\\n</code></pre>\\n<p>然后我们就可以在代码中使用<code>_$</code>来获取翻译结果了</p>\\n<pre><code class=\\"hljs vdt\\"><span class=\\"hljs-keyword\\">import</span> {<span class=\\"hljs-number\\">_</span><span class=\\"hljs-variable\\">$}</span> from <span class=\\"hljs-string\\">\'kpc\'</span>;\\n\\n&lt;Button&gt;{{ <span class=\\"hljs-number\\">_</span><span class=\\"hljs-variable\\">$(</span><span class=\\"hljs-string\\">\'测试\'</span>) }}&lt;<span class=\\"hljs-regexp\\">/Button&gt;</span>\\n</code></pre>\\n<h2 id=\'header-%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E\'>参数说明</h2><ol>\\n<li><p><code>key</code> 要获取翻译字典的<code>key</code>，如果在字典中找不到对应的<code>key</code>，则直接返回<code>key</code>。所以当我们使用中文当<code>key</code>时，无需为中文提供字典数据，它会直接返回中文<code>key</code>。支持类似<code>lodash</code>的通过path取值</p>\\n</li>\\n<li><p><code>data</code> 附加数据。通过它我们可以实现变量替换，以及英语中的单复数变换，例如：</p>\\n</li>\\n</ol>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-keyword\\">const</span> dict = {\\n    <span class=\\"hljs-string\\">\'最多选择{n}项\'</span>: <span class=\\"hljs-string\\">\'Please select no more than {n} item{s:n}.\'</span>\\n};\\nlocalize(dict);\\n\\n_$(<span class=\\"hljs-string\\">\'最多选择{n}项\'</span>, {<span class=\\"hljs-attr\\">n</span>: <span class=\\"hljs-number\\">1</span>}); <span class=\\"hljs-comment\\">// output: Please select no more than 1 item.</span>\\n_$(<span class=\\"hljs-string\\">\'最多选择{n}项\'</span>, {<span class=\\"hljs-attr\\">n</span>: <span class=\\"hljs-number\\">2</span>}); <span class=\\"hljs-comment\\">// output: Please select no more than 2 items.</span>\\n</code></pre>\\n<p>可以看到通过<code>{n}</code>语法，可以实现变量替换，其中<code>{s:n}</code>的含义为：当<code>n</code>大于<code>1</code>时，输出<code>s</code>。对于单复数需要变化后缀的情况可以这样做：例如<code>lea{f|ves:n}</code> <code>wom{an|en:n}</code></p>\\n","index":154}')},"./site/dist/docs/react sync recursive demos.*(index|demo).js$":function(s,e){function n(s){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,s.exports=n,n.id="./site/dist/docs/react sync recursive demos.*(index|demo).js$"},"./site/dist/docs/react/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/react/index.json")),p=a(n("./site/dist/doc.json")),i=n("./site/dist/docs/react sync recursive demos.*(index|demo).js$"),r=i.keys(),h=[],m=0;m<r.length;m++){var j=r[m];/demo.js$/.test(j)&&m++,h.push(i(j))}var u=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:h})},e}(l.default);e.default=u,(0,o.default)(u,"sidebar",p.default),(0,o.default)(u,"data",d.default)},"./site/dist/docs/react/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"React中使用","order":1.2,"sidebar":"doc"},"catalogs":[],"contents":"<h1 id=\'header-%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\'>准备工作</h1><p>在学习使用kpc之前，假设你已经掌握了以下知识：</p>\\n<ol>\\n<li><a href=\\"https://webpack.js.org/\\">webpack</a> + <a href=\\"https://babeljs.io/\\">babel</a></li>\\n<li><a href=\\"https://reactjs.org/\\">React</a></li>\\n</ol>\\n<h1 id=\'header-%E5%AE%89%E8%A3%85\'>安装</h1><pre><code class=\\"hljs shell\\">npm <span class=\\"hljs-keyword\\">install</span> kpc-react -S\\n</code></pre>\\n<h1 id=\'header-CDN\'>CDN</h1><p>通过<a href=\\"https://cdn.jsdelivr.net/npm/kpc/dist/\\">cdn.jsdelivr.net/npm/kpc/dist/</a>可以直接引入最新版kpc，建议使用锁定版本地址，例如：<a href=\\"https://cdn.jsdelivr.net/npm/kpc@1.0.0/dist/\\">cdn.jsdelivr.net/npm/kpc@0.5.14/dist/</a></p>\\n<pre><code class=\\"hljs html\\"><span class=\\"hljs-meta\\">&lt;!DOCTYPE html&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">html</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">head</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">meta</span> <span class=\\"hljs-attr\\">charset</span>=<span class=\\"hljs-string\\">\\"utf-8\\"</span> /&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">title</span>&gt;</span>kpc-demo<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">title</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">meta</span> <span class=\\"hljs-attr\\">http-equiv</span>=<span class=\\"hljs-string\\">\\"X-UA-Compatible\\"</span> <span class=\\"hljs-attr\\">content</span>=<span class=\\"hljs-string\\">\\"IE=edge, chrome=1\\"</span> /&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">meta</span> <span class=\\"hljs-attr\\">http-equiv</span>=<span class=\\"hljs-string\\">\\"Cache-Control\\"</span> <span class=\\"hljs-attr\\">content</span>=<span class=\\"hljs-string\\">\\"no-siteapp\\"</span> /&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">meta</span> <span class=\\"hljs-attr\\">name</span>=<span class=\\"hljs-string\\">\\"viewport\\"</span> <span class=\\"hljs-attr\\">content</span>=<span class=\\"hljs-string\\">\\"initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no\\"</span> /&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">link</span> <span class=\\"hljs-attr\\">rel</span>=<span class=\\"hljs-string\\">\\"stylesheet\\"</span> <span class=\\"hljs-attr\\">type</span>=<span class=\\"hljs-string\\">\\"text/css\\"</span> <span class=\\"hljs-attr\\">href</span>=<span class=\\"hljs-string\\">\\"//cdn.jsdelivr.net/npm/kpc/dist/kpc.css\\"</span> /&gt;</span>\\n    <span class=\\"hljs-comment\\">&lt;!-- 将上述kpc.css替换成ksyun.css，可以使用ksyun主题 --&gt;</span>\\n    <span class=\\"hljs-comment\\">&lt;!-- &lt;link rel=\\"stylesheet\\" type=\\"text/css\\" href=\\"//cdn.jsdelivr.net/npm/kpc/dist/ksyun.css\\" /&gt; --&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">head</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">body</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">div</span> <span class=\\"hljs-attr\\">id</span>=<span class=\\"hljs-string\\">\\"app\\"</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">div</span>&gt;</span>\\n\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span> <span class=\\"hljs-attr\\">src</span>=<span class=\\"hljs-string\\">\\"//cdn.jsdelivr.net/npm/react/umd/react.development.js\\"</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span> <span class=\\"hljs-attr\\">src</span>=<span class=\\"hljs-string\\">\\"//cdn.jsdelivr.net/npm/react-dom/umd/react-dom.development.js\\"</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span> <span class=\\"hljs-attr\\">src</span>=<span class=\\"hljs-string\\">\\"//cdn.jsdelivr.net/npm/babel-standalone/babel.min.js\\"</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span> <span class=\\"hljs-attr\\">src</span>=<span class=\\"hljs-string\\">\\"//cdn.jsdelivr.net/npm/kpc/dist/kpc.react.js\\"</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>\\n\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span> <span class=\\"hljs-attr\\">type</span>=<span class=\\"hljs-string\\">\\"text/babel\\"</span>&gt;</span><span class=\\"javascript\\">\\n        <span class=\\"hljs-keyword\\">const</span> {Button, Message} = Kpc;\\n\\n        <span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">Demo</span> <span class=\\"hljs-keyword\\">extends</span> <span class=\\"hljs-title\\">React</span>.<span class=\\"hljs-title\\">Component</span> </span>{\\n            hello() {\\n                Message.success(<span class=\\"hljs-string\\">\'Welcome to the world of Kpc and React!\'</span>);\\n            }\\n\\n            render() {\\n                <span class=\\"hljs-keyword\\">return</span> <span class=\\"xml\\"><span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">Button</span> <span class=\\"hljs-attr\\">onClick</span>=<span class=\\"hljs-string\\">{this.hello.bind(this)}</span>&gt;</span>test<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">Button</span>&gt;</span></span>\\n            }\\n        }\\n\\n        ReactDOM.render(<span class=\\"xml\\"><span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">Demo</span> /&gt;</span>, document.getElementById(\'app\'));\\n    </span></span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">body</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">html</span>&gt;</span>\\n</code></pre>\\n<h1 id=\'header-Create%20React%20App\'>Create React App</h1><blockquote>\\n<p>示例版本为<a href=\\"mailto:`create-react-app@2.1.3\\">`create-react-app@2.1.3</a>`，不同版本可能存在些许差异</p>\\n</blockquote>\\n<h2 id=\'header-%E5%AE%89%E8%A3%85%E5%92%8C%E5%88%9D%E5%A7%8B%E5%8C%96\'>安装和初始化</h2><pre><code class=\\"hljs shell\\"><span class=\\"hljs-string\\">npx </span><span class=\\"hljs-built_in\\">create-react-app</span> <span class=\\"hljs-string\\">hello-world\\n</span><span class=\\"hljs-string\\">cd </span><span class=\\"hljs-string\\">hello-world\\n</span><span class=\\"hljs-string\\">npm </span><span class=\\"hljs-string\\">install </span><span class=\\"hljs-string\\">kpc-react </span>-S\\n</code></pre>\\n<h2 id=\'header-%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98\'>修改主题</h2><p>如果你需要修改主题，修改主题之前，我们需要弹出项目的配置文件</p>\\n<pre><code class=\\"hljs shell\\">npm <span class=\\"hljs-keyword\\">run</span><span class=\\"bash\\"> eject</span>\\n</code></pre>\\n<p>并且需要安装<code>stylus</code>和<code>stylus-loader</code></p>\\n<pre><code class=\\"hljs shell\\">npm <span class=\\"hljs-keyword\\">install</span> stylus stylus-loader -D\\n</code></pre>\\n<p>然后修改配置文件<code>config/webpack.config.js</code>，让kpc指向<code>kpc-react/@stylus</code>目录，并且加入<code>stylus-loader</code></p>\\n<pre><code class=\\"hljs diff\\">--- a/config/webpack.config.js\\n+++ b/config/webpack.config.js\\n@@ <span class=\\"hljs-number\\">-102</span>,<span class=\\"hljs-number\\">13</span> +<span class=\\"hljs-number\\">102</span>,<span class=\\"hljs-number\\">15</span> @@ <span class=\\"hljs-built_in\\">module</span>.exports = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">webpackEnv</span>) </span>{\\n         },\\n       },\\n     ].filter(<span class=\\"hljs-built_in\\">Boolean</span>);\\n-    <span class=\\"hljs-keyword\\">if</span> (preProcessor) {\\n+    <span class=\\"hljs-keyword\\">if</span> (<span class=\\"hljs-keyword\\">typeof</span> preProcessor === <span class=\\"hljs-string\\">\'string\'</span>) {\\n       loaders.push({\\n         <span class=\\"hljs-attr\\">loader</span>: <span class=\\"hljs-built_in\\">require</span>.resolve(preProcessor),\\n         <span class=\\"hljs-attr\\">options</span>: {\\n           <span class=\\"hljs-attr\\">sourceMap</span>: isEnvProduction &amp;&amp; shouldUseSourceMap,\\n         },\\n       });\\n+    } <span class=\\"hljs-keyword\\">else</span> <span class=\\"hljs-keyword\\">if</span> (<span class=\\"hljs-keyword\\">typeof</span> preProcessor === <span class=\\"hljs-string\\">\'object\'</span>) {\\n+      loaders.push(preProcessor);\\n     }\\n     <span class=\\"hljs-keyword\\">return</span> loaders;\\n   };\\n@@ <span class=\\"hljs-number\\">-265</span>,<span class=\\"hljs-number\\">7</span> +<span class=\\"hljs-number\\">267</span>,<span class=\\"hljs-number\\">7</span> @@ <span class=\\"hljs-built_in\\">module</span>.exports = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">webpackEnv</span>) </span>{\\n         <span class=\\"hljs-comment\\">// Support React Native Web</span>\\n         <span class=\\"hljs-comment\\">// https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/</span>\\n         <span class=\\"hljs-string\\">\'react-native\'</span>: <span class=\\"hljs-string\\">\'react-native-web\'</span>,\\n+        <span class=\\"hljs-string\\">\'kpc-react\'</span>: <span class=\\"hljs-string\\">\'kpc-react/@stylus\'</span>,\\n       },\\n       <span class=\\"hljs-attr\\">plugins</span>: [\\n@@ <span class=\\"hljs-number\\">-448</span>,<span class=\\"hljs-number\\">6</span> +<span class=\\"hljs-number\\">450</span>,<span class=\\"hljs-number\\">22</span> @@ <span class=\\"hljs-built_in\\">module</span>.exports = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">webpackEnv</span>) </span>{\\n                 <span class=\\"hljs-string\\">\'sass-loader\'</span>\\n               ),\\n             },\\n+            {\\n+              test: <span class=\\"hljs-regexp\\">/\\\\.styl$/</span>,\\n+              use: getStyleLoaders(\\n+                {\\n+                  importLoaders: <span class=\\"hljs-number\\">2</span>,\\n+                },\\n+                {\\n+                  loader: <span class=\\"hljs-string\\">\'stylus-loader\'</span>,\\n+                  options: {\\n+                    <span class=\\"hljs-string\\">\'include css\'</span>: <span class=\\"hljs-literal\\">true</span>,\\n+                    <span class=\\"hljs-string\\">\'resolve url\'</span>: <span class=\\"hljs-literal\\">true</span>,\\n+                    <span class=\\"hljs-string\\">\'import\'</span>: <span class=\\"hljs-string\\">\'~kpc-react/@stylus/styles/themes/ksyun/index.styl\'</span>,\\n+                  },\\n+                }\\n+              ),\\n+            },\\n             <span class=\\"hljs-comment\\">// \\"file\\" loader makes sure those assets get served by WebpackDevServer.</span>\\n             <span class=\\"hljs-comment\\">// When you `import` an asset, you get its (virtual) filename.</span>\\n             <span class=\\"hljs-comment\\">// In production, they would get copied to the `build` folder.</span>\\n</code></pre>\\n<blockquote>\\n<p>如果主题没有生效，请检查<code>resolve.alias[&#39;kpc-react&#39;]</code>是否指向了<code>kpc-react/@stylus</code></p>\\n</blockquote>\\n<h1 id=\'header-%E4%BD%BF%E7%94%A8\'>使用</h1><pre><code class=\\"hljs js\\"><span class=\\"hljs-keyword\\">import</span> <span class=\\"hljs-type\\">React</span> from <span class=\\"hljs-symbol\\">\'reac</span>t\';\\n<span class=\\"hljs-keyword\\">import</span> {<span class=\\"hljs-type\\">Button</span>, <span class=\\"hljs-type\\">Message</span>} from <span class=\\"hljs-symbol\\">\'kpc</span>-react\';\\n\\n<span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">App</span> <span class=\\"hljs-keyword\\">extends</span> <span class=\\"hljs-title\\">React</span>.<span class=\\"hljs-title\\">Component</span> </span>{\\n    hello() {\\n        <span class=\\"hljs-type\\">Message</span>.success(<span class=\\"hljs-symbol\\">\'Welcome</span> to kpc world!\');\\n    }\\n    render() {\\n        <span class=\\"hljs-keyword\\">return</span> &lt;<span class=\\"hljs-type\\">Button</span> onClick={<span class=\\"hljs-keyword\\">this</span>.hello}&gt;<span class=\\"hljs-type\\">Hello</span> <span class=\\"hljs-type\\">World</span>&lt;/<span class=\\"hljs-type\\">Button</span>&gt;\\n    }\\n}\\n</code></pre>\\n<h1 id=\'header-%E8%AF%AD%E6%B3%95%E8%AF%B4%E6%98%8E\'>语法说明</h1><p>文档中语法从<code>Vdt</code>到`React的转换规则如下：</p>\\n<div class=\\"k-table k-border\\">\\n                    <div class=\\"k-table-wrapper\\">\\n                        <div class=\\"k-thead\\">\\n                            <table>\\n                                <thead><tr>\\n<th>类别</th>\\n<th>intact写法</th>\\n<th>react写法</th>\\n<th>说明</th>\\n</tr>\\n</thead>\\n                            </table>\\n                        </div>\\n                        <div class=\\"k-tbody\\">\\n                            <table>\\n                                <tbody><tr>\\n<td>事件</td>\\n<td><code>ev-click</code></td>\\n<td><code>onClick</code></td>\\n<td>保留React事件命名风格，<code>on</code> + 事件名首字母大写</td>\\n</tr>\\n<tr>\\n<td>默认事件</td>\\n<td><code>ev-$change:value</code></td>\\n<td><code>on$change-value</code></td>\\n<td>React属性名不支持冒号(:)，改为连字符(-)即可</td>\\n</tr>\\n<tr>\\n<td>事件回调传参</td>\\n<td><code>ev-click={{ self.onClick.bind(self, data) }}</code></td>\\n<td><code>onClick={this.onClick.bind(this, data)}</code></td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>属性</td>\\n<td><code>name={{ self.get(&#39;name&#39;) }}</code></td>\\n<td><code>name={this.state.name}</code></td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>block</td>\\n<td><code>&lt;Dialog&gt;&lt;b:header&gt;&lt;div&gt;header&lt;/div&gt;&lt;/b:header&gt;&lt;/Dialog&gt;</code></td>\\n<td><code>&lt;Dialog b-header={&lt;div&gt;header&lt;/div&gt;} /&gt;</code></td>\\n<td><code>b:header</code>block对应React的属性<code>b-header</code></td>\\n</tr>\\n<tr>\\n<td>block parent()</td>\\n<td><code>&lt;b:header&gt;{{ parent() }}header&lt;/b:header&gt;</code></td>\\n<td>不支持引用父组件定义的内容</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>带参数的block</td>\\n<td><code>&lt;Transfer&gt;&lt;b:label params=&quot;data&quot;&gt;&lt;div&gt;{{ data.name }}&lt;/div&gt;&lt;/b:label&gt;&lt;/Transfer&gt;</code></td>\\n<td><code>&lt;Transfer b-label={(data) =&gt; &lt;div&gt;{data.name}&lt;/div&gt;} /&gt;</code></td>\\n<td><code>b-lablel</code>属性值为函数</td>\\n</tr>\\n<tr>\\n<td>双向绑定任意属性 <code>@since intact-vue@0.3.7</code></td>\\n<td><code>v-model:name=&quot;name&quot;</code></td>\\n<td><code>on$change-name={(c, v) =&gt; this.setState({name: v})} name={this.state.name}</code></td>\\n<td>React不支持<code>v-model</code>语法糖，改为属性和事件的方式即可</td>\\n</tr>\\n</tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div><p>另外当需要将vNode作为属性传给kpc组件时，需要使用<code>Intact.normalize()</code>方法处理vNode</p>\\n<blockquote>\\n<p>如果是作为子元素<code>children</code>，则没有必要<code>normalize</code>，因为组件默认会normalize子元素</p>\\n</blockquote>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-keyword\\">import</span> React <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'react\'</span>;\\n<span class=\\"hljs-keyword\\">import</span> Intact <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'intact\'</span>;\\n<span class=\\"hljs-keyword\\">import</span> {Badge} <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'kpc-react\'</span>;\\n\\n<span class=\\"hljs-class\\"><span class=\\"hljs-keyword\\">class</span> <span class=\\"hljs-title\\">App</span> <span class=\\"hljs-keyword\\">extends</span> <span class=\\"hljs-title\\">React</span>.<span class=\\"hljs-title\\">Component</span> </span>{\\n    render() {\\n        <span class=\\"hljs-keyword\\">return</span> (\\n            <span class=\\"hljs-comment\\">// 作为属性，需要normalize</span>\\n            <span class=\\"xml\\"><span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">Badge</span> <span class=\\"hljs-attr\\">text</span>=<span class=\\"hljs-string\\">{Intact.normalize(</span>&lt;<span class=\\"hljs-attr\\">i</span>&gt;</span>test<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">i</span>&gt;</span>)}&gt;\\n                <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">div</span>&gt;</span>test<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">div</span>&gt;</span>\\n            <span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">Badge</span>&gt;</span></span>\\n        )\\n    }\\n}\\n</code></pre>\\n<blockquote>\\n<p><code>Table</code>组件的<code>scheme</code>属性中<code>template</code>字段返回的vNode无需<code>normalize</code>，因为组件内部做了兼容，不过多次调用<code>normalize</code>也没有问题。</p>\\n</blockquote>\\n","index":127}')},"./site/dist/docs/theme sync recursive demos.*(index|demo).js$":function(s,e){function n(s){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,s.exports=n,n.id="./site/dist/docs/theme sync recursive demos.*(index|demo).js$"},"./site/dist/docs/theme/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/theme/index.json")),p=a(n("./site/dist/doc.json")),i=n("./site/dist/docs/theme sync recursive demos.*(index|demo).js$"),r=i.keys(),h=[],m=0;m<r.length;m++){var j=r[m];/demo.js$/.test(j)&&m++,h.push(i(j))}var u=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:h})},e}(l.default);e.default=u,(0,o.default)(u,"sidebar",p.default),(0,o.default)(u,"data",d.default)},"./site/dist/docs/theme/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"定制主题","order":1.3,"sidebar":"doc"},"catalogs":[],"contents":"<p>在快速开始章节我们提到过“多文件半构建版”可以支持主题定制。因为这个版本样式文件使用了源码<code>stylus</code>，所以我们可以引入主题文件在构建时生成自定义主题的css样式。</p>\\n<blockquote>\\n<p>你可以使用<a href=\\"https://kpc-theme.ksyun.com/\\">在线主题定制工具</a>来制作主题</p>\\n</blockquote>\\n<p>得益于<code>stylus-loader</code>的<code>import</code>配置，我们可以指定一个主题文件，它会在编译每一个stylus文件时引入它。</p>\\n<h1 id=\'header-%E9%85%8D%E7%BD%AEwebpack.config.js\'>配置<code>webpack.config.js</code></h1><pre><code class=\\"hljs js\\"><span class=\\"hljs-keyword\\">const</span> path = <span class=\\"hljs-built_in\\">require</span>(<span class=\\"hljs-string\\">\'path\'</span>);\\n\\n<span class=\\"hljs-comment\\">// 其他配置参见快速开始章节，这里略去</span>\\n...\\n{\\n    <span class=\\"hljs-attr\\">loader</span>: <span class=\\"hljs-string\\">\'stylus-loader\'</span>,\\n    <span class=\\"hljs-attr\\">options</span>: {\\n        <span class=\\"hljs-string\\">\'include css\'</span>: <span class=\\"hljs-literal\\">true</span>,\\n        <span class=\\"hljs-string\\">\'resolve url\'</span>: <span class=\\"hljs-literal\\">true</span>,\\n        <span class=\\"hljs-comment\\">// 引入自定义主题文件mytheme/index.styl</span>\\n        <span class=\\"hljs-keyword\\">import</span>: path.resolve(__dirname, <span class=\\"hljs-string\\">\'styles/mytheme/index.styl\'</span>)\\n    }\\n}\\n</code></pre>\\n<blockquote>\\n<p>kpc内置了一个<code>ksyun</code>的主题，我们只需要将<code>import</code>指向它即可<code>import: &#39;~kpc/styles/themes/ksyun/index.styl&#39;</code></p>\\n</blockquote>\\n<h1 id=\'header-%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98\'>定义主题</h1><h2 id=\'header-%E4%BF%AE%E6%94%B9%E5%8F%98%E9%87%8F\'>修改变量</h2><p>kpc几乎将所有的可能变更的属性都提取成了变量，组件对应的变量命名规则为：使用小写字母<code>${组件名}-{类型}-{属性名}</code>的方式命名。例如：<code>$btn-primary-color := #fff</code> <code>$dialog-width := unit(670 / 14, rem)</code>等。</p>\\n<p>通过修改<code>import</code>进来的主题文件中的变量，如上面<code>import</code>的文件<code>styles/themes/index.styl</code>，就可以自定义自己的主题。</p>\\n<p>以上面提到的<code>styles/mytheme/index.styl</code>文件为例:</p>\\n<pre><code class=\\"hljs styl\\"><span class=\\"hljs-comment\\">// 修改主色调</span>\\n<span class=\\"hljs-variable\\">$primary</span>-<span class=\\"hljs-attribute\\">color</span> := <span class=\\"hljs-number\\">#289af4</span> \\n\\n<span class=\\"hljs-comment\\">/**\\n * btn\\n */</span>\\n<span class=\\"hljs-comment\\">// 修改button组件的padding值</span>\\n<span class=\\"hljs-variable\\">$btn</span>-<span class=\\"hljs-attribute\\">padding</span> := <span class=\\"hljs-number\\">0</span> <span class=\\"hljs-number\\">30px</span>\\n</code></pre>\\n<blockquote>\\n<p>赋值符号<code>:=</code>是stylus的语法，意思是当变量被赋值过时，则忽略本次赋值。所以我们可以通过<code>import</code>提前加载一个变量定义文件，来让kpc中的默认定义失效</p>\\n</blockquote>\\n<h2 id=\'header-%E6%B7%BB%E5%8A%A0%E6%96%B0%E6%A0%B7%E5%BC%8F\'>添加新样式</h2><p>并非所有的样式修改都可以通过修改变量来实现，因为变量只能重新定义已有的样式的值，但不能新增样式。例如：<code>Button</code>组件的<code>type</code>只内置了<code>default | primary | warning | danger | none</code>几种样式，如果我们想向主题中添加一种<code>dashed</code>虚边框的按钮，则不能通过修改变量得到。也许你会想，我们可以在全局样式中，将<code>dashed</code>按钮的样式定义好，然后在需要该样式的地方添加相应类名即可。是的，这样的确能实现，但弊端是不能按需加载，因为在全局样式中，即使我不使用<code>Button</code>组件，该样式也会加载。而如果将该样式文件单独定义，然后在用到<code>Button</code>的地方，再手动加载它，又显得麻烦。</p>\\n<p>其实kpc加载每一个组件的样式时，会检测是否存在对应的主题文件，如果存在就会默认加载它。通过该机制，我们可以很方便地在主题中添加样式。</p>\\n<p>以上文提到的<code>dashed</code>按钮为例：</p>\\n<h3 id=\'header-%E6%8C%87%E5%AE%9A%24theme-dir\'>指定<code>$theme-dir</code></h3><p>首先我们需要在主题文件<code>styles/mytheme/index.styl</code>中指定<code>$theme-dir</code>变量，来告诉kpc主题文件的位置。遗憾的是，stylus中并没有类似<code>__dirname</code>的全局变量，不过我们可以通过stylus的<code>use</code>方法来实现。</p>\\n<ol>\\n<li>在<code>styles/mytheme/</code>下新建js文件<code>dirname.js</code>，定义<code>__dirname</code>方法</li>\\n</ol>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-keyword\\">const</span> path = <span class=\\"hljs-built_in\\">require</span>(<span class=\\"hljs-string\\">\'path\'</span>);\\n\\n<span class=\\"hljs-built_in\\">module</span>.exports = <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\"></span>) </span>{\\n    <span class=\\"hljs-keyword\\">return</span> <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\">style</span>) </span>{\\n        style.define(<span class=\\"hljs-string\\">\'__dirname\'</span>, <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span>(<span class=\\"hljs-params\\"></span>) </span>{\\n            <span class=\\"hljs-keyword\\">return</span> path.dirname(style.nodes.filename);\\n        });\\n    };\\n};\\n</code></pre>\\n<ol start=\\"2\\">\\n<li>在主题文件<code>styles/mytheme/index.styl</code>中<code>use</code>上述<code>dirname.js</code>，并定义<code>$theme-dir</code></li>\\n</ol>\\n<pre><code class=\\"hljs styl\\"><span class=\\"hljs-function\\"><span class=\\"hljs-title\\">use</span><span class=\\"hljs-params\\">(<span class=\\"hljs-string\\">\'./dirname.js\'</span>)</span></span>\\n<span class=\\"hljs-variable\\">$theme</span>-dir := __dirname()\\n\\n<span class=\\"hljs-comment\\">// 以下为变量定义</span>\\n...\\n</code></pre>\\n<p>此时<code>$theme-dir</code>指向<code>styles/mytheme</code>目录，kpc会在该目录下检测主题文件。</p>\\n<blockquote>\\n<p>kpc已经定义好了stylus的<code>__dirname</code>方法，你也可以直接使用<code>use(&#39;../../node_modules/kpc/styles/functions.js&#39;)</code>。具体加载路径根据你的主题文件路径而定</p>\\n</blockquote>\\n<ol start=\\"3\\">\\n<li>在<code>styles/mytheme/</code>下新建<code>button.styl</code>文件（文件名必须与组件名对应），添加<code>k-dashed</code>\\n样式定义</li>\\n</ol>\\n<pre><code class=\\"hljs styl\\"><span class=\\"hljs-selector-class\\">.k-dashed</span>\\n    <span class=\\"hljs-attribute\\">border</span> <span class=\\"hljs-number\\">1px</span> dashed <span class=\\"hljs-number\\">#eee</span> \\n</code></pre>\\n<p>此时，当我们加载<code>Button</code>组件时，上述样式也会加载进来。真正做到按需加载，并且无需额外插件支持。</p>\\n<h1 id=\'header-%E5%8F%91%E5%B8%83%E4%B8%BB%E9%A2%98\'>发布主题</h1><p>我们可以将定义好的主题文件，发布到npm供他人使用。使用者只需要改变<code>stylus-loader</code>中的<code>import</code>配置，指向你发布的主题文件<code>index.styl</code>即可。</p>\\n<p>热烈欢迎大家积极发布自己的主题来让kpc丰富多彩起来 <i class=\\"k-icon ion-android-happy\\"></i></p>\\n","index":131}')},"./site/dist/docs/vue sync recursive demos.*(index|demo).js$":function(s,e){function n(s){var e=new Error("Cannot find module '"+s+"'");throw e.code="MODULE_NOT_FOUND",e}n.keys=function(){return[]},n.resolve=n,s.exports=n,n.id="./site/dist/docs/vue sync recursive demos.*(index|demo).js$"},"./site/dist/docs/vue/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/assign")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty"));n("core-js/modules/web.dom.iterable"),n("core-js/modules/es6.array.iterator");for(var l=a(n("./site/src/components/article/index.js")),d=a(n("./site/dist/docs/vue/index.json")),p=a(n("./site/dist/doc.json")),i=n("./site/dist/docs/vue sync recursive demos.*(index|demo).js$"),r=i.keys(),h=[],m=0;m<r.length;m++){var j=r[m];/demo.js$/.test(j)&&m++,h.push(i(j))}var u=function(s){function e(){return s.apply(this,arguments)||this}return(0,c.default)(e,s),e.prototype.defaults=function(){return(0,t.default)({},s.prototype.defaults.call(this),d.default,{demos:h})},e}(l.default);e.default=u,(0,o.default)(u,"sidebar",p.default),(0,o.default)(u,"data",d.default)},"./site/dist/docs/vue/index.json":function(s){s.exports=JSON.parse('{"setting":{"title":"Vue中使用","order":1.1,"sidebar":"doc"},"catalogs":[],"contents":"<h1 id=\'header-%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\'>准备工作</h1><p>在学习使用kpc之前，假设你已经掌握了以下知识：</p>\\n<ol>\\n<li><a href=\\"https://webpack.js.org/\\">webpack</a> + <a href=\\"https://babeljs.io/\\">babel</a></li>\\n<li><a href=\\"https://cn.vuejs.org/index.html\\">Vue</a></li>\\n</ol>\\n<h1 id=\'header-%E5%AE%89%E8%A3%85\'>安装</h1><pre><code class=\\"hljs js\\">npm <span class=\\"hljs-keyword\\">install</span> kpc-vue -S\\n</code></pre>\\n<h1 id=\'header-CDN\'>CDN</h1><p>通过<a href=\\"https://cdn.jsdelivr.net/npm/kpc/dist/\\">cdn.jsdelivr.net/npm/kpc/dist/</a>可以直接引入最新版kpc，建议使用锁定版本地址，例如：<a href=\\"https://cdn.jsdelivr.net/npm/kpc@1.0.0/dist/\\">cdn.jsdelivr.net/npm/kpc@0.5.14/dist/</a></p>\\n<pre><code class=\\"hljs html\\"><span class=\\"hljs-meta\\">&lt;!DOCTYPE html&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">html</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">head</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">meta</span> <span class=\\"hljs-attr\\">charset</span>=<span class=\\"hljs-string\\">\\"utf-8\\"</span> /&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">title</span>&gt;</span>kpc-demo<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">title</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">meta</span> <span class=\\"hljs-attr\\">http-equiv</span>=<span class=\\"hljs-string\\">\\"X-UA-Compatible\\"</span> <span class=\\"hljs-attr\\">content</span>=<span class=\\"hljs-string\\">\\"IE=edge, chrome=1\\"</span> /&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">meta</span> <span class=\\"hljs-attr\\">http-equiv</span>=<span class=\\"hljs-string\\">\\"Cache-Control\\"</span> <span class=\\"hljs-attr\\">content</span>=<span class=\\"hljs-string\\">\\"no-siteapp\\"</span> /&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">meta</span> <span class=\\"hljs-attr\\">name</span>=<span class=\\"hljs-string\\">\\"viewport\\"</span> <span class=\\"hljs-attr\\">content</span>=<span class=\\"hljs-string\\">\\"initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no\\"</span> /&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">link</span> <span class=\\"hljs-attr\\">rel</span>=<span class=\\"hljs-string\\">\\"stylesheet\\"</span> <span class=\\"hljs-attr\\">type</span>=<span class=\\"hljs-string\\">\\"text/css\\"</span> <span class=\\"hljs-attr\\">href</span>=<span class=\\"hljs-string\\">\\"//cdn.jsdelivr.net/npm/kpc/dist/kpc.css\\"</span> /&gt;</span>\\n    <span class=\\"hljs-comment\\">&lt;!-- 将上述kpc.css替换成ksyun.css，可以使用ksyun主题 --&gt;</span>\\n    <span class=\\"hljs-comment\\">&lt;!-- &lt;link rel=\\"stylesheet\\" type=\\"text/css\\" href=\\"//cdn.jsdelivr.net/npm/kpc/dist/ksyun.css\\" /&gt; --&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">head</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">body</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">div</span> <span class=\\"hljs-attr\\">id</span>=<span class=\\"hljs-string\\">\\"app\\"</span>&gt;</span>\\n        <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">k-button</span> @<span class=\\"hljs-attr\\">click</span>=<span class=\\"hljs-string\\">\\"hello\\"</span>&gt;</span>Hello world<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">k-button</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">div</span>&gt;</span>\\n\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span> <span class=\\"hljs-attr\\">type</span>=<span class=\\"hljs-string\\">\\"text/javascript\\"</span> <span class=\\"hljs-attr\\">src</span>=<span class=\\"hljs-string\\">\\"//cdn.jsdelivr.net/npm/vue\\"</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span> <span class=\\"hljs-attr\\">type</span>=<span class=\\"hljs-string\\">\\"text/javascript\\"</span> <span class=\\"hljs-attr\\">src</span>=<span class=\\"hljs-string\\">\\"//cdn.jsdelivr.net/npm/kpc/dist/kpc.vue.min.js\\"</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span> <span class=\\"hljs-attr\\">type</span>=<span class=\\"hljs-string\\">\\"text/javascript\\"</span>&gt;</span><span class=\\"actionscript\\">\\n        Vue.use(Kpc);\\n        <span class=\\"hljs-keyword\\">new</span> Vue({\\n            el: <span class=\\"hljs-string\\">\'#app\'</span>,\\n            methods: {\\n                hello: <span class=\\"hljs-function\\"><span class=\\"hljs-keyword\\">function</span><span class=\\"hljs-params\\">()</span> </span>{\\n                    <span class=\\"hljs-keyword\\">this</span>.$message.success(<span class=\\"hljs-string\\">\'Welcome to kpc world!\'</span>);\\n                }\\n            }\\n        });\\n    </span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">body</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">html</span>&gt;</span>\\n</code></pre>\\n<h1 id=\'header-Vue%20CLI%203\'>Vue CLI 3</h1><p>推荐使用<code>@vue/cli@3.3.0</code>及以上的版本进行项目初始化</p>\\n<h2 id=\'header-%E5%AE%89%E8%A3%85%E5%B9%B6%E5%88%9D%E5%A7%8B%E5%8C%96\'>安装并初始化</h2><pre><code class=\\"hljs shell\\"><span class=\\"hljs-attr\\">npm</span> <span class=\\"hljs-string\\">install -g @vue/cli</span>\\n<span class=\\"hljs-attr\\">vue</span> <span class=\\"hljs-string\\">create hello-world</span>\\n<span class=\\"hljs-attr\\">cd</span> <span class=\\"hljs-string\\">hello-word</span>\\n<span class=\\"hljs-attr\\">npm</span> <span class=\\"hljs-string\\">install kpc-vue -S</span>\\n</code></pre>\\n<blockquote>\\n<p><code>@vue/cli@3.5.0</code>如果浏览器运行报: <code>Cannot assign to read only property...</code>的错误，可以在<code>babel.config.js</code>中添加<code>sourceType: &quot;unambiguous&quot;</code>解决，详见<a href=\\"https://github.com/webpack/webpack/issues/4039\\">https://github.com/webpack/webpack/issues/4039</a></p>\\n</blockquote>\\n<h2 id=\'header-%E5%BC%95%E5%85%A5%E4%B8%BB%E9%A2%98%E6%96%87%E4%BB%B6\'>引入主题文件</h2><p>如果你需要引入主题文件，需要安装<code>stylus</code>和<code>stylus-loader</code></p>\\n<h3 id=\'header-%E5%AE%89%E8%A3%85\'>安装</h3><pre><code class=\\"hljs shell\\">npm <span class=\\"hljs-keyword\\">install</span> stylus stylus-loader -D\\n</code></pre>\\n<h3 id=\'header-%E6%96%B0%E5%A2%9E%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6vue.config.js\'>新增配置文件<code>vue.config.js</code></h3><p>kpc-vue需要指向<code>kpc-vue/@stylus</code>，下面以内置的主题<code>ksyun</code>为例</p>\\n<p>在项目根目录下创建<code>vue.config.js</code>文件，内容如下：</p>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-string\\">module.exports</span> <span class=\\"hljs-string\\">=</span> <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">    configureWebpack:</span> <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">        resolve:</span> <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">            alias:</span> <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">                \'kpc-vue\':</span> <span class=\\"hljs-string\\">\'kpc-vue/@stylus\'</span><span class=\\"hljs-string\\">,</span>\\n            <span class=\\"hljs-string\\">}</span>\\n        <span class=\\"hljs-string\\">},</span>\\n<span class=\\"hljs-attr\\">        module:</span> <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">            rules:</span> <span class=\\"hljs-string\\">[</span>\\n                <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">                    test:</span> <span class=\\"hljs-string\\">/\\\\.styl$/,</span>\\n<span class=\\"hljs-attr\\">                    use:</span> <span class=\\"hljs-string\\">[</span>\\n                        <span class=\\"hljs-string\\">{</span>\\n<span class=\\"hljs-attr\\">                            loader:</span> <span class=\\"hljs-string\\">\'stylus-loader\'</span><span class=\\"hljs-string\\">,</span>\\n<span class=\\"hljs-attr\\">                            options:</span> <span class=\\"hljs-string\\">{</span>\\n                                <span class=\\"hljs-string\\">\'include css\'</span><span class=\\"hljs-string\\">:</span> <span class=\\"hljs-literal\\">true</span><span class=\\"hljs-string\\">,</span>\\n                                <span class=\\"hljs-string\\">\'resolve url\'</span><span class=\\"hljs-string\\">:</span> <span class=\\"hljs-literal\\">true</span><span class=\\"hljs-string\\">,</span>\\n<span class=\\"hljs-attr\\">                                \'import\':</span> <span class=\\"hljs-string\\">\'~kpc-vue/@stylus/styles/themes/ksyun/index.styl\'</span>\\n                            <span class=\\"hljs-string\\">}</span>\\n                        <span class=\\"hljs-string\\">}</span>\\n                    <span class=\\"hljs-string\\">]</span>\\n                <span class=\\"hljs-string\\">}</span>\\n            <span class=\\"hljs-string\\">]</span>\\n        <span class=\\"hljs-string\\">}</span>\\n    <span class=\\"hljs-string\\">}</span>\\n<span class=\\"hljs-string\\">}</span>\\n</code></pre>\\n<blockquote>\\n<p>如果主题没有生效，请检查<code>resolve.alias[&#39;kpc-vue&#39;]</code>是否指向了<code>kpc-vue/@stylus</code></p>\\n</blockquote>\\n<p>如果采用链式写法，不要直接修改<code>stylus-loader</code>配置，可以采用<code>css</code>配置项来配置，如下所示：</p>\\n<pre><code class=\\"hljs js\\">module.exports = {\\n    chainWebpack: config =&gt; {\\n        config.<span class=\\"hljs-built_in\\">resolve</span>.alias\\n            .<span class=\\"hljs-keyword\\">set</span>(<span class=\\"hljs-string\\">\'kpc-vue\'</span>, <span class=\\"hljs-string\\">\'kpc-vue/@stylus\'</span>)\\n    },\\n    <span class=\\"hljs-keyword\\">cs</span><span class=\\"hljs-variable\\">s:</span> {\\n        loaderOption<span class=\\"hljs-variable\\">s:</span> {\\n            stylu<span class=\\"hljs-variable\\">s:</span> {\\n                <span class=\\"hljs-string\\">\'include css\'</span>: true,\\n                <span class=\\"hljs-string\\">\'resolve url\'</span>: true,\\n                impor<span class=\\"hljs-variable\\">t:</span> `~kpc-vue/@stylus/styles/themes/ksyun/<span class=\\"hljs-built_in\\">index</span>.styl`\\n            }\\n        }\\n    }\\n}\\n</code></pre>\\n<blockquote>\\n<p><code>@vue/cli@3.0</code>版本如果报找不到<code>babel-types</code>的错误，可以安装<code>babel-types</code>重启项目即可</p>\\n</blockquote>\\n<h1 id=\'header-Vue%20CLI%202\'>Vue CLI 2</h1><h2 id=\'header-%E5%AE%89%E8%A3%85%E5%B9%B6%E5%88%9D%E5%A7%8B%E5%8C%96\'>安装并初始化</h2><pre><code class=\\"hljs shell\\"><span class=\\"hljs-attr\\">npm</span> <span class=\\"hljs-string\\">install -g vue-cli</span>\\n<span class=\\"hljs-attr\\">vue</span> <span class=\\"hljs-string\\">init webpack hello-world</span>\\n<span class=\\"hljs-attr\\">cd</span> <span class=\\"hljs-string\\">hello-world</span>\\n<span class=\\"hljs-attr\\">npm</span> <span class=\\"hljs-string\\">install kpc-vue -S</span>\\n</code></pre>\\n<h2 id=\'header-%E5%BC%95%E5%85%A5%E4%B8%BB%E9%A2%98%E6%96%87%E4%BB%B6\'>引入主题文件</h2><p>如果你需要引入主题文件，需要安装<code>stylus</code> <code>stylus-loader</code></p>\\n<pre><code class=\\"hljs shell\\">npm <span class=\\"hljs-keyword\\">install</span> stylus stylus-loader -D\\n</code></pre>\\n<p>修改<code>build/webpack.base.conf.js</code></p>\\n<pre><code class=\\"hljs diff\\">--- a/build/webpack<span class=\\"hljs-selector-class\\">.base</span><span class=\\"hljs-selector-class\\">.conf</span><span class=\\"hljs-selector-class\\">.js</span>\\n+++ b/build/webpack<span class=\\"hljs-selector-class\\">.base</span><span class=\\"hljs-selector-class\\">.conf</span><span class=\\"hljs-selector-class\\">.js</span>\\n@@ -<span class=\\"hljs-number\\">27</span>,<span class=\\"hljs-number\\">7</span> +<span class=\\"hljs-number\\">27</span>,<span class=\\"hljs-number\\">7</span> @@ module<span class=\\"hljs-selector-class\\">.exports</span> = {\\n     alias: {\\n       <span class=\\"hljs-string\\">\'vue$\'</span>: <span class=\\"hljs-string\\">\'vue/dist/vue.esm.js\'</span>,\\n       <span class=\\"hljs-string\\">\'@\'</span>: resolve(<span class=\\"hljs-string\\">\'src\'</span>),\\n+      <span class=\\"hljs-string\\">\'kpc-vue\'</span>: <span class=\\"hljs-string\\">\'kpc-vue/@stylus\'</span>,\\n     }\\n   },\\n</code></pre>\\n<p>修改<code>build/utils.js</code></p>\\n<pre><code class=\\"hljs diff\\">--- a<span class=\\"hljs-regexp\\">/build/</span>utils.js\\n+++ b<span class=\\"hljs-regexp\\">/build/</span>utils.js\\n@@ <span class=\\"hljs-number\\">-62</span>,<span class=\\"hljs-number\\">7</span> +<span class=\\"hljs-number\\">62</span>,<span class=\\"hljs-number\\">11</span> @@ exports.cssLoaders = function (options) {\\n<span class=\\"hljs-symbol\\">     sass:</span> generateLoaders(<span class=\\"hljs-string\\">\'sass\'</span>, { <span class=\\"hljs-string\\">indentedSyntax:</span> <span class=\\"hljs-literal\\">true</span> }),\\n<span class=\\"hljs-symbol\\">     scss:</span> generateLoaders(<span class=\\"hljs-string\\">\'sass\'</span>),\\n<span class=\\"hljs-symbol\\">     stylus:</span> generateLoaders(<span class=\\"hljs-string\\">\'stylus\'</span>),\\n-    <span class=\\"hljs-string\\">styl:</span> generateLoaders(<span class=\\"hljs-string\\">\'stylus\'</span>)\\n+    <span class=\\"hljs-string\\">styl:</span> generateLoaders(<span class=\\"hljs-string\\">\'stylus\'</span>, {\\n+      <span class=\\"hljs-string\\">\'include css\'</span>: <span class=\\"hljs-literal\\">true</span>,\\n+      <span class=\\"hljs-string\\">\'resolve url\'</span>: <span class=\\"hljs-literal\\">true</span>,\\n+      <span class=\\"hljs-string\\">\'import\'</span>: <span class=\\"hljs-string\\">\'~kpc-vue/@stylus/styles/themes/ksyun/index.styl\'</span>,\\n+    })\\n   }\\n }\\n</code></pre>\\n<h1 id=\'header-%E5%85%A8%E9%87%8F%E5%BC%95%E5%85%A5\'>全量引入</h1><p>全量引入使用vue提供的<code>use</code>方法，一次性注册所有组件</p>\\n<pre><code class=\\"hljs js\\"><span class=\\"hljs-keyword\\">import</span> Vue <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'vue\'</span>;\\n<span class=\\"hljs-keyword\\">import</span> Kpc <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'kpc-vue\'</span>;\\n\\nVue.use(Kpc);\\n</code></pre>\\n<blockquote>\\n<p>Vue不能使用<code>Switch</code>作为组件名，所以所有的组件命名为<code>KComponent</code>形式，例如：<code>KButton</code>，全量安装后，你可以在模板中使用<code>KButton</code>或者<code>k-button</code>作为元素名</p>\\n</blockquote>\\n<h1 id=\'header-%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5\'>按需引入</h1><p>按需引入只需要在用到该组件才引入，可以最大化减小打包文件的体积</p>\\n<pre><code class=\\"hljs vue\\"><span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">template</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">Button</span> @<span class=\\"hljs-attr\\">click</span>=<span class=\\"hljs-string\\">\\"hello\\"</span>&gt;</span>Hello World<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">Button</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">template</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span>&gt;</span><span class=\\"javascript\\">\\n<span class=\\"hljs-keyword\\">import</span> {Button, Message} <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'kpc-vue\'</span>;\\n\\n<span class=\\"hljs-keyword\\">export</span> <span class=\\"hljs-keyword\\">default</span> {\\n    <span class=\\"hljs-attr\\">components</span>: {\\n        Button\\n    },\\n\\n    <span class=\\"hljs-attr\\">methods</span>: {\\n        hello() {\\n            Message.success(<span class=\\"hljs-string\\">\'Welcome to kpc world!\'</span>);\\n        }\\n    }\\n}\\n</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span>\\n</code></pre>\\n<h1 id=\'header-%E8%AF%AD%E6%B3%95%E8%AF%B4%E6%98%8E\'>语法说明</h1><p>对于文档中语法从<code>Vdt</code>到<code>Vue</code>的转换规则如下：</p>\\n<div class=\\"k-table k-border\\">\\n                    <div class=\\"k-table-wrapper\\">\\n                        <div class=\\"k-thead\\">\\n                            <table>\\n                                <thead><tr>\\n<th>类别</th>\\n<th>intact写法</th>\\n<th>vue写法</th>\\n</tr>\\n</thead>\\n                            </table>\\n                        </div>\\n                        <div class=\\"k-tbody\\">\\n                            <table>\\n                                <tbody><tr>\\n<td>事件</td>\\n<td><code>ev-click</code></td>\\n<td><code>@click</code></td>\\n</tr>\\n<tr>\\n<td>事件回调传参</td>\\n<td><code>ev-click={{ self.onClick.bind(self, data) }}</code></td>\\n<td><code>@click=&quot;onClick(data)&quot;</code></td>\\n</tr>\\n<tr>\\n<td>属性</td>\\n<td><code>name={{ self.get(&#39;name&#39;) }}</code></td>\\n<td><code>:name=&quot;name&quot;</code></td>\\n</tr>\\n<tr>\\n<td>block</td>\\n<td><code>&lt;b:header&gt;header&lt;/b:header&gt;</code></td>\\n<td><code>&lt;template slot=&quot;header&quot;&gt;header&lt;/template&gt;</code></td>\\n</tr>\\n<tr>\\n<td>block parent()</td>\\n<td><code>&lt;b:header&gt;{{ parent() }}header&lt;/b:header&gt;</code></td>\\n<td>vue不支持<code>parent</code>引用父组件中定义的模板，你需要直接拷贝父组件定义的模板</td>\\n</tr>\\n<tr>\\n<td>带参数的block</td>\\n<td><code>&lt;Transfer&gt;&lt;b:label params=&quot;data&quot;&gt;&lt;div&gt;{{ data.name }}&lt;/div&gt;&lt;/b:label&gt;&lt;/Transfer&gt;</code></td>\\n<td><code>&lt;Transfer&gt;&lt;div slot=&quot;label&quot; slot-scope=&quot;data&quot;&gt;{{ data.name }}&lt;/div&gt;&lt;/Transfer&gt;</code></td>\\n</tr>\\n<tr>\\n<td>双向绑定任意属性 <code>@since intact-vue@0.3.7</code></td>\\n<td><code>v-model:name=&quot;name&quot;</code></td>\\n<td><code>:name.sync=&quot;name&quot;</code></td>\\n</tr>\\n</tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div><blockquote>\\n<p>对于属性名和事件名，KPC组件支持连字符的形式代替驼峰形式，如：</p>\\n<p><code>checkType=&quot;none&quot; =&gt; check-type=&quot;none&quot;</code></p>\\n<p><code>@$change:checkedKeys=&quot;handler&quot; =&gt; @change:checked-keys=&quot;handler&quot;</code></p>\\n</blockquote>\\n<h2 id=\'header-%E4%B8%8D%E6%94%AF%E6%8C%81%E7%9A%84%E7%89%B9%E6%80%A7\'>不支持的特性</h2><ol>\\n<li>不支持事件的.native修饰符<pre><code class=\\"hljs vue\\"> &lt;<span class=\\"hljs-selector-tag\\">Button</span> @<span class=\\"hljs-keyword\\">click</span>.<span class=\\"hljs-keyword\\">native</span>=\\"<span class=\\"hljs-keyword\\">click</span>\\"&gt;<span class=\\"hljs-keyword\\">default</span>&lt;/<span class=\\"hljs-keyword\\">Button</span>&gt;\\n</code></pre>\\n</li>\\n<li>多余的属性不会被自动添加到组件渲染的DOM上，而是被直接忽略</li>\\n<li>不支持 <a href=\\"https://vuejs.org/v2/guide/class-and-style.html#Multiple-Values\\">Multiple values</a> style<pre><code class=\\"hljs vue\\"><span class=\\"xml\\"> <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">Button</span> <span class=\\"hljs-attr\\">v-bind:style</span>=<span class=\\"hljs-string\\">\\"</span></span></span><span class=\\"hljs-template-variable\\">{ display: [\'-webkit-box\', \'-ms-flexbox\', \'flex\'] }</span><span class=\\"xml\\"><span class=\\"hljs-tag\\"><span class=\\"hljs-string\\">\\"</span>&gt;</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">Button</span>&gt;</span></span>\\n</code></pre>\\n</li>\\n<li>不要在KPC组件上直接做动画，如果要动画，可以包一层div<pre><code class=\\"hljs vue\\"> <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">transition</span> <span class=\\"hljs-attr\\">name</span>=<span class=\\"hljs-string\\">\\"fade\\"</span>&gt;</span>\\n     <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">Button</span> <span class=\\"hljs-attr\\">v-if</span>=<span class=\\"hljs-string\\">\\"show\\"</span>&gt;</span>default<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">Button</span>&gt;</span>\\n <span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">transition</span>&gt;</span>\\n</code></pre>\\n 可以包一层div<pre><code class=\\"hljs vue\\"> <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">transition</span> <span class=\\"hljs-attr\\">name</span>=<span class=\\"hljs-string\\">\\"fade\\"</span>&gt;</span>\\n     <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">div</span> <span class=\\"hljs-attr\\">v-if</span>=<span class=\\"hljs-string\\">\\"show\\"</span>&gt;</span>\\n         <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">Button</span>&gt;</span>default<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">Button</span>&gt;</span>\\n     <span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">div</span>&gt;</span>\\n <span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">transition</span>&gt;</span>\\n</code></pre>\\n</li>\\n</ol>\\n<p>另外当需要在js中使用<code>h()</code>方法创建vNode，然后作为属性传给kpc组件时，需要使用<code>Intact.normalize()</code>方法将vNode包起来</p>\\n<blockquote>\\n<p>如果是作为子元素<code>children</code>，则没有必要<code>normalize</code>，因为组件默认会normalize子元素</p>\\n</blockquote>\\n<pre><code class=\\"hljs vue\\"><span class=\\"xml\\"><span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">template</span>&gt;</span>\\n    <span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">Badge</span> <span class=\\"hljs-attr\\">:text</span>=<span class=\\"hljs-string\\">\\"text\\"</span>&gt;</span></span><span class=\\"hljs-template-variable\\">{{ children }}</span><span class=\\"xml\\"><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">Badge</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">template</span>&gt;</span>\\n<span class=\\"hljs-tag\\">&lt;<span class=\\"hljs-name\\">script</span>&gt;</span><span class=\\"javascript\\">\\n<span class=\\"hljs-keyword\\">import</span> Intact <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'intact\'</span>;\\n<span class=\\"hljs-keyword\\">import</span> {Badge} <span class=\\"hljs-keyword\\">from</span> <span class=\\"hljs-string\\">\'kpc-vue\'</span>;\\n\\n<span class=\\"hljs-keyword\\">export</span> <span class=\\"hljs-keyword\\">default</span> {\\n    <span class=\\"hljs-attr\\">components</span>: {\\n        Badge\\n    },\\n    data() {\\n        <span class=\\"hljs-keyword\\">const</span> h = <span class=\\"hljs-keyword\\">this</span>.$createElement;\\n        <span class=\\"hljs-keyword\\">return</span> {\\n            <span class=\\"hljs-comment\\">// 作为属性，需要normalize</span>\\n            text: Intact.normalize(h(<span class=\\"hljs-string\\">\'i\'</span>, <span class=\\"hljs-literal\\">null</span>, <span class=\\"hljs-string\\">\'test\'</span>)),\\n            <span class=\\"hljs-comment\\">// 作为子元素，没有必要normalize</span>\\n            children: h(<span class=\\"hljs-string\\">\'div\'</span>, <span class=\\"hljs-literal\\">null</span>, <span class=\\"hljs-string\\">\'test\'</span>)\\n        }\\n    }\\n}\\n</span><span class=\\"hljs-tag\\">&lt;/<span class=\\"hljs-name\\">script</span>&gt;</span></span>\\n</code></pre>\\n<blockquote>\\n<p><code>Table</code>组件的<code>scheme</code>属性中<code>template</code>字段返回的vNode无需<code>normalize</code>，因为组件内部做了兼容，不过多次调用<code>normalize</code>也没有问题。</p>\\n</blockquote>\\n","index":123}')},"./site/src/components/palette/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/get-own-property-descriptor")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty")),l=a(n("@babel/runtime-corejs2/helpers/applyDecoratedDescriptor")),d=a(n("./site/src/components/palette/index.vdt")),p=a(n("intact"));n("./site/src/components/palette/index.styl");var i,r,h,m,j,u=a(n("chroma-js")),g=a(n("./components/message/index.js")),f=(i=p.default.template(),j=m=function(s){function e(){return s.apply(this,arguments)||this}(0,c.default)(e,s);var n=e.prototype;return n.defaults=function(){return{primaryColor:"#0091ea",colors:[]}},n._init=function(){this._generate(),this.on("$change:primaryColor",this._generate)},n._generate=function(){for(var s=this.get("primaryColor"),e=[],n=-4;n<5;n++)e.push(this._palette(s,n));this.set({colors:e})},n._palette=function(s,e){var n=(0,u.default)(s).hsv(),a=n[0],t=n[1],c=n[2],o=t<.1?0:(t-.1)/4,l=(1-t)/4,d=(1-c)/4,p=c<=.4?0:(c-.4)/4;return e<0&&e>=-4?u.default.hsv(a+e,t+e*o,c-e*d).hex():e>0&&e<=4?u.default.hsv(a+e,t+e*l,c-e*p).hex():s},n._changeColor=function(s){var e=s.target.value.trim();/#[0-9a-f]{6}/i.test(e)?this.set("primaryColor",s.target.value):g.default.error("请输入hex格式颜色值")},e}(p.default),(0,o.default)(m,"template",d.default),r=j,(0,l.default)(r,"template",[i],(h=(h=(0,t.default)(r,"template"))?h.value:void 0,{enumerable:!0,configurable:!0,writable:!0,initializer:function(){return h}}),r),r);e.default=f},"./site/src/components/palette/index.styl":function(s,e,n){},"./site/src/components/palette/index.vdt":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=function(s,e,n,a){e||(e=Vdt),s||(s={}),n||(n={});var c=e.miss.h,o=(e.miss.hc,e.miss.hu,this&&this.widgets,e.utils),l=(o.extend,o.error),d=(o.className,o.slice,o.noop,o.map),p=o.Options,i=(p.getModel,p.setModel,o.setCheckboxModel,o.detectCheckboxChecked,o.setSelectModel,this.data),r=this;i&&i.Animate,(a||{})._super;return c("div",null,[c("ul",null,d(function(){try{return i.get("colors")}catch(s){l(s)}}.call(r),(function(s,e){return c("li",{style:function(){try{return{background:s,color:e>=4?"#fff":void 0}}catch(s){l(s)}}.call(r)},[c("div",null,function(){try{return e+1}catch(s){l(s)}}.call(r),"index"),c("div",null,function(){try{return s}catch(s){l(s)}}.call(r),"value")],"color-block")}),r),"c-clearfix"),c(t.default,{defaultValue:function(){try{return i.get("primaryColor")}catch(s){l(s)}}.call(r),placeholder:"请输入正确的颜色值",_context:r,"ev-change":function(){try{return i._changeColor}catch(s){l(s)}}.call(r)})],"palette")};var t=a(n("./components/input/index.js"))},"./site/src/pages/document/index.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/get-own-property-descriptor")),c=a(n("@babel/runtime-corejs2/regenerator"));n("core-js/modules/es6.regexp.replace"),n("regenerator-runtime/runtime");var o,l,d,p,i,r=a(n("@babel/runtime-corejs2/helpers/asyncToGenerator")),h=a(n("@babel/runtime-corejs2/core-js/object/assign")),m=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),j=a(n("@babel/runtime-corejs2/helpers/defineProperty")),u=a(n("@babel/runtime-corejs2/helpers/applyDecoratedDescriptor")),g=a(n("intact")),f=a(n("./site/src/pages/layout.js")),b=a(n("./site/src/pages/document/index.vdt"));n("./site/src/pages/document/index.styl"),n("./components/table/index.styl");var k=n("./site/dist sync recursive ^\\.\\/(components|docs)\\/.*index\\.js$"),x=(o=g.default.template(),i=p=function(s){function e(){return s.apply(this,arguments)||this}(0,m.default)(e,s);var n=e.prototype;return n.defaults=function(){return(0,h.default)({},s.prototype.defaults.call(this),{hasRead:!0,expanded:!1})},n._init=function(){var e=(0,r.default)(c.default.mark((function e(){var n,a;return c.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return s.prototype._init.call(this),n=(n=this.get("path").replace("index.html","").replace("\\","/")).slice(0,-1),this.path=n,e.next=6,k("."+n+"/index.js");case 6:a=e.sent.default,this.set({Article:a});case 8:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}(),n._create=function(){this.set("hasRead",localStorage.getItem("1.3.6")),"/docs/changelog"===this.path&&(this.set("hasRead",!0),localStorage.setItem("1.3.6",1)),this.examples=this.element.querySelectorAll(".example")},n._mount=function(){s.prototype._mount.call(this),document.title=this.get("Article.data.setting.title"),this.refs.article&&this.set("demos",this.refs.article.get("demos")),window.addEventListener("scroll",this._onScroll),window.scrollTo(0,0)},n._onScroll=function(){var s=this._findActive(this.examples,0);this.set("activeExample",s.header);var e=this.refs.tableContents.querySelectorAll(".active");(e=e[e.length-1])?this.set("borderStyle",{height:e.offsetHeight+"px",top:e.offsetTop+8+"px"}):this.set("borderStyle",void 0)},n._findActive=function(s,e){void 0===e&&(e=0);for(var n=window.pageYOffset,a=s.length-1;a>=0;a--){var t=s[a],c=t.getBoundingClientRect().top+n;if(c>e&&c-88<=n)return{header:t.id,top:c,elem:t}}return{header:"",top:0,elem:null}},n._scrollToView=function(s){var e=s.data.index,n=this.element.querySelector(".index-"+e).getBoundingClientRect().top+window.pageYOffset;window.scrollTo(0,n-87)},n._destroy=function(){window.removeEventListener("scroll",this._onScroll)},e}(f.default),(0,j.default)(p,"template",b.default),l=i,(0,u.default)(l,"template",[o],(d=(d=(0,t.default)(l,"template"))?d.value:void 0,{enumerable:!0,configurable:!0,writable:!0,initializer:function(){return d}}),l),l);e.default=x},"./site/src/pages/document/index.styl":function(s,e,n){},"./site/src/pages/document/index.vdt":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=function(s,e,n,a){e||(e=Vdt),s||(s={}),n||(n={});var d=e.miss.h,p=(e.miss.hc,e.miss.hu,this&&this.widgets||{}),i=e.utils,r=i.extend,h=i.error,m=i.className,j=i.slice,u=(i.noop,i.map),g=i.Options,f=(g.getModel,g.setModel,i.setCheckboxModel,i.detectCheckboxChecked,i.setSelectModel,this.data),b=this,k=s,x=(f&&f.Animate,(a||{})._super),y=f.get("Article"),E={},v=f.get("demos")||[];function A(s){var e=!0,n=i.map(s.value,(function(s){return s.disabled||(e=!1),function(){try{return!s.disabled}catch(s){h(s)}}.call(b)?d("li",null,d(o.default,{href:function(){try{return"/"+s.path.replace(".md","/").replace("index/","")}catch(s){h(s)}}.call(b),children:function(){try{var e,n;return(e=s.path.match(/components\/([^\/]+)/))?[(n=e[1])[0].toUpperCase()+n.substring(1),d("span",null,function(){try{return s.title}catch(s){h(s)}}.call(b))]:"更新日志"===s.title?d(l.default,{disabled:function(){try{return!!f.get("hasRead")}catch(s){h(s)}}.call(b),children:function(){try{return s.title}catch(s){h(s)}}.call(b),_context:b}):s.title}catch(s){h(s)}}.call(b),_context:b}),m(function(){try{return{active:function(){var e=f.path.slice(1);if(s.path.indexOf(e+"/")>-1||s.path.indexOf(e+".md")>-1)return E=s,!0}()}}catch(s){h(s)}}.call(b))):void 0}));if(!e)return d("div",null,[function(){try{return void 0!==s.key}catch(s){h(s)}}.call(b)?d("h5",null,function(){try{return s.key}catch(s){h(s)}}.call(b)):void 0,d("ul",null,function(){try{return n}catch(s){h(s)}}.call(b))],"catalog-section")}var w=y.sidebar,B=[];if(w)for(var F in w.undefined&&B.push({key:void 0,value:w.undefined}),w)"undefined"!==F&&B.push({key:F,value:"组件"!==F?w[F]:w[F].sort((function(s,e){return s.path>e.path?1:-1}))});return function(){var s=(0,t.default)({navIndex:"document",className:"document-page fixed-aside"},function(){try{return k}catch(s){h(s)}}.call(b));return x.call(b,s,e,function(s){var e={},n=r({},s);return(e.content=function(s){return[d("aside",null,[d("div",null,[u(function(){try{return B}catch(s){h(s)}}.call(b),(function(s,e){return d(A,{key:function(){try{return s.key}catch(s){h(s)}}.call(b),value:function(){try{return s.value}catch(s){h(s)}}.call(b),_context:b})}),b),d("div",null,null,"aside-border transition")],"aside-wrapper"),d(c.default,{icon:function(){try{return!0}catch(s){h(s)}}.call(b),children:d("i",null,null,"k-icon ion-android-menu"),_context:b,"ev-click":function(){try{return f.set.bind(f,"expanded",!f.get("expanded"))}catch(s){h(s)}}.call(b)})],m(function(){try{return{expanded:f.get("expanded")}}catch(s){h(s)}}.call(b))),d("article",null,[d("div",null,[d("div",null,function(){try{return E.title}catch(s){h(s)}}.call(b),"title"),d("div",null,["\n                    如果你发现文档有问题，请帮忙在\n                    ",d("a",{target:"_blank",href:function(){try{return"https://github.com/ksc-fe/kpc/blob/master/"+E.path}catch(s){h(s)}}.call(b)},"github"),"\n                    上修正该文档\n                "],"edit-link")],"article-head"),d(y,{ref:function(s){p.article=s},_context:b})]),function(){try{return v}catch(s){h(s)}}.call(b)?d("div",null,[d("ul",null,[function(){try{return v.length>0}catch(s){h(s)}}.call(b)?d("li",null,null,"aside-border-nav"):void 0,u(function(){try{return v}catch(s){h(s)}}.call(b),(function(s,e){return d("li",{"ev-click":function(){try{return f._scrollToView.bind(f,s)}catch(s){h(s)}}.call(b)},function(){try{return s.data.setting.title}catch(s){h(s)}}.call(b),m(function(){try{return{"c-ellipsis-dot":!0,active:f.get("activeExample")==s.data.index}}catch(s){h(s)}}.call(b)))}),b)]),function(){try{return!1}catch(s){h(s)}}.call(b)?d("div",{style:function(){try{return f.get("borderStyle")}catch(s){h(s)}}.call(b)},null,"aside-border transition"):void 0,d("div",{style:function(){try{return f.get("borderStyle")||"display:none"}catch(s){h(s)}}.call(b)},null,"aside-dot transition")],"table-of-contents",null,(function(s){p.tableContents=s})):void 0]})&&(n.content=function(n){var a=arguments;return s.content?s.content.apply(b,[function(){return e.content.apply(b,a)}].concat(j.call(a,1))):e.content.apply(b,a)}),n}.call(b,n),x)}.call(b)};var t=a(n("@babel/runtime-corejs2/core-js/object/assign"));n("core-js/modules/es6.array.sort"),n("core-js/modules/es6.regexp.match"),n("core-js/modules/es6.regexp.replace");var c=a(n("./components/button/index.js")),o=a(n("./components/link/index.js")),l=a(n("./components/badge/index.js"))},"./site/src/pages/layout.js":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=void 0;var t=a(n("@babel/runtime-corejs2/core-js/object/get-own-property-descriptor")),c=a(n("@babel/runtime-corejs2/helpers/inheritsLoose")),o=a(n("@babel/runtime-corejs2/helpers/defineProperty")),l=a(n("@babel/runtime-corejs2/helpers/applyDecoratedDescriptor"));n("core-js/modules/es6.regexp.replace");var d,p,i,r,h,m,j=a(n("intact")),u=a(n("./site/src/pages/layout.vdt"));function g(s,e){var n=document.getElementById("theme_css");n&&(n.href=n.href.replace("theme-"+e,"theme-"+s),m=s,localStorage.setItem("theme",s))}n("./site/src/pages/layout.styl"),process.browser?"kpc"!==(m=localStorage.getItem("theme")||"kpc")&&g(m,"kpc"):m="kpc";var f=(d=j.default.template(),h=r=function(s){function e(){return s.apply(this,arguments)||this}(0,c.default)(e,s);var n=e.prototype;return n.defaults=function(){return{theme:m,version:"v1.1.1"}},n._init=function(){this.on("$change:theme",(function(s,e,n){console.log(e,n),g(e,n)}))},n._mount=function(){this.border=this.element.querySelector(".border"),this._updateBorder()},n._updateBorder=function(){var s=this.element.querySelector(".active"),e=0,n=0;s&&(n=s.offsetLeft,e=s.offsetWidth),this.border.classList.add("transition"),this.border.style.width=e+"px",this.border.style.left=n+"px"},e}(j.default),(0,o.default)(r,"template",u.default),p=h,(0,l.default)(p,"template",[d],(i=(i=(0,t.default)(p,"template"))?i.value:void 0,{enumerable:!0,configurable:!0,writable:!0,initializer:function(){return i}}),p),p);e.default=f},"./site/src/pages/layout.styl":function(s,e,n){},"./site/src/pages/layout.vdt":function(s,e,n){"use strict";var a=n("@babel/runtime-corejs2/helpers/interopRequireDefault");e.__esModule=!0,e.default=function(s,e,n,a){e||(e=Vdt),s||(s={}),n||(n={});var o=e.miss.h,l=(e.miss.hc,e.miss.hu,this&&this.widgets||{}),d={},p={},i=e.utils,r=(i.extend,i.error),h=i.className,m=i.slice,j=i.noop,u=i.map,g=i.Options,f=g.getModel,b=g.setModel,k=(i.setCheckboxModel,i.detectCheckboxChecked,i.setSelectModel,this.data),x=this,y=s,E=(k&&k.Animate,(a||{})._super,[{title:"设计",href:"/docs/design/language/",index:"design"},{title:"组件",href:"/docs/getting-started/",index:"document"},{title:"Blog",href:"/docs/blogs/design/",index:"blog"}]);return o("div",null,[o("div",null,o("header",null,(d.header=function(s){return[o("div",null,[o(t.default,{className:"logo",href:"/",_context:x}),o(t.default,{className:"king",href:"/",children:"KPC",_context:x})],"king-logo"),o("div",null,[o("nav",null,[u(function(){try{return E}catch(s){r(s)}}.call(x),(function(s,e){return o(t.default,{className:h(function(){try{return{active:s.index===y.navIndex}}catch(s){r(s)}}.call(x)),href:function(){try{return""+s.href}catch(s){r(s)}}.call(x),children:function(){try{return s.title}catch(s){r(s)}}.call(x),_context:x})}),x),o("a",{href:"https://kpc-theme.ksyun.com/",target:"_blank"},"定制主题"),o("div",null,null,"border")]),o("div",null,null,"line"),function(){try{return null}catch(s){r(s)}}.call(x),o(c.Select,{inline:function(){try{return!0}catch(s){r(s)}}.call(x),container:".header-wrapper",children:[o(c.Option,{value:"kpc",children:"默认主题",_context:x}),o(c.Option,{value:"ksyun",children:"ksyun",_context:x})],_context:x,value:f(k,"theme"),"ev-$change:value":function(s,e){b(k,"theme",e,x)}})],"right")]})&&(p.header=function(s){var e=arguments;return n.header?n.header.apply(x,[function(){return d.header.apply(x,e)}].concat(m.call(e,1))):d.header.apply(x,e)})&&p.header.apply(x,[j])),h(function(){try{return{"header-wrapper":!0,"header-shadow":"index"!==y.pageIndex}}catch(s){r(s)}}.call(x)),null,(function(s){l.header=s})),o("div",null,(d.content=function(s){return null})&&(p.content=function(s){var e=arguments;return n.content?n.content.apply(x,[function(){return d.content.apply(x,e)}].concat(m.call(e,1))):d.content.apply(x,e)})&&p.content.apply(x,[j]),"content-wrapper",null,(function(s){l.wrapper=s}))],h(function(){try{var s;return(s={"main-wrapper":!0})[y.className]=y.className,s}catch(s){r(s)}}.call(x)))};var t=a(n("./components/link/index.js")),c=n("./components/select/index.js")}};