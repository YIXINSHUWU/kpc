{
    "setting": {
        "title": "异步验证",
        "order": 4
    },
    "catalogs": [],
    "contents": "<p>要完成异步验证（例如：通过后端接口判断用户名是否重复），只需要在验证规则函数中返回<code>Promise</code>即可</p>\n",
    "index": 215,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Form, FormItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/form'</span>;\n<span class=\"hljs-keyword\">import</span> {Input} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/input'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Form</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"form\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">FormItem</span> <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">\"用户名\"</span> <span class=\"hljs-attr\">model</span>=<span class=\"hljs-string\">\"userName\"</span>\n        <span class=\"hljs-attr\">rules</span>=<span class=\"hljs-string\">{{</span> {<span class=\"hljs-attr\">required:</span> <span class=\"hljs-attr\">true</span>, <span class=\"hljs-attr\">userName:</span> <span class=\"hljs-attr\">self.validateUserName</span>} }}\n    &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Input</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"userName\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">FormItem</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Form</span>&gt;</span></span></code></pre>"
        },
        {
            "language": "styl",
            "content": "<pre><code class=\"hljs styl\">@media (<span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">768px</span>)\n    <span class=\"hljs-selector-class\">.k-form-item</span>\n        <span class=\"hljs-attribute\">width</span> <span class=\"hljs-number\">100%</span>\n        <span class=\"hljs-selector-class\">.k-input</span>\n            <span class=\"hljs-attribute\">width</span> <span class=\"hljs-number\">100%</span>\n        <span class=\"hljs-selector-class\">.k-label</span>\n            <span class=\"hljs-attribute\">width</span> auto</code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">import</span> Form <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/form'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    validateUserName(value) {\n        <span class=\"hljs-comment\">// mock api</span>\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> {\n            setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n                <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">Math</span>.random() &gt; <span class=\"hljs-number\">0.5</span>) {\n                    reject({<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">`用户名 <span class=\"hljs-subst\">${value}</span> 已被占用`</span>});\n                } <span class=\"hljs-keyword\">else</span> {\n                    resolve(<span class=\"hljs-literal\">true</span>);\n                }\n            });\n        });\n    }\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Form</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"form\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">FormItem</span> <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">\"用户名\"</span> <span class=\"hljs-attr\">model</span>=<span class=\"hljs-string\">\"userName\"</span>\n            <span class=\"hljs-attr\">:rules</span>=<span class=\"hljs-string\">\"{required: true, userName: validateUserName}\"</span>\n        &gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Input</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"userName\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">FormItem</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Form</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> {Form, FormItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/form'</span>;\n<span class=\"hljs-keyword\">import</span> {Input} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/input'</span>;\n\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Form, FormItem, Input\n    },\n    data() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-string\">\"userName\"</span>: <span class=\"hljs-literal\">null</span>\n        }\n    },\n    <span class=\"hljs-attr\">methods</span>: {\n        validateUserName(value) {\n            <span class=\"hljs-comment\">// mock api</span>\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> {\n                setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n                    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">Math</span>.random() &gt; <span class=\"hljs-number\">0.5</span>) {\n                        reject({<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">`用户名 <span class=\"hljs-subst\">${value}</span> 已被占用`</span>});\n                    } <span class=\"hljs-keyword\">else</span> {\n                        resolve(<span class=\"hljs-literal\">true</span>);\n                    }\n                });\n            });\n        },\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"stylus\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"./index.styl\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> {Form, FormItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/form'</span>;\n<span class=\"hljs-keyword\">import</span> {Input} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/input'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n        <span class=\"hljs-keyword\">this</span>.state = {};\n        <span class=\"hljs-keyword\">this</span>.validateUserName = <span class=\"hljs-keyword\">this</span>.validateUserName.bind(<span class=\"hljs-keyword\">this</span>);\n    }\n\n    validateUserName(value) {\n        <span class=\"hljs-comment\">// mock api</span>\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> {\n            setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n                <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">Math</span>.random() &gt; <span class=\"hljs-number\">0.5</span>) {\n                    reject({<span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">`用户名 <span class=\"hljs-subst\">${value}</span> 已被占用`</span>});\n                } <span class=\"hljs-keyword\">else</span> {\n                    resolve(<span class=\"hljs-literal\">true</span>);\n                }\n            });\n        });\n    }\n    \n    <span class=\"hljs-comment\">// 注入_context上下文</span>\n    <span class=\"hljs-keyword\">static</span> childContextTypes = {\n        <span class=\"hljs-attr\">_context</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {}\n    }\n    \n    getChildContext() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">_context</span>: <span class=\"hljs-keyword\">this</span>\n        }\n    }\n    \n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Form</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">{i</span> =&gt;</span> this.form = i}&gt;\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">FormItem</span> <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">\"用户名\"</span> <span class=\"hljs-attr\">model</span>=<span class=\"hljs-string\">\"userName\"</span>\n                    <span class=\"hljs-attr\">rules</span>=<span class=\"hljs-string\">{{required:</span> <span class=\"hljs-attr\">true</span>, <span class=\"hljs-attr\">userName:</span> <span class=\"hljs-attr\">this.validateUserName</span>}}\n                &gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Input</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{this.state.userName}</span> <span class=\"hljs-attr\">on</span>$<span class=\"hljs-attr\">change-value</span>=<span class=\"hljs-string\">{(c,</span> <span class=\"hljs-attr\">userName</span>) =&gt;</span> this.setState({userName})} /&gt;\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">FormItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Form</span>&gt;</span>\n        )\n    }\n}</span></code></pre>"
        }
    ]
}