{
    "setting": {
        "title": "确认提示层",
        "order": 4
    },
    "catalogs": [],
    "contents": "<p>给组件添加<code>confirm</code>属性，可以展示确认提示弹层。点击“确认”和“取消”按钮分别会触发<code>ok</code>和<code>cancel</code>事件。你还可以通过<code>okText</code>和<code>cancelText</code>属性指定按钮文案</p>\n",
    "index": 225,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Tooltip <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/tooltip'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"确定删除？\"</span>\n        <span class=\"hljs-attr\">confirm</span>\n        <span class=\"hljs-attr\">theme</span>=<span class=\"hljs-string\">\"light\"</span>\n        <span class=\"hljs-attr\">trigger</span>=<span class=\"hljs-string\">\"click\"</span>\n        <span class=\"hljs-attr\">ev-ok</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.ok</span>  }}\n        <span class=\"hljs-attr\">ev-cancel</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.cancel</span> }}\n        <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"__test\"</span>\n    &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>&gt;</span>删除<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tooltip</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/message'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    ok() {\n        Message.success(<span class=\"hljs-string\">'Clicked ok!'</span>);\n    }\n\n    cancel() {\n        Message.info(<span class=\"hljs-string\">'Clicked cancel!'</span>);\n    }\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"确定删除？\"</span>\n            <span class=\"hljs-attr\">confirm</span>\n            <span class=\"hljs-attr\">theme</span>=<span class=\"hljs-string\">\"light\"</span>\n            <span class=\"hljs-attr\">trigger</span>=<span class=\"hljs-string\">\"click\"</span>\n            @<span class=\"hljs-attr\">ok</span>=<span class=\"hljs-string\">\"ok\"</span>\n            @<span class=\"hljs-attr\">cancel</span>=<span class=\"hljs-string\">\"cancel\"</span>\n            <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"__test\"</span>\n        &gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>&gt;</span>删除<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tooltip</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> Tooltip <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/tooltip'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/button'</span>;\n\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/message'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Tooltip, Button\n    },\n    <span class=\"hljs-attr\">methods</span>: {\n        ok() {\n            Message.success(<span class=\"hljs-string\">'Clicked ok!'</span>);\n        },\n        cancel() {\n            Message.info(<span class=\"hljs-string\">'Clicked cancel!'</span>);\n        },\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> Tooltip <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/tooltip'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/button'</span>;\n\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/message'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n        <span class=\"hljs-keyword\">this</span>.ok = <span class=\"hljs-keyword\">this</span>.ok.bind(<span class=\"hljs-keyword\">this</span>);\n        <span class=\"hljs-keyword\">this</span>.cancel = <span class=\"hljs-keyword\">this</span>.cancel.bind(<span class=\"hljs-keyword\">this</span>);\n    }\n\n    ok() {\n        Message.success(<span class=\"hljs-string\">'Clicked ok!'</span>);\n    }\n    \n    cancel() {\n        Message.info(<span class=\"hljs-string\">'Clicked cancel!'</span>);\n    }\n    \n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"确定删除？\"</span>\n                    <span class=\"hljs-attr\">confirm</span>\n                    <span class=\"hljs-attr\">theme</span>=<span class=\"hljs-string\">\"light\"</span>\n                    <span class=\"hljs-attr\">trigger</span>=<span class=\"hljs-string\">\"click\"</span>\n                    <span class=\"hljs-attr\">onOk</span>=<span class=\"hljs-string\">{this.ok}</span>\n                    <span class=\"hljs-attr\">onCancel</span>=<span class=\"hljs-string\">{this.cancel}</span>\n                    <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">{i</span> =&gt;</span> this.__test = i}\n                &gt;\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>&gt;</span>删除<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tooltip</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n        )\n    }\n}</code></pre>"
        },
        {
            "language": "ts",
            "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> {Component, ViewChild} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-angular/components/message'</span>;\n\n\n<span class=\"hljs-meta\">@Component</span>({\n    selector: <span class=\"hljs-string\">'app-demo'</span>,\n    template: <span class=\"hljs-string\">`\n        &lt;div&gt;\n            &lt;k-tooltip content=\"确定删除？\"\n                [confirm]=\"true\"\n                theme=\"light\"\n                trigger=\"click\"\n                (ok)=\"ok($event)\"\n                (cancel)=\"cancel($event)\"\n                #__test\n            &gt;\n                &lt;k-button&gt;删除&lt;/k-button&gt;\n            &lt;/k-tooltip&gt;\n        &lt;/div&gt;\n    `</span>,\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> AppDemoComponent {\n    <span class=\"hljs-meta\">@ViewChild</span>(<span class=\"hljs-string\">'__test'</span>, {<span class=\"hljs-keyword\">static</span>: <span class=\"hljs-literal\">false</span>}) __test;\n\n    ok() {\n        Message.success(<span class=\"hljs-string\">'Clicked ok!'</span>);\n    }\n    \n    cancel() {\n        Message.info(<span class=\"hljs-string\">'Clicked cancel!'</span>);\n    }\n}</code></pre>"
        }
    ]
}