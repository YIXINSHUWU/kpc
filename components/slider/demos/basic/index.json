{
    "setting": {
        "title": "基础用法",
        "order": 0
    },
    "catalogs": [],
    "contents": "<p>用<code>min</code>和<code>max</code>指定取值范围，<code>v-model</code>进行双向数据绑定。动态改变组件的取值范围，组件会修正<code>value</code>值不让它超出该范围</p>\n",
    "index": 36,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Slider <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/slider'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n&lt;div&gt;\n    &lt;Slider v-model=\"value1\" min={{ self.get('min') }} max={{ self.get('max') }}/&gt;\n    &lt;Slider v-model=\"value2\" min={{ 50 }} max={{ 500 }} ref=\"__test\" /&gt;\n    &lt;Button ev-click={{ self._changeRange }}&gt;Change Range Randomly&lt;/Button&gt;\n&lt;/div&gt;</code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-string\">'value1'</span>: <span class=\"hljs-number\">60</span>,\n            <span class=\"hljs-string\">'value2'</span>: <span class=\"hljs-number\">277</span>,\n            <span class=\"hljs-string\">'min'</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-string\">'max'</span>: <span class=\"hljs-number\">100</span>,\n        }\n    }\n\n    _changeRange() {\n        <span class=\"hljs-keyword\">const</span> max = <span class=\"hljs-built_in\">Math</span>.floor(<span class=\"hljs-built_in\">Math</span>.random() * <span class=\"hljs-number\">100</span>);\n        <span class=\"hljs-keyword\">const</span> min = <span class=\"hljs-built_in\">Math</span>.floor(<span class=\"hljs-built_in\">Math</span>.random() * max);\n        <span class=\"hljs-keyword\">this</span>.set({max, min});\n    }\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Slider</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"value1\"</span> <span class=\"hljs-attr\">:min</span>=<span class=\"hljs-string\">\"min\"</span> <span class=\"hljs-attr\">:max</span>=<span class=\"hljs-string\">\"max\"</span>/&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Slider</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"value2\"</span> <span class=\"hljs-attr\">:min</span>=<span class=\"hljs-string\">\"50\"</span> <span class=\"hljs-attr\">:max</span>=<span class=\"hljs-string\">\"500\"</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"__test\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">\"_changeRange\"</span>&gt;</span>Change Range Randomly<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> Slider <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/slider'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/button'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Slider, Button\n    },\n    data() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">100</span>,\n            <span class=\"hljs-string\">\"value1\"</span>: <span class=\"hljs-number\">60</span>,\n            <span class=\"hljs-string\">\"value2\"</span>: <span class=\"hljs-number\">277</span>\n        }\n    },\n    <span class=\"hljs-attr\">methods</span>: {\n        _changeRange() {\n            <span class=\"hljs-keyword\">this</span>.max = <span class=\"hljs-built_in\">Math</span>.floor(<span class=\"hljs-built_in\">Math</span>.random() * <span class=\"hljs-number\">100</span>);\n            <span class=\"hljs-keyword\">this</span>.min = <span class=\"hljs-built_in\">Math</span>.floor(<span class=\"hljs-built_in\">Math</span>.random() * <span class=\"hljs-keyword\">this</span>.max);\n        },\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> Slider <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/slider'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/button'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n        <span class=\"hljs-keyword\">this</span>.state = {\n            <span class=\"hljs-string\">\"value1\"</span>: <span class=\"hljs-number\">60</span>,\n            <span class=\"hljs-string\">\"value2\"</span>: <span class=\"hljs-number\">277</span>,\n            <span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">100</span>\n        };\n        <span class=\"hljs-keyword\">this</span>._changeRange = <span class=\"hljs-keyword\">this</span>._changeRange.bind(<span class=\"hljs-keyword\">this</span>);\n    }\n\n    _changeRange() {\n        <span class=\"hljs-keyword\">const</span> max = <span class=\"hljs-built_in\">Math</span>.floor(<span class=\"hljs-built_in\">Math</span>.random() * <span class=\"hljs-number\">100</span>);\n        <span class=\"hljs-keyword\">const</span> min = <span class=\"hljs-built_in\">Math</span>.floor(<span class=\"hljs-built_in\">Math</span>.random() * max);\n        <span class=\"hljs-keyword\">this</span>.setState({max, min});\n    }\n    \n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            &lt;div&gt;\n                &lt;Slider value={this.state.value1} on$change-value={(c, value1) =&gt; this.setState({value1})} min={this.state.min} max={this.state.max}/&gt;\n                &lt;Slider value={this.state.value2} on$change-value={(c, value2) =&gt; this.setState({value2})} min={50} max={500} ref={i =&gt; this.__test = i} /&gt;\n                &lt;Button onClick={this._changeRange}&gt;Change Range Randomly&lt;/Button&gt;\n            &lt;/div&gt;\n        )\n    }\n}</code></pre>"
        },
        {
            "language": "ts",
            "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> {Component, ViewChild} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-meta\">@Component</span>({\n    selector: <span class=\"hljs-string\">'app-demo'</span>,\n    template: <span class=\"hljs-string\">`\n        &lt;div&gt;\n            &lt;k-slider [(value)]=\"value1\" [min]=\"min\" [max]=\"max\"&gt;&lt;/k-slider&gt;\n            &lt;k-slider [(value)]=\"value2\" [min]=\"50\" [max]=\"500\" #__test&gt;&lt;/k-slider&gt;\n            &lt;k-button (click)=\"_changeRange($event)\"&gt;Change Range Randomly&lt;/k-button&gt;\n        &lt;/div&gt;\n    `</span>,\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> AppDemoComponent {\n    <span class=\"hljs-meta\">@ViewChild</span>(<span class=\"hljs-string\">'__test'</span>, {<span class=\"hljs-keyword\">static</span>: <span class=\"hljs-literal\">false</span>}) __test;\n\n    <span class=\"hljs-keyword\">private</span> min = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">private</span> max = <span class=\"hljs-number\">100</span>;\n    <span class=\"hljs-keyword\">private</span> value1 = <span class=\"hljs-number\">60</span>;\n    <span class=\"hljs-keyword\">private</span> value2 = <span class=\"hljs-number\">277</span>;\n\n    <span class=\"hljs-comment\">// helper function</span>\n    <span class=\"hljs-keyword\">set</span>(obj) { <span class=\"hljs-built_in\">Object</span>.keys(obj).forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">key</span> =&gt;</span> <span class=\"hljs-keyword\">this</span>[key] = obj[key]); }\n    \n    _changeRange() {\n        <span class=\"hljs-keyword\">const</span> max = <span class=\"hljs-built_in\">Math</span>.floor(<span class=\"hljs-built_in\">Math</span>.random() * <span class=\"hljs-number\">100</span>);\n        <span class=\"hljs-keyword\">const</span> min = <span class=\"hljs-built_in\">Math</span>.floor(<span class=\"hljs-built_in\">Math</span>.random() * max);\n        <span class=\"hljs-keyword\">this</span>.set({max, min});\n    }\n}</code></pre>"
        }
    ]
}