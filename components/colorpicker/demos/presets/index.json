{
    "setting": {
        "title": "自定义预选颜色",
        "order": 1
    },
    "catalogs": [],
    "contents": "<p>通过<code>presets</code>定义组件的预选颜色，置为空数组时<code>[]</code>则不会展示预选颜色</p>\n",
    "index": 64,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Colorpicker <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/colorpicker'</span>;\n\n&lt;div&gt;\n    &lt;Colorpicker v-model=\"color1\"\n        presets={{ ['transparent', 'red', '#d99123', 'rgb(255, 51, 33)', 'hsl(126, 54%, 46%)'] }}\n    /&gt;\n    &lt;Colorpicker v-model=\"color2\"\n        presets={{ [] }}\n    /&gt;\n&lt;/div&gt;</code></pre>"
        },
        {
            "language": "styl",
            "content": "<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-colorpicker</span>\n    <span class=\"hljs-attribute\">margin</span> <span class=\"hljs-number\">16px</span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">color1</span>: <span class=\"hljs-string\">'#36acef'</span>,\n            <span class=\"hljs-attr\">color2</span>: <span class=\"hljs-string\">'#d99123'</span>\n        }\n    }\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Colorpicker</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"color1\"</span>\n            <span class=\"hljs-attr\">:presets</span>=<span class=\"hljs-string\">\"['transparent', 'red', '#d99123', 'rgb(255, 51, 33)', 'hsl(126, 54%, 46%)']\"</span>\n        /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Colorpicker</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"color2\"</span>\n            <span class=\"hljs-attr\">:presets</span>=<span class=\"hljs-string\">\"[]\"</span>\n        /&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> Colorpicker <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/colorpicker'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Colorpicker\n    },\n    data() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-string\">\"color1\"</span>: <span class=\"hljs-string\">\"#36acef\"</span>,\n            <span class=\"hljs-string\">\"color2\"</span>: <span class=\"hljs-string\">\"#d99123\"</span>\n        }\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"stylus\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"./index.styl\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> Colorpicker <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/colorpicker'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n        <span class=\"hljs-keyword\">this</span>.state = {\n            <span class=\"hljs-string\">\"color1\"</span>: <span class=\"hljs-string\">\"#36acef\"</span>,\n            <span class=\"hljs-string\">\"color2\"</span>: <span class=\"hljs-string\">\"#d99123\"</span>\n        };\n    }\n\n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            &lt;div&gt;\n                &lt;Colorpicker value={this.state.color1}\n                    on$change-value={(c, color1) =&gt; this.setState({color1})}\n                    presets={['transparent', 'red', '#d99123', 'rgb(255, 51, 33)', 'hsl(126, 54%, 46%)']}\n                /&gt;\n                &lt;Colorpicker value={this.state.color2}\n                    on$change-value={(c, color2) =&gt; this.setState({color2})}\n                    presets={[]}\n                /&gt;\n            &lt;/div&gt;\n        )\n    }\n}</code></pre>"
        },
        {
            "language": "ts",
            "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> {Component} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-meta\">@Component</span>({\n    selector: <span class=\"hljs-string\">'app-demo'</span>,\n    template: <span class=\"hljs-string\">`\n        &lt;div&gt;\n            &lt;k-colorpicker [(value)]=\"color1\"\n                [presets]=\"['transparent', 'red', '#d99123', 'rgb(255, 51, 33)', 'hsl(126, 54%, 46%)']\"\n            &gt;&lt;/k-colorpicker&gt;\n            &lt;k-colorpicker [(value)]=\"color2\"\n                [presets]=\"[]\"\n            &gt;&lt;/k-colorpicker&gt;\n        &lt;/div&gt;\n    `</span>,\n    styleUrls: [<span class=\"hljs-string\">'./index.styl'</span>],\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> AppDemoComponent {\n    <span class=\"hljs-keyword\">private</span> color1 = <span class=\"hljs-string\">\"#36acef\"</span>;\n    <span class=\"hljs-keyword\">private</span> color2 = <span class=\"hljs-string\">\"#d99123\"</span>;\n}</code></pre>"
        }
    ]
}