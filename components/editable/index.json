{
    "setting": {
        "title": "可编辑文本",
        "category": "组件",
        "order": 99,
        "sidebar": "doc"
    },
    "catalogs": [],
    "contents": "<blockquote>\n<p>如果你不是通过<code>v-model</code>指令进行数据双向绑定，而是通过绑定<code>change</code>事件去修改的引用数据，则你需要在修改数据后，手动触发更新<code>this.update()</code>，这样才能传递新的<code>children</code>子元素给组件去渲染。</p>\n<p><code>vue</code>因为所有数据修改都会触发更新，所以无需手动触发更新</p>\n</blockquote>\n<h1 id='header-%E5%B1%9E%E6%80%A7'>属性</h1><div class=\"k-table k-border\">\n                    <div class=\"k-table-wrapper\">\n                        <div class=\"k-thead\">\n                            <table>\n                                <thead><tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n                            </table>\n                        </div>\n                        <div class=\"k-tbody\">\n                            <table>\n                                <tbody><tr>\n<td>editing</td>\n<td>是否为编辑状态</td>\n<td><code>Boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>value</td>\n<td>编辑的内容，使用<code>v-model</code>进行双向绑定</td>\n<td><code>String</code></td>\n<td><code>undefined</code></td>\n</tr>\n<tr>\n<td>required</td>\n<td>是否规定不能为空</td>\n<td><code>Boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>validate</td>\n<td>验证规则，可以为函数/正则/正则字符串，若为字符串将转为正则表达式；函数则会传入当前编辑框的值来调用函数验证，返回<code>true</code>则验证通过，否则验证失败</td>\n<td><code>Function</code> &#124; <code>RegExp</code> &#124; <code>String</code></td>\n<td><code>undefined</code></td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否禁用编辑</td>\n<td><code>Boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>tip</td>\n<td>编辑按钮提示文案</td>\n<td><code>String</code></td>\n<td><code>&quot;编辑&quot;</code></td>\n</tr>\n<tr>\n<td>trim</td>\n<td>是否去掉前后空白字符</td>\n<td><code>Boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>invalid</td>\n<td>是否为验证失败状态</td>\n<td><code>Boolean</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div><h1 id='header-%E4%BA%8B%E4%BB%B6'>事件</h1><div class=\"k-table k-border\">\n                    <div class=\"k-table-wrapper\">\n                        <div class=\"k-thead\">\n                            <table>\n                                <thead><tr>\n<th>事件名</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n                            </table>\n                        </div>\n                        <div class=\"k-tbody\">\n                            <table>\n                                <tbody><tr>\n<td>error</td>\n<td>验证失败时触发</td>\n<td>1. 当前组件实例 <br /> 2. 当前输入的值</td>\n</tr>\n<tr>\n<td>change</td>\n<td>当值改变时触发，与<code>$change:value</code>不同的是，该事件只会在用户输入导致变更时触发</td>\n<td><code>Editable, newValue, oldValue</code></td>\n</tr>\n</tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>",
    "index": 302
}