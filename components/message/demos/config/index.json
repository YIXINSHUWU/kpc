{
    "setting": {
        "title": "隐藏Icon或关闭按钮",
        "order": 1.1
    },
    "catalogs": [],
    "contents": "<p>静态方法还可以使用对象作为参数，对象格式见API说明，通过该方式，我们可以做到隐藏关闭按钮或者隐藏前面的<code>Icon</code></p>\n",
    "index": 117,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {ButtonGroup, Button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">v-for</span>=<span class=\"hljs-string\">{{</span> ['<span class=\"hljs-attr\">info</span>', '<span class=\"hljs-attr\">error</span>', '<span class=\"hljs-attr\">warning</span>', '<span class=\"hljs-attr\">success</span>'] }}\n        <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.showMessage.bind</span>(<span class=\"hljs-attr\">self</span>, <span class=\"hljs-attr\">value</span>) }}\n    &gt;</span>{{ value }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span></span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/message'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    showMessage(type) {\n        Message[type]({\n            <span class=\"hljs-attr\">content</span>: type,\n            <span class=\"hljs-attr\">duration</span>: <span class=\"hljs-number\">3000</span>,\n            <span class=\"hljs-attr\">type</span>: type,\n            <span class=\"hljs-attr\">closable</span>: <span class=\"hljs-literal\">false</span>,\n            <span class=\"hljs-attr\">hideIcon</span>: <span class=\"hljs-literal\">true</span>,\n        });\n    }\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">v-for</span>=<span class=\"hljs-string\">\"(value, key) in ['info', 'error', 'warning', 'success']\"</span>\n            @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">\"showMessage(value)\"</span>\n        &gt;</span>{{ value }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> {ButtonGroup, Button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/message'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        ButtonGroup, Button\n    },\n    <span class=\"hljs-attr\">methods</span>: {\n        showMessage(type) {\n            Message[type]({\n                <span class=\"hljs-attr\">content</span>: type,\n                <span class=\"hljs-attr\">duration</span>: <span class=\"hljs-number\">3000</span>,\n                <span class=\"hljs-attr\">type</span>: type,\n                <span class=\"hljs-attr\">closable</span>: <span class=\"hljs-literal\">false</span>,\n                <span class=\"hljs-attr\">hideIcon</span>: <span class=\"hljs-literal\">true</span>,\n            });\n        },\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> {ButtonGroup, Button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/message'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n        <span class=\"hljs-keyword\">this</span>.showMessage = <span class=\"hljs-keyword\">this</span>.showMessage.bind(<span class=\"hljs-keyword\">this</span>);\n    }\n\n    showMessage(type) {\n        Message[type]({\n            <span class=\"hljs-attr\">content</span>: type,\n            <span class=\"hljs-attr\">duration</span>: <span class=\"hljs-number\">3000</span>,\n            <span class=\"hljs-attr\">type</span>: type,\n            <span class=\"hljs-attr\">closable</span>: <span class=\"hljs-literal\">false</span>,\n            <span class=\"hljs-attr\">hideIcon</span>: <span class=\"hljs-literal\">true</span>,\n        });\n    }\n    \n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n                {['info', 'error', 'warning', 'success'].map((value, key) =&gt; {\n                    return (\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>\n                            <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.showMessage.bind(this,</span> <span class=\"hljs-attr\">value</span>)}\n                        &gt;</span>{value}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n                    )\n                })}\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span></span>\n        )\n    }\n}</code></pre>"
        },
        {
            "language": "ts",
            "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> {Component} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-angular/components/message'</span>;\n\n\n<span class=\"hljs-meta\">@Component</span>({\n    selector: <span class=\"hljs-string\">'app-demo'</span>,\n    template: <span class=\"hljs-string\">`\n        &lt;k-button-group&gt;\n            &lt;k-button *ngFor=\"let value of ['info', 'error', 'warning', 'success']; index as key\"\n                (click)=\"showMessage(value)\"\n            &gt;{{ value }}&lt;/k-button&gt;\n        &lt;/k-button-group&gt;\n    `</span>,\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> AppDemoComponent {\n    showMessage(<span class=\"hljs-keyword\">type</span>) {\n        Message[<span class=\"hljs-keyword\">type</span>]({\n            content: <span class=\"hljs-keyword\">type</span>,\n            duration: <span class=\"hljs-number\">3000</span>,\n            <span class=\"hljs-keyword\">type</span>: <span class=\"hljs-keyword\">type</span>,\n            closable: <span class=\"hljs-literal\">false</span>,\n            hideIcon: <span class=\"hljs-literal\">true</span>,\n        });\n    }\n}</code></pre>"
        }
    ]
}