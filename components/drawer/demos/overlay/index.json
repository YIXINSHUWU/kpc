{
    "setting": {
        "title": "遮罩层",
        "order": 0.2
    },
    "catalogs": [],
    "contents": "<p>添加<code>overlay</code>属性，false则不展示遮罩层，true展示遮罩层</p>\n",
    "index": 59,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Drawer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/drawer'</span>;\n<span class=\"hljs-keyword\">import</span> {Button, ButtonGroup} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.set.bind</span>(<span class=\"hljs-attr\">self</span>, '<span class=\"hljs-attr\">noOverlay</span>', <span class=\"hljs-attr\">true</span>) }}\n        <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>\n    &gt;</span>Show Drawer Without Overlay<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Drawer</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"noOverlay\"</span> \n        <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"Drawer Title\"</span>\n        <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"__demoOne\"</span>\n        <span class=\"hljs-attr\">overlay</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">false</span> }}\n    &gt;</span>\n        Drawer Without Overlay\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Drawer</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">\"set('noOverlay', true)\"</span>\n            <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>\n        &gt;</span>Show Drawer Without Overlay<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Drawer</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"noOverlay\"</span> \n            <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"Drawer Title\"</span>\n            <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"__demoOne\"</span>\n            <span class=\"hljs-attr\">:overlay</span>=<span class=\"hljs-string\">\"false\"</span>\n        &gt;</span>\n            Drawer Without Overlay\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Drawer</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> Drawer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/drawer'</span>;\n<span class=\"hljs-keyword\">import</span> {Button, ButtonGroup} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Drawer, Button, ButtonGroup\n    },\n    data() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-string\">\"noOverlay\"</span>: <span class=\"hljs-literal\">null</span>\n        }\n    },\n    <span class=\"hljs-attr\">methods</span>: {\n        <span class=\"hljs-keyword\">set</span>(key, value) { <span class=\"hljs-keyword\">this</span>[key] = value },\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> Drawer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/drawer'</span>;\n<span class=\"hljs-keyword\">import</span> {Button, ButtonGroup} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n        <span class=\"hljs-keyword\">this</span>.state = {};\n        <span class=\"hljs-keyword\">this</span>.set = <span class=\"hljs-keyword\">this</span>.set.bind(<span class=\"hljs-keyword\">this</span>);\n    }\n\n    <span class=\"hljs-keyword\">set</span>(key, value) { <span class=\"hljs-keyword\">this</span>.setState({[key]: value}); }\n    \n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.set.bind(this,</span> '<span class=\"hljs-attr\">noOverlay</span>', <span class=\"hljs-attr\">true</span>)}\n                    <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>\n                &gt;</span>Show Drawer Without Overlay<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Drawer</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{this.state.noOverlay}</span>\n                    <span class=\"hljs-attr\">on</span>$<span class=\"hljs-attr\">change-value</span>=<span class=\"hljs-string\">{(c,</span> <span class=\"hljs-attr\">noOverlay</span>) =&gt;</span> this.setState({noOverlay})} \n                    title=\"Drawer Title\"\n                    ref={i =&gt; this.__demoOne = i}\n                    overlay={false}\n                &gt;\n                    Drawer Without Overlay\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Drawer</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n        )\n    }\n}</code></pre>"
        },
        {
            "language": "ts",
            "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> {Component, ViewChild} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-meta\">@Component</span>({\n    selector: <span class=\"hljs-string\">'app-demo'</span>,\n    template: <span class=\"hljs-string\">`\n        &lt;div&gt;\n            &lt;k-button (click)=\"set('noOverlay', true)\"\n                type=\"primary\"\n            &gt;Show Drawer Without Overlay&lt;/k-button&gt;\n            &lt;k-drawer [(value)]=\"noOverlay\" \n                title=\"Drawer Title\"\n                #__demoOne\n                [overlay]=\"false\"\n            &gt;\n                Drawer Without Overlay\n            &lt;/k-drawer&gt;\n        &lt;/div&gt;\n    `</span>,\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> AppDemoComponent {\n    <span class=\"hljs-meta\">@ViewChild</span>(<span class=\"hljs-string\">'__demoOne'</span>, {<span class=\"hljs-keyword\">static</span>: <span class=\"hljs-literal\">false</span>}) __demoOne;\n\n    <span class=\"hljs-keyword\">private</span> noOverlay;\n\n    <span class=\"hljs-comment\">// helper function</span>\n    <span class=\"hljs-keyword\">set</span>(key, value) { <span class=\"hljs-keyword\">this</span>[key] = value; }\n}</code></pre>"
        }
    ]
}