{
    "setting": {
        "title": "基础用法",
        "order": 0
    },
    "catalogs": [],
    "contents": "<p>使用<code>Tooltip</code>包裹需要展示提示的元素，使用<code>content</code>属性指定提示文本即可，组件默认为深色主题<code>dark</code>，你可以通过<code>theme</code>指定浅色主题<code>light</code>，通过<code>disabled</code>属性可以禁用提示</p>\n<blockquote>\n<p>由于<code>Tooltip</code>是一个宏函数，Intact下，会返回两个元素，所以不要当做模板的顶级元素，因为Intact模板只能返回一个元素，此时应该用一个元素将它包起来</p>\n</blockquote>\n<blockquote>\n<p><code>@since 1.0.0</code> <code>Tooltip</code>在<code>Vue/React</code>下渲染不会被元素包裹，这可能会影响你之前项目中定义的样式，如需渲染包裹元素，请做如下配置</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> {configure} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/utils'</span>;\n\n<span class=\"hljs-comment\">// 该配置全局生效</span>\nconfigure({useWrapper: <span class=\"hljs-keyword\">true</span>});\n</code></pre>\n</blockquote>\n",
    "index": 35,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Tooltip <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/tooltip'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"hello\"</span>&gt;</span>\n        hover the text\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tooltip</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span>&gt;</span>\n        don't show anything if content is empty \n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tooltip</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"hello\"</span> <span class=\"hljs-attr\">theme</span>=<span class=\"hljs-string\">\"light\"</span>&gt;</span>\n        light theme \n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tooltip</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"hello\"</span> <span class=\"hljs-attr\">disabled</span>&gt;</span>\n        disabled\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tooltip</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"hello\"</span>&gt;</span>\n            hover the text\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tooltip</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span>&gt;</span>\n            don't show anything if content is empty \n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tooltip</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"hello\"</span> <span class=\"hljs-attr\">theme</span>=<span class=\"hljs-string\">\"light\"</span>&gt;</span>\n            light theme \n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tooltip</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"hello\"</span> <span class=\"hljs-attr\">disabled</span>&gt;</span>\n            disabled\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tooltip</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> Tooltip <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/tooltip'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Tooltip\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> Tooltip <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/tooltip'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"hello\"</span>&gt;</span>\n                    hover the text\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tooltip</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span>&gt;</span>\n                    don't show anything if content is empty \n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tooltip</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"hello\"</span> <span class=\"hljs-attr\">theme</span>=<span class=\"hljs-string\">\"light\"</span>&gt;</span>\n                    light theme \n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tooltip</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"hello\"</span> <span class=\"hljs-attr\">disabled</span>&gt;</span>\n                    disabled\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Tooltip</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n        )\n    }\n}</code></pre>"
        },
        {
            "language": "ts",
            "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> {Component} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-meta\">@Component</span>({\n    selector: <span class=\"hljs-string\">'app-demo'</span>,\n    template: <span class=\"hljs-string\">`\n        &lt;div&gt;\n            &lt;k-tooltip content=\"hello\"&gt;\n                hover the text\n            &lt;/k-tooltip&gt;\n            &lt;br /&gt;&lt;br /&gt;\n            &lt;k-tooltip&gt;\n                don't show anything if content is empty \n            &lt;/k-tooltip&gt;\n            &lt;br /&gt;&lt;br /&gt;\n            &lt;k-tooltip content=\"hello\" theme=\"light\"&gt;\n                light theme \n            &lt;/k-tooltip&gt;\n            &lt;br /&gt;&lt;br /&gt;\n            &lt;k-tooltip content=\"hello\" [disabled]=\"true\"&gt;\n                disabled\n            &lt;/k-tooltip&gt;\n        &lt;/div&gt;\n    `</span>,\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> AppDemoComponent { }</code></pre>"
        }
    ]
}