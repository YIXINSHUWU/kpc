{
    "setting": {
        "title": "二次确认关闭",
        "order": 7
    },
    "catalogs": [],
    "contents": "<p>如果你想在用户强行关闭弹窗（点击“关闭”按钮，点击遮罩层，按ESC键）提示用户进行二次确认，可以通过<code>terminate</code>属性来自定义处理逻辑，他们会在上述行为发生时调用。另外，如果你想在用户点击“取消”按钮时，也进行相同的操作，则还可以同时指定<code>cancel</code>属性为同一函数</p>\n",
    "index": 266,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n<span class=\"hljs-keyword\">import</span> Dialog <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dialog'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.onClick</span> }} <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>Show Dialog<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dialog</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"show\"</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"Dialog Title\"</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"__demo\"</span>\n        <span class=\"hljs-attr\">terminate</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self._terminate</span> }}\n        <span class=\"hljs-attr\">cancel</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self._terminate</span> }}\n    &gt;</span>\n        Dialog Body \n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dialog</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">import</span> Dialog <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dialog'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    onClick() {\n        <span class=\"hljs-keyword\">this</span>.set(<span class=\"hljs-string\">'show'</span>, <span class=\"hljs-literal\">true</span>);\n    }\n\n    _terminate() {\n        Dialog.confirm({\n            <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">'Are you sure you want to close the dialog?'</span>\n        }).then(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n            <span class=\"hljs-keyword\">this</span>.set(<span class=\"hljs-string\">'show'</span>, <span class=\"hljs-literal\">false</span>);\n        }, () =&gt; {});\n    }\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">\"onClick\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>Show Dialog<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dialog</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"show\"</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"Dialog Title\"</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"__demo\"</span>\n            <span class=\"hljs-attr\">:terminate</span>=<span class=\"hljs-string\">\"_terminate\"</span>\n            <span class=\"hljs-attr\">:cancel</span>=<span class=\"hljs-string\">\"_terminate\"</span>\n        &gt;</span>\n            Dialog Body \n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dialog</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n<span class=\"hljs-keyword\">import</span> Dialog <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dialog'</span>;\n\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Button, Dialog\n    },\n    data() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-string\">\"show\"</span>: <span class=\"hljs-literal\">null</span>\n        }\n    },\n    <span class=\"hljs-attr\">methods</span>: {\n        onClick() {\n            <span class=\"hljs-keyword\">this</span>.show = <span class=\"hljs-literal\">true</span>;\n        },\n        _terminate() {\n            Dialog.confirm({\n                <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">'Are you sure you want to close the dialog?'</span>\n            }).then(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n                <span class=\"hljs-keyword\">this</span>.show = <span class=\"hljs-literal\">false</span>;\n            }, () =&gt; {});\n        },\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n<span class=\"hljs-keyword\">import</span> Dialog <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dialog'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n        <span class=\"hljs-keyword\">this</span>.state = {};\n        <span class=\"hljs-keyword\">this</span>.onClick = <span class=\"hljs-keyword\">this</span>.onClick.bind(<span class=\"hljs-keyword\">this</span>);\n        <span class=\"hljs-keyword\">this</span>._terminate = <span class=\"hljs-keyword\">this</span>._terminate.bind(<span class=\"hljs-keyword\">this</span>);\n    }\n\n    onClick() {\n        <span class=\"hljs-keyword\">this</span>.setState({<span class=\"hljs-attr\">show</span>: <span class=\"hljs-literal\">true</span>});\n    }\n    \n    _terminate() {\n        Dialog.confirm({\n            <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">'Are you sure you want to close the dialog?'</span>\n        }).then(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n            <span class=\"hljs-keyword\">this</span>.setState({<span class=\"hljs-attr\">show</span>: <span class=\"hljs-literal\">false</span>});\n        }, () =&gt; {});\n    }\n    \n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.onClick}</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>Show Dialog<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dialog</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{this.state.show}</span> <span class=\"hljs-attr\">on</span>$<span class=\"hljs-attr\">change-value</span>=<span class=\"hljs-string\">{(c,</span> <span class=\"hljs-attr\">show</span>) =&gt;</span> this.setState({show})} title=\"Dialog Title\" ref={i =&gt; this.__demo = i}\n                    terminate={this._terminate}\n                    cancel={this._terminate}\n                &gt;\n                    Dialog Body \n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dialog</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n        )\n    }\n}</code></pre>"
        },
        {
            "language": "ts",
            "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> {Component, ViewChild} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">import</span> Dialog <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-angular/components/dialog'</span>;\n\n\n<span class=\"hljs-meta\">@Component</span>({\n    selector: <span class=\"hljs-string\">'app-demo'</span>,\n    template: <span class=\"hljs-string\">`\n        &lt;div&gt;\n            &lt;k-button (click)=\"onClick($event)\" type=\"primary\"&gt;Show Dialog&lt;/k-button&gt;\n            &lt;k-dialog [(value)]=\"show\" title=\"Dialog Title\" #__demo\n                [terminate]=\"_terminate\"\n                [cancel]=\"_terminate\"\n            &gt;\n                Dialog Body \n            &lt;/k-dialog&gt;\n        &lt;/div&gt;\n    `</span>,\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> AppDemoComponent {\n    <span class=\"hljs-meta\">@ViewChild</span>(<span class=\"hljs-string\">'__demo'</span>, {<span class=\"hljs-keyword\">static</span>: <span class=\"hljs-literal\">false</span>}) __demo;\n\n    <span class=\"hljs-keyword\">private</span> show;\n\n    onClick() {\n        <span class=\"hljs-keyword\">this</span>.show = <span class=\"hljs-literal\">true</span>;\n    }\n    \n    _terminate = <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n        Dialog.confirm({\n            content: <span class=\"hljs-string\">'Are you sure you want to close the dialog?'</span>\n        }).then(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n            <span class=\"hljs-keyword\">this</span>.show = <span class=\"hljs-literal\">false</span>;\n        }, <span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {});\n    }\n}</code></pre>"
        }
    ]
}