{
    "setting": {
        "title": "过滤",
        "order": 5
    },
    "catalogs": [],
    "contents": "<p>给<code>Tree</code>指定<code>filter</code>函数，即可实现节点过滤功能，该函数返回<code>false</code>则表示过滤掉该项。你需要给<code>data</code>的每一项添加全局唯一的<code>key</code>否则过滤时，会因为每次更新<code>key</code>不同而闪动</p>\n",
    "index": 234,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Tree <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/tree'</span>;\n<span class=\"hljs-keyword\">import</span> Input <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/input'</span>;\n\n&lt;div&gt;\n    &lt;Input v-model=\"keywords\" placeholder=\"Please enter keywords to filter node.\"/&gt;\n    &lt;Tree \n        data={{ [\n            {\n                label: 'First floor-1',\n                key: '1',\n                children: [\n                    {\n                        label: 'Second floor-1.1',\n                        key: '1-1',\n                        children: [\n                            {\n                                label: 'Third floor-1.1.1',\n                                key: '1-1-1'\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                label: 'First floor-2',\n                key: '2',\n                children: [\n                    {\n                        label: 'Second floor-2.1',\n                        key: '2-1',\n                        children: [\n                            {\n                                label: 'Third floor-2.1.1',\n                                key: '2-1-1' \n                            },\n                            {\n                                label: 'Third floor-2.1.2',\n                                key: '2-1-2'\n                            }\n                        ]\n                    },\n                    {\n                        label: 'Second floor-2.2',\n                        disabled: true,\n                        key: '2-2',\n                        children: [\n                            {\n                                label: 'Third floor-2.2.1',\n                                key: '2-2-1'\n                            }\n                        ]\n                    }\n                ]\n            }\n        ] }}\n        v-model:expandedKeys=\"expandedKeys\"\n        filter={{ self._filter }}\n    /&gt;\n&lt;/div&gt;</code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">expandedKeys</span>: [<span class=\"hljs-string\">'2'</span>, <span class=\"hljs-string\">'2-1'</span>],\n        };\n    }\n\n    _filter(data) {\n        <span class=\"hljs-keyword\">const</span> keywords = <span class=\"hljs-keyword\">this</span>.get(<span class=\"hljs-string\">'keywords'</span>);\n        <span class=\"hljs-keyword\">if</span> (!keywords) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n        <span class=\"hljs-keyword\">return</span> data.label.includes(keywords);\n    }\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Input</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"keywords\"</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"Please enter keywords to filter node.\"</span>/&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tree</span> \n            <span class=\"hljs-attr\">:data</span>=<span class=\"hljs-string\">\"[\n                {\n                    label: 'First floor-1',\n                    key: '1',\n                    children: [\n                        {\n                            label: 'Second floor-1.1',\n                            key: '1-1',\n                            children: [\n                                {\n                                    label: 'Third floor-1.1.1',\n                                    key: '1-1-1'\n                                }\n                            ]\n                        }\n                    ]\n                },\n                {\n                    label: 'First floor-2',\n                    key: '2',\n                    children: [\n                        {\n                            label: 'Second floor-2.1',\n                            key: '2-1',\n                            children: [\n                                {\n                                    label: 'Third floor-2.1.1',\n                                    key: '2-1-1' \n                                },\n                                {\n                                    label: 'Third floor-2.1.2',\n                                    key: '2-1-2'\n                                }\n                            ]\n                        },\n                        {\n                            label: 'Second floor-2.2',\n                            disabled: true,\n                            key: '2-2',\n                            children: [\n                                {\n                                    label: 'Third floor-2.2.1',\n                                    key: '2-2-1'\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\"</span>\n            <span class=\"hljs-attr\">:expandedKeys.sync</span>=<span class=\"hljs-string\">\"expandedKeys\"</span>\n            <span class=\"hljs-attr\">:filter</span>=<span class=\"hljs-string\">\"_filter\"</span>\n        /&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> Tree <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/tree'</span>;\n<span class=\"hljs-keyword\">import</span> Input <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/input'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Tree, Input\n    },\n    data() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-string\">\"keywords\"</span>: <span class=\"hljs-literal\">null</span>,\n            <span class=\"hljs-string\">\"expandedKeys\"</span>: [\n                <span class=\"hljs-string\">\"2\"</span>,\n                <span class=\"hljs-string\">\"2-1\"</span>\n            ]\n        }\n    },\n    <span class=\"hljs-attr\">methods</span>: {\n        _filter(data) {\n            <span class=\"hljs-keyword\">const</span> keywords = <span class=\"hljs-keyword\">this</span>.keywords;\n            <span class=\"hljs-keyword\">if</span> (!keywords) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n            <span class=\"hljs-keyword\">return</span> data.label.includes(keywords);\n        },\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> Tree <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/tree'</span>;\n<span class=\"hljs-keyword\">import</span> Input <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/input'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n        <span class=\"hljs-keyword\">this</span>.state = {\n            <span class=\"hljs-string\">\"expandedKeys\"</span>: [\n                <span class=\"hljs-string\">\"2\"</span>,\n                <span class=\"hljs-string\">\"2-1\"</span>\n            ]\n        };\n        <span class=\"hljs-keyword\">this</span>._filter = <span class=\"hljs-keyword\">this</span>._filter.bind(<span class=\"hljs-keyword\">this</span>);\n    }\n\n    _filter(data) {\n        <span class=\"hljs-keyword\">const</span> keywords = <span class=\"hljs-keyword\">this</span>.state.keywords;\n        <span class=\"hljs-keyword\">if</span> (!keywords) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n        <span class=\"hljs-keyword\">return</span> data.label.includes(keywords);\n    }\n    \n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            &lt;div&gt;\n                &lt;Input value={this.state.keywords} on$change-value={(c, keywords) =&gt; this.setState({keywords})} placeholder=\"Please enter keywords to filter node.\"/&gt;\n                &lt;Tree \n                    data={[\n                        {\n                            label: 'First floor-1',\n                            key: '1',\n                            children: [\n                                {\n                                    label: 'Second floor-1.1',\n                                    key: '1-1',\n                                    children: [\n                                        {\n                                            label: 'Third floor-1.1.1',\n                                            key: '1-1-1'\n                                        }\n                                    ]\n                                }\n                            ]\n                        },\n                        {\n                            label: 'First floor-2',\n                            key: '2',\n                            children: [\n                                {\n                                    label: 'Second floor-2.1',\n                                    key: '2-1',\n                                    children: [\n                                        {\n                                            label: 'Third floor-2.1.1',\n                                            key: '2-1-1' \n                                        },\n                                        {\n                                            label: 'Third floor-2.1.2',\n                                            key: '2-1-2'\n                                        }\n                                    ]\n                                },\n                                {\n                                    label: 'Second floor-2.2',\n                                    disabled: true,\n                                    key: '2-2',\n                                    children: [\n                                        {\n                                            label: 'Third floor-2.2.1',\n                                            key: '2-2-1'\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ]}\n                    expandedKeys={this.state.expandedKeys}\n                    on$change-expandedKeys={(c, expandedKeys) =&gt; this.setState({expandedKeys})}\n                    filter={this._filter}\n                /&gt;\n            &lt;/div&gt;\n        )\n    }\n}</code></pre>"
        },
        {
            "language": "ts",
            "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> {Component} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-meta\">@Component</span>({\n    selector: <span class=\"hljs-string\">'app-demo'</span>,\n    template: <span class=\"hljs-string\">`\n        &lt;div&gt;\n            &lt;k-input [(value)]=\"keywords\" placeholder=\"Please enter keywords to filter node.\"&gt;&lt;/k-input&gt;\n            &lt;k-tree \n                [data]=\"[\n                    {\n                        label: 'First floor-1',\n                        key: '1',\n                        children: [\n                            {\n                                label: 'Second floor-1.1',\n                                key: '1-1',\n                                children: [\n                                    {\n                                        label: 'Third floor-1.1.1',\n                                        key: '1-1-1'\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        label: 'First floor-2',\n                        key: '2',\n                        children: [\n                            {\n                                label: 'Second floor-2.1',\n                                key: '2-1',\n                                children: [\n                                    {\n                                        label: 'Third floor-2.1.1',\n                                        key: '2-1-1' \n                                    },\n                                    {\n                                        label: 'Third floor-2.1.2',\n                                        key: '2-1-2'\n                                    }\n                                ]\n                            },\n                            {\n                                label: 'Second floor-2.2',\n                                disabled: true,\n                                key: '2-2',\n                                children: [\n                                    {\n                                        label: 'Third floor-2.2.1',\n                                        key: '2-2-1'\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\"\n                [(expandedKeys)]=\"expandedKeys\"\n                [filter]=\"_filter\"\n            &gt;&lt;/k-tree&gt;\n        &lt;/div&gt;\n    `</span>,\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> AppDemoComponent {\n    <span class=\"hljs-keyword\">private</span> keywords;\n    <span class=\"hljs-keyword\">private</span> expandedKeys = [\n        <span class=\"hljs-string\">\"2\"</span>,\n        <span class=\"hljs-string\">\"2-1\"</span>\n    ];\n\n    _filter = <span class=\"hljs-function\">(<span class=\"hljs-params\">data</span>) =&gt;</span> {\n        <span class=\"hljs-keyword\">const</span> keywords = <span class=\"hljs-keyword\">this</span>.keywords;\n        <span class=\"hljs-keyword\">if</span> (!keywords) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n        <span class=\"hljs-keyword\">return</span> data.label.includes(keywords);\n    }\n}</code></pre>"
        }
    ]
}