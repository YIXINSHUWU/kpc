{
    "setting": {
        "title": "图形",
        "order": 1
    },
    "catalogs": [],
    "contents": "<p>该示例展示了所有内置的图形，并且开启了<code>Diagram</code>的一些功能，你可以拖动和连线它们，关于图形组件的属性，见API部分</p>\n<blockquote>\n<p><code>movable/resizable/ratatable</code>功能需要同时开启<code>selectable</code>才能生效</p>\n</blockquote>\n",
    "index": 77,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {\n    Diagram, DStackLayout,\n    DRectangle, DSquare, DCircle, DEllipse,\n    DImage, DText, DDiamond, DParallelogram,\n    DHexagon, DTriangle, DCylinder, DCloud,\n    DDocument, DCallout,\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/diagram'</span>;\n<span class=\"hljs-keyword\">import</span> {Button, ButtonGroup} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>\n\n<span class=\"hljs-keyword\">const</span> states = self.get(<span class=\"hljs-string\">'states'</span>);\n&lt;div&gt;\n    &lt;ButtonGroup checkType=\"checkbox\" v-model=\"selectedStates\"&gt;\n        &lt;Button v-for={{ states }} value={{ key }}&gt;\n            {{ key }}\n        &lt;/Button&gt;\n    &lt;/ButtonGroup&gt;\n    &lt;br /&gt;\n    &lt;Diagram&gt;\n        &lt;DStackLayout spacing=\"20\" wrap=\"500\" border=\"20\"&gt;\n            &lt;DRectangle {{ ...states }} /&gt; \n            &lt;DSquare {{ ...states }} /&gt;\n            &lt;DCircle {{ ...states }} /&gt;\n            &lt;DEllipse {{ ...states }} /&gt;\n            &lt;DImage src=\"https://design.ksyun.com/fonts/logo.png\" {{ ...states }} /&gt;\n            &lt;DText label=\"text\" {{ ...states }} /&gt;\n            &lt;DDiamond {{ ...states }} /&gt;\n            &lt;DParallelogram {{ ...states }} /&gt;\n            &lt;DHexagon {{ ...states }} /&gt;\n            &lt;DTriangle {{ ...states }} /&gt;\n            &lt;DCylinder {{ ...states }} /&gt;\n            &lt;DCloud {{ ...states }} /&gt;\n            &lt;DDocument {{ ...states }} /&gt;\n            &lt;DCallout {{ ...states }} /&gt;\n        &lt;/DStackLayout&gt;\n    &lt;/Diagram&gt;\n&lt;/div&gt;</code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">states</span>: {\n                <span class=\"hljs-attr\">selectable</span>: <span class=\"hljs-literal\">false</span>,\n                <span class=\"hljs-attr\">movable</span>: <span class=\"hljs-literal\">false</span>,\n                <span class=\"hljs-attr\">connectable</span>: <span class=\"hljs-literal\">false</span>,\n                <span class=\"hljs-attr\">resizable</span>: <span class=\"hljs-literal\">false</span>,\n                <span class=\"hljs-attr\">rotatable</span>: <span class=\"hljs-literal\">false</span>,\n                <span class=\"hljs-attr\">editable</span>: <span class=\"hljs-literal\">false</span>,\n            },\n            <span class=\"hljs-attr\">selectedStates</span>: [],\n        }\n    }\n\n    _init() {\n        <span class=\"hljs-keyword\">this</span>.on(<span class=\"hljs-string\">'$change:selectedStates'</span>, (c, v) =&gt; {\n            <span class=\"hljs-keyword\">const</span> states = {};\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">this</span>.get(<span class=\"hljs-string\">'states'</span>)) {\n                states[key] = v.indexOf(key) &gt; <span class=\"hljs-number\">-1</span>;\n            }\n            <span class=\"hljs-keyword\">this</span>.set(<span class=\"hljs-string\">'states'</span>, states);\n        });\n    }\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\">请参考index.vdt</code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\">请参考index.vdt</code></pre>"
        },
        {
            "language": "ts",
            "content": "<pre><code class=\"hljs ts\">请参考index.vdt</code></pre>"
        }
    ]
}