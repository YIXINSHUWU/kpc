{
    "setting": {
        "title": "自定义展示结果",
        "order": 5.1
    },
    "catalogs": [],
    "contents": "<p>通过<code>value</code>扩展点，我们可以自定义选择结果的展示</p>\n<blockquote>\n<p>此时你不能指定<code>filterable</code>来筛选</p>\n</blockquote>\n",
    "index": 266,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Select, Option} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/select'</span>;\n<span class=\"hljs-keyword\">import</span> {Icon} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/icon'</span>;\n\n&lt;div&gt;\n    &lt;div&gt;\n        &lt;span class=\"label\"&gt;border:&lt;/span&gt;\n        &lt;Select v-model=\"type\"&gt;\n            &lt;Option v-for={{ ['solid', 'dashed', 'dotted'] }}\n                value={{ value }}\n            &gt;\n                &lt;div style={{ {borderBottom: `1px ${value} #666`} }} class=\"line\"&gt;&lt;/div&gt;\n            &lt;/Option&gt;\n            &lt;b:value params=\"value, label\"&gt;\n                &lt;div style={{ {borderBottom: `1px ${value} #666`} }} class=\"line\"&gt;&lt;/div&gt;\n            &lt;/b:value&gt;\n        &lt;/Select&gt;\n        &lt;div style={{ {border: `1px ${self.get('type')} #b2b2b2`} }} class=\"rect\"&gt;\n            Rectangle\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div&gt;\n        &lt;span class=\"label\"&gt;multiple:&lt;/span&gt;\n        &lt;Select v-model=\"icons\" multiple&gt;\n            &lt;Option v-for={{ ['ion-chatbubble', 'ion-person-stalker', 'ion-beer', 'ion-camera'] }}\n                value={{ value }}\n            &gt;\n                &lt;Icon class={{ value }} /&gt;\n            &lt;/Option&gt;\n            &lt;b:value params=\"value, label\"&gt;\n                &lt;Icon class={{ value }} /&gt;\n                &lt;span class=\"c-middle\"&gt;{{ value }}&lt;/span&gt;\n            &lt;/b:value&gt;\n        &lt;/Select&gt;\n    &lt;/div&gt;\n&lt;/div&gt;</code></pre>"
        },
        {
            "language": "styl",
            "content": "<pre><code class=\"hljs styl\">/<span class=\"hljs-selector-class\">.line</span>\n    <span class=\"hljs-attribute\">margin-top</span> <span class=\"hljs-number\">16px</span>\n<span class=\"hljs-selector-class\">.rect</span>\n    <span class=\"hljs-attribute\">display</span> inline-block\n    <span class=\"hljs-attribute\">margin</span> <span class=\"hljs-number\">16px</span>\n    <span class=\"hljs-attribute\">vertical-align</span> middle\n    <span class=\"hljs-attribute\">width</span> <span class=\"hljs-number\">120px</span>\n    <span class=\"hljs-attribute\">height</span> <span class=\"hljs-number\">60px</span>\n    <span class=\"hljs-attribute\">line-height</span> <span class=\"hljs-number\">60px</span>\n    <span class=\"hljs-attribute\">text-align</span> center\n<span class=\"hljs-selector-class\">.c-middle</span>\n    <span class=\"hljs-attribute\">margin-left</span> <span class=\"hljs-number\">6px</span>\n<span class=\"hljs-selector-class\">.label</span>\n    <span class=\"hljs-attribute\">display</span> inline-block\n    <span class=\"hljs-attribute\">width</span> <span class=\"hljs-number\">60px</span>\n    <span class=\"hljs-attribute\">text-align</span> right\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">6px</span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {<span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">'dashed'</span>, <span class=\"hljs-attr\">icons</span>: [<span class=\"hljs-string\">'ion-camera'</span>]};\n    }\n}</code></pre>"
        },
        {
            "language": "vue",
            "content": "<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"label\"</span>&gt;</span>border:<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Select</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"type\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">v-for</span>=<span class=\"hljs-string\">\"(value, key) in ['solid', 'dashed', 'dotted']\"</span>\n                    <span class=\"hljs-attr\">:value</span>=<span class=\"hljs-string\">\"value\"</span>\n                &gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">:style</span>=<span class=\"hljs-string\">\"{borderBottom: `1px ${value} #666`}\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"line\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\">\"value\"</span> <span class=\"hljs-attr\">slot-scope</span>=<span class=\"hljs-string\">\"value, label\"</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">:style</span>=<span class=\"hljs-string\">\"{borderBottom: `1px ${value} #666`}\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"line\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Select</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">:style</span>=<span class=\"hljs-string\">\"{border: `1px ${type} #b2b2b2`}\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"rect\"</span>&gt;</span>\n                Rectangle\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"label\"</span>&gt;</span>multiple:<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Select</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"icons\"</span> <span class=\"hljs-attr\">multiple</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">v-for</span>=<span class=\"hljs-string\">\"(value, key) in ['ion-chatbubble', 'ion-person-stalker', 'ion-beer', 'ion-camera']\"</span>\n                    <span class=\"hljs-attr\">:value</span>=<span class=\"hljs-string\">\"value\"</span>\n                &gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">:class</span>=<span class=\"hljs-string\">\"value\"</span> /&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\">\"value\"</span> <span class=\"hljs-attr\">slot-scope</span>=<span class=\"hljs-string\">\"value, label\"</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Icon</span> <span class=\"hljs-attr\">:class</span>=<span class=\"hljs-string\">\"value\"</span> /&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"c-middle\"</span>&gt;</span>{{ value }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Select</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> {Select, Option} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/select'</span>;\n<span class=\"hljs-keyword\">import</span> {Icon} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-vue/components/icon'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Select, Option, Icon\n    },\n    data() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-string\">\"type\"</span>: <span class=\"hljs-string\">\"dashed\"</span>,\n            <span class=\"hljs-string\">\"icons\"</span>: [\n                <span class=\"hljs-string\">\"ion-camera\"</span>\n            ]\n        }\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"stylus\"</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"./index.styl\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span></code></pre>"
        },
        {
            "language": "jsx",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> {Select, Option} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/select'</span>;\n<span class=\"hljs-keyword\">import</span> {Icon} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc-react/components/icon'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Demo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n    <span class=\"hljs-keyword\">constructor</span>(props) {\n        <span class=\"hljs-keyword\">super</span>(props);\n        <span class=\"hljs-keyword\">this</span>.state = {\n            <span class=\"hljs-string\">\"type\"</span>: <span class=\"hljs-string\">\"dashed\"</span>,\n            <span class=\"hljs-string\">\"icons\"</span>: [\n                <span class=\"hljs-string\">\"ion-camera\"</span>\n            ]\n        };\n        <span class=\"hljs-keyword\">this</span>._classNames = <span class=\"hljs-keyword\">this</span>._classNames.bind(<span class=\"hljs-keyword\">this</span>);\n    }\n\n    _classNames(classNames) {\n        <span class=\"hljs-keyword\">const</span> ret = [];\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> classNames) {\n            <span class=\"hljs-keyword\">const</span> value = classNames[key];\n            <span class=\"hljs-keyword\">if</span> (value) {\n                ret.push(key);\n            }\n        }\n        <span class=\"hljs-keyword\">return</span> ret.join(<span class=\"hljs-string\">' '</span>);\n    }\n    \n    render() {\n        <span class=\"hljs-keyword\">return</span> (\n            &lt;div&gt;\n                &lt;div&gt;\n                    &lt;span className=\"label\"&gt;border:&lt;/span&gt;\n                    &lt;Select value={this.state.type} on$change-value={(c, type) =&gt; this.setState({type})}\n                        b-value={(value, label) =&gt; {\n                            return &lt;React.Fragment&gt;\n                                &lt;div style={{borderBottom: `1px ${value} #666`}} className=\"line\"&gt;&lt;/div&gt;\n                            &lt;/React.Fragment&gt;\n                        }}\n                    &gt;\n                        {['solid', 'dashed', 'dotted'].map((value, key) =&gt; {\n                            return (\n                                &lt;Option\n                                    value={value}\n                                &gt;\n                                    &lt;div style={{borderBottom: `1px ${value} #666`}} className=\"line\"&gt;&lt;/div&gt;\n                                &lt;/Option&gt;\n                            )\n                        })}\n                    &lt;/Select&gt;\n                    &lt;div style={{border: `1px ${this.state.type} #b2b2b2`}} className=\"rect\"&gt;\n                        Rectangle\n                    &lt;/div&gt;\n                &lt;/div&gt;\n                &lt;div&gt;\n                    &lt;span className=\"label\"&gt;multiple:&lt;/span&gt;\n                    &lt;Select value={this.state.icons} on$change-value={(c, icons) =&gt; this.setState({icons})} multiple\n                        b-value={(value, label) =&gt; {\n                            return &lt;React.Fragment&gt;\n                                &lt;Icon className={this._classNames(value)} /&gt;\n                                &lt;span className=\"c-middle\"&gt;{value}&lt;/span&gt;\n                            &lt;/React.Fragment&gt;\n                        }}\n                    &gt;\n                        {['ion-chatbubble', 'ion-person-stalker', 'ion-beer', 'ion-camera'].map((value, key) =&gt; {\n                            return (\n                                &lt;Option\n                                    value={value}\n                                &gt;\n                                    &lt;Icon className={this._classNames(value)} /&gt;\n                                &lt;/Option&gt;\n                            )\n                        })}\n                    &lt;/Select&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        )\n    }\n}</code></pre>"
        },
        {
            "language": "ts",
            "content": "<pre><code class=\"hljs ts\"><span class=\"hljs-keyword\">import</span> {Component} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-meta\">@Component</span>({\n    selector: <span class=\"hljs-string\">'app-demo'</span>,\n    template: <span class=\"hljs-string\">`\n        &lt;div&gt;\n            &lt;div&gt;\n                &lt;span class=\"label\"&gt;border:&lt;/span&gt;\n                &lt;k-select [(value)]=\"type\"&gt;\n                    &lt;k-option *ngFor=\"let value of ['solid', 'dashed', 'dotted']; index as key\"\n                        [value]=\"value\"\n                    &gt;\n                        &lt;div [style]=\"{borderBottom: this['1px ' + value + ' #666']}\" class=\"line\"&gt;&lt;/div&gt;\n                    &lt;/k-option&gt;\n                    &lt;ng-template #value let-value=\"args[0]\" let-label=\"args[1]\"&gt;\n                        &lt;div [style]=\"{borderBottom: this['1px ' + value + ' #666']}\" class=\"line\"&gt;&lt;/div&gt;\n                    &lt;/ng-template&gt;\n                &lt;/k-select&gt;\n                &lt;div [style]=\"{border: this['1px ' + type + ' #b2b2b2']}\" class=\"rect\"&gt;\n                    Rectangle\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div&gt;\n                &lt;span class=\"label\"&gt;multiple:&lt;/span&gt;\n                &lt;k-select [(value)]=\"icons\" [multiple]=\"true\"&gt;\n                    &lt;k-option *ngFor=\"let value of ['ion-chatbubble', 'ion-person-stalker', 'ion-beer', 'ion-camera']; index as key\"\n                        [value]=\"value\"\n                    &gt;\n                        &lt;k-icon [ngClass]=\"value\"&gt;&lt;/k-icon&gt;\n                    &lt;/k-option&gt;\n                    &lt;ng-template #value let-value=\"args[0]\" let-label=\"args[1]\"&gt;\n                        &lt;k-icon [ngClass]=\"value\"&gt;&lt;/k-icon&gt;\n                        &lt;span class=\"c-middle\"&gt;{{ value }}&lt;/span&gt;\n                    &lt;/ng-template&gt;\n                &lt;/k-select&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    `</span>,\n    styleUrls: [<span class=\"hljs-string\">'./index.styl'</span>],\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> AppDemoComponent {\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">type</span> = <span class=\"hljs-string\">\"dashed\"</span>;\n    <span class=\"hljs-keyword\">private</span> icons = [\n        <span class=\"hljs-string\">\"ion-camera\"</span>\n    ];\n}</code></pre>"
        }
    ]
}